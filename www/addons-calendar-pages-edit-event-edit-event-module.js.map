{"version":3,"sources":["./src/addons/calendar/pages/edit-event/edit-event.html","./src/addons/calendar/pages/edit-event/edit-event.module.ts","./src/addons/calendar/pages/edit-event/edit-event.page.ts","./src/addons/calendar/pages/edit-event/edit-event.scss"],"names":[],"mappings":"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","file":"addons-calendar-pages-edit-event-edit-event-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>{{ title | translate }}</h1>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshData($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <form [formGroup]=\\\"form\\\" *ngIf=\\\"!error\\\" #editEventForm>\\r\\n            <!-- Event name. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label position=\\\"stacked\\\">\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'addon.calendar.eventname' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"text\\\" name=\\\"name\\\" [placeholder]=\\\"'addon.calendar.eventname' | translate\\\" formControlName=\\\"name\\\">\\r\\n                </ion-input>\\r\\n                <core-input-errors [control]=\\\"form.controls.name\\\" [errorMessages]=\\\"errors\\\"></core-input-errors>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Date. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label position=\\\"stacked\\\">\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.date' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <ion-datetime formControlName=\\\"timestart\\\" [placeholder]=\\\"'core.date' | translate\\\" [displayFormat]=\\\"dateFormat\\\"\\r\\n                    [max]=\\\"maxDate\\\" [min]=\\\"minDate\\\" display-timezone=\\\"utc\\\">\\r\\n                </ion-datetime>\\r\\n                <core-input-errors [control]=\\\"form.controls.timestart\\\" [errorMessages]=\\\"errors\\\"></core-input-errors>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Type. -->\\r\\n            <ion-item class=\\\"ion-text-wrap addon-calendar-eventtype-container\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'addon.calendar.eventkind' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <p *ngIf=\\\"eventTypes.length == 1\\\" slot=\\\"end\\\">{{eventTypes[0].name | translate }}</p>\\r\\n                <ion-select\\r\\n                    *ngIf=\\\"eventTypes.length > 1\\\"\\r\\n                    formControlName=\\\"eventtype\\\"\\r\\n                    interface=\\\"action-sheet\\\"\\r\\n                    [interfaceOptions]=\\\"{header: 'addon.calendar.eventkind' | translate}\\\"\\r\\n                >\\r\\n                    <ion-select-option *ngFor=\\\"let type of eventTypes\\\" [value]=\\\"type.value\\\">\\r\\n                        {{ type.name | translate }}\\r\\n                    </ion-select-option>\\r\\n                </ion-select>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Category. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"typeControl.value == 'category'\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.category' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <ion-select formControlName=\\\"categoryid\\\" interface=\\\"action-sheet\\\" [placeholder]=\\\"'core.noselection' | translate\\\"\\r\\n                    [interfaceOptions]=\\\"{header: 'core.category' | translate}\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.id\\\">\\r\\n                        {{ category.name }}\\r\\n                    </ion-select-option>\\r\\n                </ion-select>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Course. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"typeControl.value == 'course'\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.course' | translate }}</p>\\r\\n                </ion-label>\\r\\n                <ion-select formControlName=\\\"courseid\\\" interface=\\\"action-sheet\\\" [placeholder]=\\\"'core.noselection' | translate\\\"\\r\\n                    [interfaceOptions]=\\\"{header: 'core.course' | translate}\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let course of courses\\\" [value]=\\\"course.id\\\">{{ course.fullname }}</ion-select-option>\\r\\n                </ion-select>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Group. -->\\r\\n            <ng-container *ngIf=\\\"typeControl.value == 'group'\\\">\\r\\n                <!-- Select the course. -->\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.course' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-select formControlName=\\\"groupcourseid\\\"\\r\\n                        interface=\\\"action-sheet\\\" [placeholder]=\\\"'core.noselection' | translate\\\"\\r\\n                        (ionChange)=\\\"groupCourseSelected()\\\" [interfaceOptions]=\\\"{header: 'core.course' | translate}\\\">\\r\\n                        <ion-select-option *ngFor=\\\"let course of courses\\\" [value]=\\\"course.id\\\">\\r\\n                            {{ course.fullname }}\\r\\n                        </ion-select-option>\\r\\n                    </ion-select>\\r\\n                </ion-item>\\r\\n                <!-- The course has no groups. -->\\r\\n                <ion-item class=\\\"ion-text-wrap core-danger-item\\\" *ngIf=\\\"!loadingGroups && courseGroupSet && !groups.length\\\">\\r\\n                    <ion-label><p>{{ 'core.coursenogroups' | translate }}</p></ion-label>\\r\\n                </ion-item>\\r\\n                <!-- Select the group. -->\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"!loadingGroups && groups.length > 0\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\" [core-mark-required]=\\\"true\\\">{{ 'core.group' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-select formControlName=\\\"groupid\\\" interface=\\\"action-sheet\\\" [placeholder]=\\\"'core.noselection' | translate\\\"\\r\\n                        [interfaceOptions]=\\\"{header: 'core.group' | translate}\\\">\\r\\n                        <ion-select-option *ngFor=\\\"let group of groups\\\" [value]=\\\"group.id\\\">{{ group.name }}</ion-select-option>\\r\\n                    </ion-select>\\r\\n                </ion-item>\\r\\n                <!-- Loading groups. -->\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"loadingGroups\\\">\\r\\n                    <ion-label>\\r\\n                        <ion-spinner *ngIf=\\\"loadingGroups\\\" [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Advanced options. -->\\r\\n            <ion-item button class=\\\"ion-text-wrap divider\\\" (click)=\\\"toggleAdvanced()\\\" detail=\\\"false\\\">\\r\\n                <ion-icon *ngIf=\\\"!advanced\\\" name=\\\"fas-caret-right\\\" flip-rtl slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-icon *ngIf=\\\"advanced\\\" name=\\\"fas-caret-down\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\" *ngIf=\\\"!advanced\\\">{{ 'core.showmore' | translate }}</p>\\r\\n                    <p class=\\\"item-heading\\\" *ngIf=\\\"advanced\\\">{{ 'core.showless' | translate }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <div [hidden]=\\\"!advanced\\\">\\r\\n                <!-- Description. -->\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label position=\\\"stacked\\\">\\r\\n                        <p class=\\\"item-heading\\\">{{ 'core.description' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <core-rich-text-editor [control]=\\\"descriptionControl\\\" [attr.aria-label]=\\\"'core.description' | translate\\\"\\r\\n                        [placeholder]=\\\"'core.description' | translate\\\" name=\\\"description\\\" [component]=\\\"component\\\"\\r\\n                        [componentId]=\\\"eventId\\\" [autoSave]=\\\"false\\\"></core-rich-text-editor>\\r\\n                </ion-item>\\r\\n\\r\\n                <!-- Location. -->\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label position=\\\"stacked\\\">\\r\\n                        <p class=\\\"item-heading\\\">{{ 'core.location' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-input type=\\\"text\\\" name=\\\"location\\\" [placeholder]=\\\"'core.location' | translate\\\" formControlName=\\\"location\\\">\\r\\n                    </ion-input>\\r\\n                </ion-item>\\r\\n\\r\\n                <!-- Duration. -->\\r\\n                <div class=\\\"ion-text-wrap addon-calendar-radio-container\\\">\\r\\n                    <ion-radio-group formControlName=\\\"duration\\\">\\r\\n                        <ion-item-divider class=\\\"addon-calendar-radio-title\\\">\\r\\n                            <ion-label>\\r\\n                                <p class=\\\"item-heading\\\">{{ 'addon.calendar.eventduration' | translate }}</p>\\r\\n                            </ion-label>\\r\\n                        </ion-item-divider>\\r\\n                        <ion-item>\\r\\n                            <ion-label>\\r\\n                                <p>{{ 'addon.calendar.durationnone' | translate }}</p>\\r\\n                            </ion-label>\\r\\n                            <ion-radio slot=\\\"end\\\" [value]=\\\"0\\\"></ion-radio>\\r\\n                        </ion-item>\\r\\n                        <ion-item lines=\\\"none\\\">\\r\\n                            <ion-label>\\r\\n                                <p>{{ 'addon.calendar.durationuntil' | translate }}</p>\\r\\n                            </ion-label>\\r\\n                            <ion-radio slot=\\\"end\\\" [value]=\\\"1\\\"></ion-radio>\\r\\n                        </ion-item>\\r\\n                        <ion-item>\\r\\n                            <ion-label position=\\\"stacked\\\"></ion-label>\\r\\n                            <ion-datetime formControlName=\\\"timedurationuntil\\\" [max]=\\\"maxDate\\\" [min]=\\\"minDate\\\"\\r\\n                                [placeholder]=\\\"'addon.calendar.durationuntil' | translate\\\"\\r\\n                                [displayFormat]=\\\"dateFormat\\\" [disabled]=\\\"form.controls.duration.value != 1\\\"\\r\\n                                display-timezone=\\\"utc\\\">\\r\\n                            </ion-datetime>\\r\\n                        </ion-item>\\r\\n                        <ion-item lines=\\\"none\\\">\\r\\n                            <ion-label>\\r\\n                                <p>{{ 'addon.calendar.durationminutes' | translate }}</p>\\r\\n                            </ion-label>\\r\\n                            <ion-radio slot=\\\"end\\\" [value]=\\\"2\\\"></ion-radio>\\r\\n                        </ion-item>\\r\\n                        <ion-item>\\r\\n                            <ion-label class=\\\"sr-only\\\">{{ 'addon.calendar.durationminutes' | translate }}</ion-label>\\r\\n                            <ion-input type=\\\"number\\\" name=\\\"timedurationminutes\\\" slot=\\\"end\\\"\\r\\n                                [placeholder]=\\\"'addon.calendar.durationminutes' | translate\\\"\\r\\n                                formControlName=\\\"timedurationminutes\\\" [disabled]=\\\"form.controls.duration.value != 2\\\"></ion-input>\\r\\n                        </ion-item>\\r\\n                    </ion-radio-group>\\r\\n                </div>\\r\\n\\r\\n                <!-- Repeat (for new events). -->\\r\\n                <ng-container *ngIf=\\\"!eventId || eventId < 0\\\">\\r\\n                    <ion-item class=\\\"ion-text-wrap divider\\\" lines=\\\"none\\\">\\r\\n                        <ion-label>\\r\\n                            <p class=\\\"item-heading\\\">{{ 'addon.calendar.repeatevent' | translate }}</p>\\r\\n                        </ion-label>\\r\\n                        <ion-checkbox slot=\\\"end\\\" formControlName=\\\"repeat\\\"></ion-checkbox>\\r\\n                    </ion-item>\\r\\n                    <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                        <ion-label position=\\\"stacked\\\">\\r\\n                            <p>{{ 'addon.calendar.repeatweeksl' | translate }}</p>\\r\\n                        </ion-label>\\r\\n                        <ion-input type=\\\"number\\\" name=\\\"repeats\\\" formControlName=\\\"repeats\\\" [disabled]=\\\"!form.controls.repeat.value\\\">\\r\\n                        </ion-input>\\r\\n                    </ion-item>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Apply to all events or just this one (editing repeated events). -->\\r\\n                <div *ngIf=\\\"eventRepeatId\\\" class=\\\"ion-text-wrap addon-calendar-radio-container\\\">\\r\\n                    <ion-radio-group formControlName=\\\"repeateditall\\\">\\r\\n                        <ion-item-divider class=\\\"addon-calendar-radio-title\\\">\\r\\n                            <ion-label>\\r\\n                                <p class=\\\"item-heading\\\">{{ 'addon.calendar.repeatedevents' | translate }}</p>\\r\\n                            </ion-label>\\r\\n                        </ion-item-divider>\\r\\n                        <ion-item>\\r\\n                            <ion-label>\\r\\n                                <p>{{ 'addon.calendar.repeateditall' | translate:{$a: otherEventsCount} }}</p>\\r\\n                            </ion-label>\\r\\n                            <ion-radio slot=\\\"end\\\" value=\\\"1\\\"></ion-radio>\\r\\n                        </ion-item>\\r\\n                        <ion-item>\\r\\n                            <ion-label>\\r\\n                                <p>{{ 'addon.calendar.repeateditthis' | translate }}</p>\\r\\n                            </ion-label>\\r\\n                            <ion-radio slot=\\\"end\\\" value=\\\"0\\\"></ion-radio>\\r\\n                        </ion-item>\\r\\n                    </ion-radio-group>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <ion-item>\\r\\n                <ion-label>\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-button expand=\\\"block\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\">\\r\\n                                {{ 'core.save' | translate }}\\r\\n                            </ion-button>\\r\\n                        </ion-col>\\r\\n                        <ion-col *ngIf=\\\"hasOffline && eventId && eventId < 0\\\">\\r\\n                            <ion-button expand=\\\"block\\\" color=\\\"light\\\" (click)=\\\"discard()\\\">\\r\\n                                {{ 'core.discard' | translate }}\\r\\n                            </ion-button>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </form>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreEditorComponentsModule } from '@features/editor/components/components.module';\r\n\r\nimport { AddonCalendarEditEventPage } from './edit-event.page';\r\nimport { CanLeaveGuard } from '@guards/can-leave';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonCalendarEditEventPage,\r\n        canDeactivate: [CanLeaveGuard],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        CoreEditorComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonCalendarEditEventPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonCalendarEditEventPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef, Optional } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { IonRefresher } from '@ionic/angular';\r\nimport { CoreEvents } from '@singletons/events';\r\nimport { CoreGroup, CoreGroups } from '@services/groups';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreSync } from '@services/sync';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreTimeUtils } from '@services/utils/time';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { CoreCategoryData, CoreCourses, CoreCourseSearchedData, CoreEnrolledCourseData } from '@features/courses/services/courses';\r\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\r\nimport { CoreEditorRichTextEditorComponent } from '@features/editor/components/rich-text-editor/rich-text-editor';\r\nimport {\r\n    AddonCalendarProvider,\r\n    AddonCalendarGetCalendarAccessInformationWSResponse,\r\n    AddonCalendarEvent,\r\n    AddonCalendarEventType,\r\n    AddonCalendar,\r\n    AddonCalendarSubmitCreateUpdateFormDataWSParams,\r\n} from '../../services/calendar';\r\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\r\nimport { AddonCalendarEventTypeOption, AddonCalendarHelper } from '../../services/calendar-helper';\r\nimport { AddonCalendarSync, AddonCalendarSyncProvider } from '../../services/calendar-sync';\r\nimport { CoreSite } from '@classes/site';\r\nimport { Translate } from '@singletons';\r\nimport { CoreFilterHelper } from '@features/filter/services/filter-helper';\r\nimport { AddonCalendarOfflineEventDBRecord } from '../../services/database/calendar-offline';\r\nimport { CoreError } from '@classes/errors/error';\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { CanLeave } from '@guards/can-leave';\r\nimport { CoreForms } from '@singletons/form';\r\n\r\n/**\r\n * Page that displays a form to create/edit an event.\r\n */\r\n@Component({\r\n    selector: 'page-addon-calendar-edit-event',\r\n    templateUrl: 'edit-event.html',\r\n    styleUrls: ['edit-event.scss'],\r\n})\r\nexport class AddonCalendarEditEventPage implements OnInit, OnDestroy, CanLeave {\r\n\r\n    @ViewChild(CoreEditorRichTextEditorComponent) descriptionEditor!: CoreEditorRichTextEditorComponent;\r\n    @ViewChild('editEventForm') formElement!: ElementRef;\r\n\r\n    title = 'addon.calendar.newevent';\r\n    dateFormat: string;\r\n    component = AddonCalendarProvider.COMPONENT;\r\n    loaded = false;\r\n    hasOffline = false;\r\n    eventTypes: AddonCalendarEventTypeOption[] = [];\r\n    categories: CoreCategoryData[] = [];\r\n    courses: CoreCourseSearchedData[] | CoreEnrolledCourseData[] = [];\r\n    groups: CoreGroup[] = [];\r\n    loadingGroups = false;\r\n    courseGroupSet = false;\r\n    advanced = false;\r\n    errors: Record<string, string>;\r\n    error = false;\r\n    eventRepeatId?: number;\r\n    otherEventsCount = 0;\r\n    eventId?: number;\r\n    maxDate: string;\r\n    minDate: string;\r\n\r\n    // Form variables.\r\n    form: FormGroup;\r\n    typeControl: FormControl;\r\n    groupControl: FormControl;\r\n    descriptionControl: FormControl;\r\n\r\n    protected courseId!: number;\r\n    protected originalData?: AddonCalendarOfflineEventDBRecord;\r\n    protected currentSite: CoreSite;\r\n    protected types: { [name: string]: boolean } = {}; // Object with the supported types.\r\n    protected showAll = false;\r\n    protected isDestroyed = false;\r\n    protected gotEventData = false;\r\n\r\n    constructor(\r\n        protected fb: FormBuilder,\r\n        @Optional() protected svComponent: CoreSplitViewComponent,\r\n    ) {\r\n        this.currentSite = CoreSites.getCurrentSite()!;\r\n        this.errors = {\r\n            required: Translate.instant('core.required'),\r\n        };\r\n\r\n        // Calculate format to use. ion-datetime doesn't support escaping characters ([]), so we remove them.\r\n        this.dateFormat = CoreTimeUtils.convertPHPToMoment(Translate.instant('core.strftimedatetimeshort'))\r\n            .replace(/[[\\]]/g, '');\r\n\r\n        this.form = new FormGroup({});\r\n\r\n        // Initialize form variables.\r\n        this.typeControl = this.fb.control('', Validators.required);\r\n        this.groupControl = this.fb.control('');\r\n        this.descriptionControl = this.fb.control('');\r\n        this.form.addControl('name', this.fb.control('', Validators.required));\r\n        this.form.addControl('eventtype', this.typeControl);\r\n        this.form.addControl('categoryid', this.fb.control(''));\r\n        this.form.addControl('groupcourseid', this.fb.control(''));\r\n        this.form.addControl('groupid', this.groupControl);\r\n        this.form.addControl('description', this.descriptionControl);\r\n        this.form.addControl('location', this.fb.control(''));\r\n        this.form.addControl('duration', this.fb.control(0));\r\n        this.form.addControl('timedurationminutes', this.fb.control(''));\r\n        this.form.addControl('repeat', this.fb.control(false));\r\n        this.form.addControl('repeats', this.fb.control('1'));\r\n        this.form.addControl('repeateditall', this.fb.control(1));\r\n\r\n        this.maxDate = CoreTimeUtils.getDatetimeDefaultMax();\r\n        this.minDate = CoreTimeUtils.getDatetimeDefaultMin();\r\n    }\r\n\r\n    /**\r\n     * Component being initialized.\r\n     */\r\n    ngOnInit(): void {\r\n        this.eventId = CoreNavigator.getRouteNumberParam('eventId') || undefined;\r\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId') || 0;\r\n        this.title = this.eventId ? 'addon.calendar.editevent' : 'addon.calendar.newevent';\r\n\r\n        const timestamp = CoreNavigator.getRouteNumberParam('timestamp');\r\n        const currentDate = CoreTimeUtils.toDatetimeFormat(timestamp);\r\n        this.form.addControl('timestart', this.fb.control(currentDate, Validators.required));\r\n        this.form.addControl('timedurationuntil', this.fb.control(currentDate));\r\n        this.form.addControl('courseid', this.fb.control(this.courseId));\r\n\r\n        this.fetchData().finally(() => {\r\n            this.originalData = CoreUtils.clone(this.form.value);\r\n            this.loaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch the data needed to render the form.\r\n     *\r\n     * @param refresh Whether it's refreshing data.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchData(): Promise<void> {\r\n        let accessInfo: AddonCalendarGetCalendarAccessInformationWSResponse;\r\n\r\n        this.error = false;\r\n\r\n        // Get access info.\r\n        try {\r\n            accessInfo = await AddonCalendar.getAccessInformation(this.courseId);\r\n            this.types = await AddonCalendar.getAllowedEventTypes(this.courseId);\r\n\r\n            const promises: Promise<void>[] = [];\r\n            const eventTypes = AddonCalendarHelper.getEventTypeOptions(this.types);\r\n\r\n            if (!eventTypes.length) {\r\n                throw new CoreError(Translate.instant('addon.calendar.nopermissiontoupdatecalendar'));\r\n            }\r\n\r\n            if (this.eventId && !this.gotEventData) {\r\n                // Editing an event, get the event data. Wait for sync first.\r\n                promises.push(AddonCalendarSync.waitForSync(AddonCalendarSyncProvider.SYNC_ID).then(async () => {\r\n                    // Do not block if the scope is already destroyed.\r\n                    if (!this.isDestroyed && this.eventId) {\r\n                        CoreSync.blockOperation(AddonCalendarProvider.COMPONENT, this.eventId);\r\n                    }\r\n\r\n                    let eventForm: AddonCalendarEvent | AddonCalendarOfflineEventDBRecord | undefined;\r\n\r\n                    // Get the event offline data if there's any.\r\n                    try {\r\n                        eventForm = await AddonCalendarOffline.getEvent(this.eventId!);\r\n\r\n                        this.hasOffline = true;\r\n                    } catch {\r\n                        // No offline data.\r\n                        this.hasOffline = false;\r\n                    }\r\n\r\n                    if (this.eventId! > 0) {\r\n                        // It's an online event. get its data from server.\r\n                        const event = await AddonCalendar.getEventById(this.eventId!);\r\n\r\n                        if (!eventForm) {\r\n                            eventForm = event; // Use offline data first.\r\n                        }\r\n\r\n                        this.eventRepeatId = event?.repeatid;\r\n                        if (this.eventRepeatId) {\r\n\r\n                            this.otherEventsCount = event.eventcount ? event.eventcount - 1 : 0;\r\n                        }\r\n                    }\r\n\r\n                    this.gotEventData = true;\r\n\r\n                    if (eventForm) {\r\n                        // Load the data in the form.\r\n                        return this.loadEventData(eventForm, this.hasOffline);\r\n                    }\r\n\r\n                    return;\r\n                }));\r\n            }\r\n\r\n            if (this.types.category) {\r\n                // Get the categories.\r\n                promises.push(this.fetchCategories());\r\n            }\r\n\r\n            this.showAll = CoreUtils.isTrueOrOne(this.currentSite.getStoredConfig('calendar_adminseesall')) &&\r\n                accessInfo.canmanageentries;\r\n\r\n            if (this.types.course || this.types.groups) {\r\n                promises.push(this.fetchCourses());\r\n            }\r\n            await Promise.all(promises);\r\n\r\n            if (!this.typeControl.value) {\r\n                // Initialize event type value. If course is allowed, select it first.\r\n                if (this.types.course) {\r\n                    this.typeControl.setValue(AddonCalendarEventType.COURSE);\r\n                } else {\r\n                    this.typeControl.setValue(eventTypes[0].value);\r\n                }\r\n            }\r\n\r\n            this.eventTypes = eventTypes;\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting data.');\r\n            this.error = true;\r\n        }\r\n    }\r\n\r\n    protected async fetchCategories(): Promise<void> {\r\n        this.categories = await CoreCourses.getCategories(0, true);\r\n    }\r\n\r\n    protected async fetchCourses(): Promise<void> {\r\n        // Get the courses.\r\n        let courses = await (this.showAll ? CoreCourses.getCoursesByField() : CoreCourses.getUserCourses());\r\n\r\n        if (courses.length < 0) {\r\n            this.courses = [];\r\n\r\n            return;\r\n        }\r\n\r\n        const courseFillterFullname = (course: CoreCourseSearchedData | CoreEnrolledCourseData): Promise<void> =>\r\n            CoreFilterHelper.getFiltersAndFormatText(course.fullname, 'course', course.id)\r\n                .then((result) => {\r\n                    course.fullname = result.text;\r\n\r\n                    return;\r\n                }).catch(() => {\r\n                    // Ignore errors.\r\n                });\r\n\r\n        if (this.showAll) {\r\n            // Remove site home from the list of courses.\r\n            const siteHomeId = CoreSites.getCurrentSiteHomeId();\r\n\r\n            if ('contacts' in courses[0]) {\r\n                courses = (courses as CoreCourseSearchedData[]).filter((course) => course.id != siteHomeId);\r\n            } else {\r\n                courses = (courses as CoreEnrolledCourseData[]).filter((course) => course.id != siteHomeId);\r\n            }\r\n        }\r\n\r\n        // Format the name of the courses.\r\n        if ('contacts' in courses[0]) {\r\n            await Promise.all((courses as CoreCourseSearchedData[]).map(courseFillterFullname));\r\n        } else {\r\n            await Promise.all((courses as CoreEnrolledCourseData[]).map(courseFillterFullname));\r\n        }\r\n\r\n        // Sort courses by name.\r\n        this.courses = courses.sort((a, b) => {\r\n            const compareA = a.fullname.toLowerCase();\r\n            const compareB = b.fullname.toLowerCase();\r\n\r\n            return compareA.localeCompare(compareB);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Load an event data into the form.\r\n     *\r\n     * @param event Event data.\r\n     * @param isOffline Whether the data is from offline or not.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async loadEventData(\r\n        event: AddonCalendarEvent | AddonCalendarOfflineEventDBRecord,\r\n        isOffline: boolean,\r\n    ): Promise<void> {\r\n        if (!event) {\r\n            return;\r\n        }\r\n\r\n        const offlineEvent = (event as AddonCalendarOfflineEventDBRecord);\r\n        const onlineEvent = (event as AddonCalendarEvent);\r\n\r\n        const courseId = isOffline ? offlineEvent.courseid : onlineEvent.course?.id;\r\n\r\n        this.form.controls.name.setValue(event.name);\r\n        this.form.controls.timestart.setValue(CoreTimeUtils.toDatetimeFormat(event.timestart * 1000));\r\n        this.form.controls.eventtype.setValue(event.eventtype);\r\n        this.form.controls.categoryid.setValue(event.categoryid || '');\r\n        this.form.controls.courseid.setValue(courseId || '');\r\n        this.form.controls.groupcourseid.setValue(courseId || '');\r\n        this.form.controls.groupid.setValue(event.groupid || '');\r\n        this.form.controls.description.setValue(event.description);\r\n        this.form.controls.location.setValue(event.location);\r\n\r\n        if (isOffline) {\r\n            // It's an offline event, use the data as it is.\r\n            this.form.controls.duration.setValue(offlineEvent.duration);\r\n            this.form.controls.timedurationuntil.setValue(\r\n                CoreTimeUtils.toDatetimeFormat(((offlineEvent.timedurationuntil || 0) * 1000) || Date.now()),\r\n            );\r\n            this.form.controls.timedurationminutes.setValue(offlineEvent.timedurationminutes || '');\r\n            this.form.controls.repeat.setValue(!!offlineEvent.repeat);\r\n            this.form.controls.repeats.setValue(offlineEvent.repeats || '1');\r\n            this.form.controls.repeateditall.setValue(offlineEvent.repeateditall || 1);\r\n        } else {\r\n            // Online event, we'll have to calculate the data.\r\n\r\n            if (onlineEvent.timeduration > 0) {\r\n                this.form.controls.duration.setValue(1);\r\n                this.form.controls.timedurationuntil.setValue(CoreTimeUtils.toDatetimeFormat(\r\n                    (onlineEvent.timestart + onlineEvent.timeduration) * 1000,\r\n                ));\r\n            } else {\r\n                // No duration.\r\n                this.form.controls.duration.setValue(0);\r\n                this.form.controls.timedurationuntil.setValue(CoreTimeUtils.toDatetimeFormat());\r\n            }\r\n\r\n            this.form.controls.timedurationminutes.setValue('');\r\n            this.form.controls.repeat.setValue(!!onlineEvent.repeatid);\r\n            this.form.controls.repeats.setValue(onlineEvent.eventcount || '1');\r\n            this.form.controls.repeateditall.setValue(1);\r\n        }\r\n\r\n        if (event.eventtype == AddonCalendarEventType.GROUP && courseId) {\r\n            await this.loadGroups(courseId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pull to refresh.\r\n     *\r\n     * @param refresher Refresher.\r\n     */\r\n    refreshData(refresher?: IonRefresher): void {\r\n        const promises = [\r\n            AddonCalendar.invalidateAccessInformation(this.courseId),\r\n            AddonCalendar.invalidateAllowedEventTypes(this.courseId),\r\n        ];\r\n\r\n        if (this.types) {\r\n            if (this.types.category) {\r\n                promises.push(CoreCourses.invalidateCategories(0, true));\r\n            }\r\n            if (this.types.course || this.types.groups) {\r\n                if (this.showAll) {\r\n                    promises.push(CoreCourses.invalidateCoursesByField());\r\n                } else {\r\n                    promises.push(CoreCourses.invalidateUserCourses());\r\n                }\r\n            }\r\n        }\r\n\r\n        Promise.all(promises).finally(() => {\r\n            this.fetchData().finally(() => {\r\n                refresher?.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A course was selected, get its groups.\r\n     */\r\n    async groupCourseSelected(): Promise<void> {\r\n        const courseId = this.form.controls.groupcourseid.value;\r\n        if (!courseId) {\r\n            return;\r\n        }\r\n\r\n        const modal = await CoreDomUtils.showModalLoading();\r\n\r\n        try {\r\n            await this.loadGroups(courseId);\r\n\r\n            this.groupControl.setValue('');\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting data.');\r\n        }\r\n\r\n        modal.dismiss();\r\n    }\r\n\r\n    /**\r\n     * Load groups of a certain course.\r\n     *\r\n     * @param courseId Course ID.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async loadGroups(courseId: number): Promise<void> {\r\n        this.loadingGroups = true;\r\n\r\n        try {\r\n            this.groups = await CoreGroups.getUserGroupsInCourse(courseId);\r\n            this.courseGroupSet = true;\r\n        } finally {\r\n            this.loadingGroups = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show or hide advanced form fields.\r\n     */\r\n    toggleAdvanced(): void {\r\n        this.advanced = !this.advanced;\r\n    }\r\n\r\n    selectDuration(duration: string): void {\r\n        this.form.controls.duration.setValue(duration);\r\n    }\r\n\r\n    /**\r\n     * Create the event.\r\n     */\r\n    async submit(): Promise<void> {\r\n        // Validate data.\r\n        const formData = this.form.value;\r\n        const timeStartDate = CoreTimeUtils.convertToTimestamp(formData.timestart, true);\r\n        const timeUntilDate = CoreTimeUtils.convertToTimestamp(formData.timedurationuntil, true);\r\n        const timeDurationMinutes = parseInt(formData.timedurationminutes || '', 10);\r\n        let error: string | undefined;\r\n\r\n        if (formData.eventtype == AddonCalendarEventType.COURSE && !formData.courseid) {\r\n            error = 'core.selectacourse';\r\n        } else if (formData.eventtype == AddonCalendarEventType.GROUP && !formData.groupcourseid) {\r\n            error = 'core.selectacourse';\r\n        } else if (formData.eventtype == AddonCalendarEventType.GROUP && !formData.groupid) {\r\n            error = 'core.selectagroup';\r\n        } else if (formData.eventtype == AddonCalendarEventType.CATEGORY && !formData.categoryid) {\r\n            error = 'core.selectacategory';\r\n        } else if (formData.duration == 1 && timeStartDate > timeUntilDate) {\r\n            error = 'addon.calendar.invalidtimedurationuntil';\r\n        } else if (formData.duration == 2 && (isNaN(timeDurationMinutes) || timeDurationMinutes < 1)) {\r\n            error = 'addon.calendar.invalidtimedurationminutes';\r\n        }\r\n\r\n        if (error) {\r\n            // Show error and stop.\r\n            CoreDomUtils.showErrorModal(Translate.instant(error));\r\n\r\n            return;\r\n        }\r\n\r\n        // Format the data to send.\r\n        const data: AddonCalendarSubmitCreateUpdateFormDataWSParams = {\r\n            name: formData.name,\r\n            eventtype: formData.eventtype,\r\n            timestart: timeStartDate,\r\n            description: {\r\n                text: formData.description || '',\r\n                format: 1,\r\n            },\r\n            location: formData.location,\r\n            duration: formData.duration,\r\n            repeat: formData.repeat,\r\n        };\r\n\r\n        if (formData.eventtype == AddonCalendarEventType.COURSE) {\r\n            data.courseid = formData.courseid;\r\n        } else if (formData.eventtype == AddonCalendarEventType.GROUP) {\r\n            data.groupcourseid = formData.groupcourseid;\r\n            data.groupid = formData.groupid;\r\n        } else if (formData.eventtype == AddonCalendarEventType.CATEGORY) {\r\n            data.categoryid = formData.categoryid;\r\n        }\r\n\r\n        if (formData.duration == 1) {\r\n            data.timedurationuntil = timeUntilDate;\r\n        } else if (formData.duration == 2) {\r\n            data.timedurationminutes = formData.timedurationminutes;\r\n        }\r\n\r\n        if (formData.repeat) {\r\n            data.repeats = Number(formData.repeats);\r\n        }\r\n\r\n        if (this.eventRepeatId) {\r\n            data.repeatid = this.eventRepeatId;\r\n            data.repeateditall = formData.repeateditall;\r\n        }\r\n\r\n        // Send the data.\r\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n        let event: AddonCalendarEvent | AddonCalendarOfflineEventDBRecord;\r\n\r\n        try {\r\n            const result = await AddonCalendar.submitEvent(this.eventId, data);\r\n            event = result.event;\r\n\r\n            CoreForms.triggerFormSubmittedEvent(this.formElement, result.sent, this.currentSite.getId());\r\n\r\n            if (result.sent) {\r\n                // Event created or edited, invalidate right days & months.\r\n                const numberOfRepetitions = formData.repeat ? formData.repeats :\r\n                    (data.repeateditall && this.otherEventsCount ? this.otherEventsCount + 1 : 1);\r\n\r\n                try {\r\n                    await AddonCalendarHelper.refreshAfterChangeEvent(result.event, numberOfRepetitions);\r\n                } catch {\r\n                    // Ignore errors.\r\n                }\r\n            }\r\n\r\n            this.returnToList(event);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error sending data.');\r\n        }\r\n\r\n        modal.dismiss();\r\n    }\r\n\r\n    /**\r\n     * Convenience function to update or return to event list depending on device.\r\n     *\r\n     * @param event Event.\r\n     */\r\n    protected returnToList(event?: AddonCalendarEvent | AddonCalendarOfflineEventDBRecord): void {\r\n        // Unblock the sync because the view will be destroyed and the sync process could be triggered before ngOnDestroy.\r\n        this.unblockSync();\r\n\r\n        if (this.eventId && this.eventId > 0) {\r\n            // Editing an event.\r\n            CoreEvents.trigger(\r\n                AddonCalendarProvider.EDIT_EVENT_EVENT,\r\n                { eventId: this.eventId },\r\n                this.currentSite.getId(),\r\n            );\r\n        } else {\r\n            if (event) {\r\n                CoreEvents.trigger(\r\n                    AddonCalendarProvider.NEW_EVENT_EVENT,\r\n                    { eventId: event.id! },\r\n                    this.currentSite.getId(),\r\n                );\r\n            } else {\r\n                CoreEvents.trigger(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, {}, this.currentSite.getId());\r\n            }\r\n        }\r\n\r\n        if (this.svComponent?.outletActivated) {\r\n            // Empty form.\r\n            this.hasOffline = false;\r\n            this.form.reset(this.originalData);\r\n            this.originalData = CoreUtils.clone(this.form.value);\r\n        } else {\r\n            this.originalData = undefined; // Avoid asking for confirmation.\r\n            CoreNavigator.back();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Discard an offline saved discussion.\r\n     */\r\n    async discard(): Promise<void> {\r\n        try {\r\n            await CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\r\n            try {\r\n                await AddonCalendarOffline.deleteEvent(this.eventId!);\r\n\r\n                CoreForms.triggerFormCancelledEvent(this.formElement, this.currentSite.getId());\r\n\r\n                this.returnToList();\r\n            } catch {\r\n                // Shouldn't happen.\r\n                CoreDomUtils.showErrorModal('Error discarding event.');\r\n            }\r\n        } catch {\r\n            // Ignore errors\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if we can leave the page or not.\r\n     *\r\n     * @return Resolved with true if we can leave it, rejected if not.\r\n     */\r\n    async canLeave(): Promise<boolean> {\r\n        if (AddonCalendarHelper.hasEventDataChanged(this.form.value, this.originalData)) {\r\n            // Show confirmation if some data has been modified.\r\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\r\n        }\r\n\r\n        CoreForms.triggerFormCancelledEvent(this.formElement, this.currentSite.getId());\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unblock sync.\r\n     */\r\n    protected unblockSync(): void {\r\n        if (this.eventId) {\r\n            CoreSync.unblockOperation(AddonCalendarProvider.COMPONENT, this.eventId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.unblockSync();\r\n        this.isDestroyed = true;\r\n    }\r\n\r\n}\r\n","export default \":host .addon-calendar-eventtype-container.item-select-disabled ion-label, :host .addon-calendar-eventtype-container.item-select-disabled ion-select {\\n  opacity: 1;\\n}\\n:host .addon-calendar-eventtype-container.item-select-disabled ion-select::part(icon) {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvY2FsZW5kYXIvcGFnZXMvZWRpdC1ldmVudC9lZGl0LWV2ZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRVE7RUFDSSxVQUFBO0FBRFo7QUFJUTtFQUNJLGFBQUE7QUFGWiIsImZpbGUiOiJzcmMvYWRkb25zL2NhbGVuZGFyL3BhZ2VzL2VkaXQtZXZlbnQvZWRpdC1ldmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgLmFkZG9uLWNhbGVuZGFyLWV2ZW50dHlwZS1jb250YWluZXIuaXRlbS1zZWxlY3QtZGlzYWJsZWQge1xyXG4gICAgICAgIGlvbi1sYWJlbCwgaW9uLXNlbGVjdCB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpb24tc2VsZWN0OjpwYXJ0KGljb24pIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19 */\";"],"sourceRoot":"webpack:///"}