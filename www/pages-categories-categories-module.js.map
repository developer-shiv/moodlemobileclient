{"version":3,"sources":["./src/core/features/courses/pages/categories/categories.html","./src/core/features/courses/pages/categories/categories.module.ts","./src/core/features/courses/pages/categories/categories.ts"],"names":[],"mappings":"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","file":"pages-categories-categories-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>\\r\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"coursecat\\\" [contextInstanceId]=\\\"currentCategory && currentCategory!.id\\\">\\r\\n            </core-format-text>\\r\\n        </h1>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!categoriesLoaded\\\" (ionRefresh)=\\\"refreshCategories($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"categoriesLoaded\\\">\\r\\n        <ion-item *ngIf=\\\"currentCategory\\\" class=\\\"ion-text-wrap\\\">\\r\\n            <ion-icon name=\\\"fas-folder\\\" slot=\\\"start\\\" [attr.aria-label]=\\\"'core.category' | translate\\\"></ion-icon>\\r\\n            <ion-label>\\r\\n                <h2>\\r\\n                    <core-format-text [text]=\\\"currentCategory!.name\\\" contextLevel=\\\"coursecat\\\"\\r\\n                    [contextInstanceId]=\\\"currentCategory!.id\\\"></core-format-text>\\r\\n                </h2>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"currentCategory && currentCategory!.description\\\">\\r\\n            <ion-label>\\r\\n                <h2>\\r\\n                    <core-format-text [text]=\\\"currentCategory!.description\\\" maxHeight=\\\"60\\\" contextLevel=\\\"coursecat\\\"\\r\\n            [contextInstanceId]=\\\"currentCategory!.id\\\"></core-format-text>\\r\\n                </h2>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n\\r\\n        <div *ngIf=\\\"categories.length > 0\\\">\\r\\n            <ion-item-divider>\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.courses.categories' | translate }}</h2>\\r\\n                </ion-label>\\r\\n            </ion-item-divider>\\r\\n            <section *ngFor=\\\"let category of categories\\\">\\r\\n                <ion-item button class=\\\"ion-text-wrap\\\" (click)=\\\"openCategory(category.id)\\\" [attr.aria-label]=\\\"category.name\\\"\\r\\n                    detail=\\\"true\\\">\\r\\n                    <ion-icon name=\\\"fas-folder\\\" slot=\\\"start\\\" [attr.aria-label]=\\\"'core.category' | translate\\\"></ion-icon>\\r\\n                    <ion-label>\\r\\n                        <h2>\\r\\n                            <core-format-text [text]=\\\"category.name\\\" contextLevel=\\\"coursecat\\\" [contextInstanceId]=\\\"category.id\\\">\\r\\n                            </core-format-text>\\r\\n                        </h2>\\r\\n                    </ion-label>\\r\\n                    <ion-badge slot=\\\"end\\\" *ngIf=\\\"category.coursecount > 0\\\" color=\\\"light\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">{{ category.coursecount }}</span>\\r\\n                        <span class=\\\"sr-only\\\">{{ 'core.courses.therearecourses' | translate:{ $a: category.coursecount } }}</span>\\r\\n                    </ion-badge>\\r\\n                </ion-item>\\r\\n            </section>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"courses.length > 0\\\">\\r\\n            <ion-item-divider>\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.courses.courses' | translate }}</h2>\\r\\n                </ion-label>\\r\\n            </ion-item-divider>\\r\\n            <core-courses-course-list-item *ngFor=\\\"let course of courses\\\" [course]=\\\"course\\\"></core-courses-course-list-item>\\r\\n        </div>\\r\\n        <core-empty-box *ngIf=\\\"!categories.length && !courses.length\\\" icon=\\\"fas-graduation-cap\\\"\\r\\n            [message]=\\\"'core.courses.nocoursesyet' | translate\\\">\\r\\n        </core-empty-box>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\r\n\r\nimport { CoreCoursesCategoriesPage } from './categories';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CoreCoursesCategoriesPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        CoreCoursesComponentsModule,\r\n    ],\r\n    declarations: [\r\n        CoreCoursesCategoriesPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class CoreCoursesCategoriesPageModule { }\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { IonRefresher } from '@ionic/angular';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { CoreCategoryData, CoreCourses, CoreCourseSearchedData } from '../../services/courses';\r\nimport { Translate } from '@singletons';\r\nimport { CoreNavigator } from '@services/navigator';\r\n\r\n/**\r\n * Page that displays a list of categories and the courses in the current category if any.\r\n */\r\n@Component({\r\n    selector: 'page-core-courses-categories',\r\n    templateUrl: 'categories.html',\r\n})\r\nexport class CoreCoursesCategoriesPage implements OnInit {\r\n\r\n    title: string;\r\n    currentCategory?: CoreCategoryData;\r\n    categories: CoreCategoryData[] = [];\r\n    courses: CoreCourseSearchedData[] = [];\r\n    categoriesLoaded = false;\r\n\r\n    protected categoryId = 0;\r\n\r\n    constructor() {\r\n        this.title = Translate.instant('core.courses.categories');\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ngOnInit(): void {\r\n        this.categoryId = CoreNavigator.getRouteNumberParam('id') || 0;\r\n\r\n        this.fetchCategories().finally(() => {\r\n            this.categoriesLoaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch the categories.\r\n     *\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchCategories(): Promise<void> {\r\n        try{\r\n            const categories: CoreCategoryData[] = await CoreCourses.getCategories(this.categoryId, true);\r\n\r\n            this.currentCategory = undefined;\r\n\r\n            const index = categories.findIndex((category) => category.id == this.categoryId);\r\n\r\n            if (index >= 0) {\r\n                this.currentCategory = categories[index];\r\n                // Delete current Category to avoid problems with the formatTree.\r\n                delete categories[index];\r\n            }\r\n\r\n            // Sort by depth and sortorder to avoid problems formatting Tree.\r\n            categories.sort((a, b) => {\r\n                if (a.depth == b.depth) {\r\n                    return (a.sortorder > b.sortorder) ? 1 : ((b.sortorder > a.sortorder) ? -1 : 0);\r\n                }\r\n\r\n                return a.depth > b.depth ? 1 : -1;\r\n            });\r\n\r\n            this.categories = CoreUtils.formatTree(categories, 'parent', 'id', this.categoryId);\r\n\r\n            if (this.currentCategory) {\r\n                this.title = this.currentCategory.name;\r\n\r\n                try {\r\n                    this.courses = await CoreCourses.getCoursesByField('category', this.categoryId);\r\n                } catch (error) {\r\n                    CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcategories', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the categories.\r\n     *\r\n     * @param refresher Refresher.\r\n     */\r\n    refreshCategories(refresher?: IonRefresher): void {\r\n        const promises: Promise<void>[] = [];\r\n\r\n        promises.push(CoreCourses.invalidateUserCourses());\r\n        promises.push(CoreCourses.invalidateCategories(this.categoryId, true));\r\n        promises.push(CoreCourses.invalidateCoursesByField('category', this.categoryId));\r\n        promises.push(CoreSites.getCurrentSite()!.invalidateConfig());\r\n\r\n        Promise.all(promises).finally(() => {\r\n            this.fetchCategories().finally(() => {\r\n                refresher?.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open a category.\r\n     *\r\n     * @param categoryId Category Id.\r\n     */\r\n    openCategory(categoryId: number): void {\r\n        CoreNavigator.navigateToSitePath('courses/categories/' + categoryId);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}