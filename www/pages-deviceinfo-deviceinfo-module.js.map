{"version":3,"sources":["./src/core/features/settings/pages/deviceinfo/deviceinfo.html","./src/core/features/settings/pages/deviceinfo/deviceinfo.module.ts","./src/core/features/settings/pages/deviceinfo/deviceinfo.scss","./src/core/features/settings/pages/deviceinfo/deviceinfo.ts"],"names":[],"mappings":"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","file":"pages-deviceinfo-deviceinfo-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>\\r\\n            {{ 'core.settings.deviceinfo' | translate }}\\r\\n        </h1>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"copyInfo()\\\" [attr.aria-label]=\\\"'core.settings.copyinfo' | translate\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-clipboard\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <ion-item (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.appversion' | translate}}</h2>\\r\\n            <p>{{ deviceInfo.versionName }} ({{ deviceInfo.versionCode }})</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.compilationinfo' | translate }}</h2>\\r\\n            <p *ngIf=\\\"deviceInfo.compilationTime\\\">{{ deviceInfo.compilationTime |Â coreFormatDate: \\\"LLL Z\\\": false }}</p>\\r\\n            <p *ngIf=\\\"deviceInfo.lastCommit\\\">{{ deviceInfo.lastCommit }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.siteUrl\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.siteinfo' | translate }}<ng-container *ngIf=\\\"deviceInfo.isPrefixedUrl\\\"> *</ng-container></h2>\\r\\n            <p><a [href]=\\\"deviceInfo.siteUrl\\\" core-link auto-login=\\\"yes\\\">{{ deviceInfo.siteUrl }}</a></p>\\r\\n            <p *ngIf=\\\"deviceInfo.siteVersion\\\">{{ deviceInfo.siteVersion }}</p>\\r\\n            <p *ngIf=\\\"deviceInfo.siteId\\\">{{ deviceInfo.siteId }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.fileSystemRoot\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.filesystemroot' | translate }}</h2>\\r\\n            <p><a *ngIf=\\\"fsClickable\\\" [href]=\\\"deviceInfo.fileSystemRoot\\\" core-link auto-login=\\\"no\\\">{{ deviceInfo.fileSystemRoot }}</a></p>\\r\\n            <p *ngIf=\\\"!fsClickable\\\">{{ deviceInfo.fileSystemRoot }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.userAgent\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.navigatoruseragent' | translate }}</h2>\\r\\n            <p>{{ deviceInfo.userAgent }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.browserLanguage\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.navigatorlanguage' | translate }}</h2>\\r\\n            <p>{{ deviceInfo.browserLanguage }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.currentLanguage\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.currentlanguage' | translate }}</h2>\\r\\n            <p>{{ currentLangName }} ({{ deviceInfo.currentLanguage }})</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.locationHref\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.locationhref' | translate }}</h2>\\r\\n            <p>{{ deviceInfo.locationHref }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.deviceType\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.displayformat' | translate }}</h2>\\r\\n            <p>{{ 'core.' + deviceInfo.deviceType | translate }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.deviceOs && deviceOsTranslated\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.deviceos' | translate}}</h2>\\r\\n            <p>{{ deviceOsTranslated }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.screen\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.screen' | translate }}</h2>\\r\\n            <p>{{ deviceInfo.screen }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.networkstatus' | translate}}</h2>\\r\\n            <p>{{ 'core.' + deviceInfo.networkStatus | translate }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.wificonnection' | translate}}</h2>\\r\\n            <p>{{ 'core.' + deviceInfo.wifiConnection | translate }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.cordovaVersion\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.cordovaversion' | translate }}</h2>\\r\\n            <p>{{ deviceInfo.cordovaVersion }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.platform\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.cordovadeviceplatform' | translate }}</h2>\\r\\n            <p>{{ deviceInfo.platform }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.osVersion\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.cordovadeviceosversion' | translate }}</h2>\\r\\n            <p>{{ deviceInfo.osVersion }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.model\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.cordovadevicemodel' | translate}}</h2>\\r\\n            <p>{{ deviceInfo.model }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.uuid\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.cordovadeviceuuid' | translate}}</h2>\\r\\n            <p>{{ deviceInfo.uuid }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item *ngIf=\\\"deviceInfo.pushId\\\" (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.pushid' | translate }}</h2>\\r\\n            <p>{{ deviceInfo.pushId }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item (longPress)=\\\"copyItemInfo($event)\\\">\\r\\n        <ion-label class=\\\"ion-text-wrap\\\">\\r\\n            <h2>{{ 'core.settings.localnotifavailable' | translate }}</h2>\\r\\n            <p>{{ 'core.' + deviceInfo.localNotifAvailable | translate }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreSettingsDeviceInfoPage } from './deviceinfo';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CoreSettingsDeviceInfoPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n    ],\r\n    declarations: [\r\n        CoreSettingsDeviceInfoPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class CoreSettingsDeviceInfoPageModule {}\r\n","export default \".item {\\n  -webkit-user-select: text;\\n          user-select: text;\\n  cursor: text;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL3NldHRpbmdzL3BhZ2VzL2RldmljZWluZm8vZGV2aWNlaW5mby5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7VUFBQSxpQkFBQTtFQUNBLFlBQUE7QUFDSiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy9zZXR0aW5ncy9wYWdlcy9kZXZpY2VpbmZvL2RldmljZWluZm8uc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtIHtcclxuICAgIHVzZXItc2VsZWN0OiB0ZXh0O1xyXG4gICAgY3Vyc29yOiB0ZXh0O1xyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { CoreApp } from '@services/app';\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { CoreConstants } from '@/core/constants';\r\nimport { CoreLocalNotifications } from '@services/local-notifications';\r\nimport { Device, Platform, Translate, Network, NgZone } from '@singletons';\r\nimport { CoreLang } from '@services/lang';\r\nimport { CoreFile } from '@services/file';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { Subscription } from 'rxjs';\r\nimport { CorePushNotifications } from '@features/pushnotifications/services/pushnotifications';\r\n\r\n/**\r\n * Device Info to be shown and copied to clipboard.\r\n */\r\ninterface CoreSettingsDeviceInfo {\r\n    versionName: string;\r\n    versionCode: number;\r\n    compilationTime: number;\r\n    lastCommit: string;\r\n    siteUrl?: string;\r\n    isPrefixedUrl?: boolean;\r\n    siteId?: string;\r\n    siteVersion?: string;\r\n    fileSystemRoot?: string;\r\n    userAgent?: string;\r\n    deviceOs?: string;\r\n    browserLanguage?: string;\r\n    currentLanguage?: string;\r\n    locationHref?: string;\r\n    deviceType: string;\r\n    screen?: string;\r\n    networkStatus: string;\r\n    wifiConnection: string;\r\n    cordovaVersion?: string;\r\n    platform?: string;\r\n    osVersion?: string;\r\n    model?: string;\r\n    uuid?: string;\r\n    pushId?: string;\r\n    localNotifAvailable: string;\r\n}\r\n\r\n/**\r\n * Page that displays the device information.\r\n */\r\n@Component({\r\n    selector: 'page-core-app-settings-deviceinfo',\r\n    templateUrl: 'deviceinfo.html',\r\n    styleUrls: ['deviceinfo.scss'],\r\n})\r\nexport class CoreSettingsDeviceInfoPage implements OnDestroy {\r\n\r\n    deviceInfo: CoreSettingsDeviceInfo;\r\n    deviceOsTranslated?: string;\r\n    currentLangName?: string;\r\n    fsClickable = false;\r\n\r\n    protected onlineObserver?: Subscription;\r\n\r\n    constructor() {\r\n        const appProvider = CoreApp.instance;\r\n        const sitesProvider = CoreSites.instance;\r\n        const device = Device.instance;\r\n        const translate = Translate.instance;\r\n        const navigator = window.navigator;\r\n\r\n        this.deviceInfo = {\r\n            versionName: CoreConstants.CONFIG.versionname,\r\n            versionCode: CoreConstants.CONFIG.versioncode,\r\n            compilationTime: CoreConstants.BUILD.compilationTime || 0,\r\n            lastCommit: CoreConstants.BUILD.lastCommitHash || '',\r\n            networkStatus: appProvider.isOnline() ? 'online' : 'offline',\r\n            wifiConnection: appProvider.isWifi() ? 'yes' : 'no',\r\n            localNotifAvailable: CoreLocalNotifications.isAvailable() ? 'yes' : 'no',\r\n            pushId: CorePushNotifications.getPushId(),\r\n            deviceType: '',\r\n        };\r\n\r\n        if (window.location && window.location.href) {\r\n            const url = window.location.href;\r\n            this.deviceInfo.locationHref = url.indexOf('#') > 0 ? url.substr(0, url.indexOf('#')) : url;\r\n        }\r\n\r\n        if (window.screen) {\r\n            this.deviceInfo.screen = window.innerWidth + 'x' + window.innerHeight +\r\n                ' (' + window.screen.width + 'x' + window.screen.height + ')';\r\n        }\r\n\r\n        if (appProvider.isMobile()) {\r\n            this.deviceInfo.deviceType = Platform.is('tablet') ? 'tablet' : 'phone';\r\n            if (appProvider.isAndroid()) {\r\n                this.deviceInfo.deviceOs = 'android';\r\n                this.deviceOsTranslated = 'Android';\r\n            } else if (appProvider.isIOS()) {\r\n                this.deviceInfo.deviceOs = 'ios';\r\n                this.deviceOsTranslated = 'iOS';\r\n            } else {\r\n                const matches = navigator.userAgent.match(/\\(([^)]*)\\)/);\r\n                if (matches && matches.length > 1) {\r\n                    this.deviceInfo.deviceOs = matches[1];\r\n                    this.deviceOsTranslated = matches[1];\r\n                } else {\r\n                    this.deviceInfo.deviceOs = 'unknown';\r\n                    this.deviceOsTranslated = translate.instant('core.unknown');\r\n                }\r\n            }\r\n        } else {\r\n            this.deviceInfo.deviceType = 'browser';\r\n            const matches = navigator.userAgent.match(/\\(([^)]*)\\)/);\r\n            if (matches && matches.length > 1) {\r\n                this.deviceInfo.deviceOs = matches[1];\r\n                this.deviceOsTranslated = matches[1];\r\n            } else {\r\n                this.deviceInfo.deviceOs = 'unknown';\r\n                this.deviceOsTranslated = translate.instant('core.unknown');\r\n            }\r\n        }\r\n\r\n        if (navigator) {\r\n            if (navigator.userAgent) {\r\n                this.deviceInfo.userAgent = navigator.userAgent;\r\n            }\r\n\r\n            if (navigator.language) {\r\n                this.deviceInfo.browserLanguage = navigator.language;\r\n            }\r\n        }\r\n\r\n        if (device) {\r\n            if (device.cordova) {\r\n                this.deviceInfo.cordovaVersion = device.cordova;\r\n            }\r\n            if (device.platform) {\r\n                this.deviceInfo.platform = device.platform;\r\n            }\r\n            if (device.version) {\r\n                this.deviceInfo.osVersion = device.version;\r\n            }\r\n            if (device.model) {\r\n                this.deviceInfo.model = device.model;\r\n            }\r\n            if (device.uuid) {\r\n                this.deviceInfo.uuid = device.uuid;\r\n            }\r\n        }\r\n\r\n        const currentSite = sitesProvider.getCurrentSite();\r\n\r\n        this.deviceInfo.siteUrl = (currentSite?.getURL()) ||\r\n            (typeof CoreConstants.CONFIG.siteurl == 'string' && CoreConstants.CONFIG.siteurl) || undefined;\r\n        this.deviceInfo.isPrefixedUrl = !!CoreConstants.CONFIG.siteurl;\r\n        this.deviceInfo.siteId = currentSite?.getId();\r\n        this.deviceInfo.siteVersion = currentSite?.getInfo()?.release;\r\n\r\n        // Refresh online status when changes.\r\n        this.onlineObserver = Network.onChange().subscribe(() => {\r\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\r\n            NgZone.run(() => {\r\n                this.deviceInfo!.networkStatus = appProvider.isOnline() ? 'online' : 'offline';\r\n            });\r\n        });\r\n\r\n        this.asyncInit();\r\n    }\r\n\r\n    /**\r\n     * Async part of the constructor.\r\n     */\r\n    protected async asyncInit(): Promise<void> {\r\n        const fileProvider = CoreFile.instance;\r\n\r\n        const lang = await CoreLang.getCurrentLanguage();\r\n        this.deviceInfo.currentLanguage = lang;\r\n        this.currentLangName = CoreConstants.CONFIG.languages[lang];\r\n\r\n        if (fileProvider.isAvailable()) {\r\n            const basepath = await fileProvider.getBasePath();\r\n            this.deviceInfo.fileSystemRoot = basepath;\r\n            this.fsClickable = fileProvider.usesHTMLAPI();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copies device info into the clipboard.\r\n     */\r\n    copyInfo(): void {\r\n        CoreUtils.copyToClipboard(JSON.stringify(this.deviceInfo));\r\n    }\r\n\r\n    /**\r\n     * Copies device info item into the clipboard.\r\n     *\r\n     * @param e Event.\r\n     */\r\n    copyItemInfo(e: Event): void {\r\n        const el = <Element>e.target;\r\n        const text = el?.closest('ion-item')?.textContent?.trim();\r\n\r\n        text && CoreUtils.copyToClipboard(text);\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.onlineObserver && this.onlineObserver.unsubscribe();\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}