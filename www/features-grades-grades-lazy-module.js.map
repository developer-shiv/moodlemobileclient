{"version":3,"sources":["./src/core/features/grades/pages/courses/courses.html","./src/core/features/grades/pages/grade/grade.html","./src/core/features/grades/grades-lazy.module.ts","./src/core/features/grades/pages/courses/courses.page.ts","./src/core/features/grades/pages/grade/grade.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,2QAA4M,oCAAoC,qQAAqQ,oCAAoC,k2CAAk2C,mCAAmC,iEAAiE,cAAc,0KAA0K,E;;;;;;;;;;;;ACAtqE;AAAe,2QAA4M,mCAAmC,+NAA+N,oCAAoC,kgBAAkgB,YAAY,qoBAAqoB,YAAY,8lBAA8lB,mCAAmC,qQAAqQ,kCAAkC,oQAAoQ,kCAAkC,yQAAyQ,uCAAuC,+QAA+Q,wCAAwC,yQAAyQ,iCAAiC,qQAAqQ,oCAAoC,yQAAyQ,qCAAqC,weAAwe,sDAAsD,oNAAoN,E;;;;;;;;;;;;ACAxkK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEQ;AACc;AAEM;AACf;AACU;AAEU;AACQ;AACL;AACN;AACiB;AAEhF,MAAM,YAAY,GAAW;IACzB;QACI,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;YACF,eAAe,EAAE,6FAAgC,CAAC,SAAS;SAC9D;QACD,SAAS,EAAE,iFAAqB;KACnC;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8EAAoB;KAClC;IACD;QACI,IAAI,EAAE,oBAAoB;QAC1B,SAAS,EAAE,2EAAmB;KACjC;CACJ,CAAC;AAEF,MAAM,YAAY,GAAW;IACzB;QACI,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;YACF,eAAe,EAAE,6FAAgC,CAAC,SAAS;SAC9D;QACD,SAAS,EAAE,iFAAqB;QAChC,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,8EAAoB;aAClC;SACJ;KACJ;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8EAAoB;QAC/B,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,2EAAmB;aACjC;SACJ;KACJ;CACJ,CAAC;AAEF,MAAM,MAAM,GAAW;IACnB,GAAG,iFAAiB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,2DAAU,CAAC,QAAQ,CAAC;IAC7D,GAAG,iFAAiB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,2DAAU,CAAC,QAAQ,CAAC;CAChE,CAAC;IAaW,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAXhC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,oEAAgB;YAChB,sFAA0B;SAC7B;QACD,YAAY,EAAE;YACV,iFAAqB;YACrB,2EAAmB;SACtB;KACJ,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;ACvFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAE8C;AACH;AAED;AACb;AACoD;AAE/D;AACD;AAElD;;GAEG;IAKU,qBAAqB,mCAArB,qBAAqB;;QAE9B,YAAO,GAA6B,IAAI,wBAAwB,CAAC,uBAAqB,CAAC,CAAC;IAuD5F,CAAC;IAnDG;;OAEG;IACG,eAAe;;YACjB,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAEjC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC;KAAA;IAED;;OAEG;IACH,WAAW;QACP,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACG,cAAc,CAAC,SAAuB;;YACxC,MAAM,+DAAS,CAAC,YAAY,CAAC,2EAAU,CAAC,2BAA2B,EAAE,CAAC,CAAC;YACvE,MAAM,+DAAS,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YAElD,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,GAAG;QAC1B,CAAC;KAAA;IAED;;OAEG;IACW,mBAAmB;;YAC7B,IAAI;gBACA,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;aAC7B;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;gBAEnE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC7B;QACL,CAAC;KAAA;IAED;;OAEG;IACW,YAAY;;YACtB,MAAM,MAAM,GAAG,MAAM,2EAAU,CAAC,gBAAgB,EAAE,CAAC;YACnD,MAAM,OAAO,GAAG,MAAM,wFAAgB,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YAEnE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC;KAAA;CAEJ;;wBArDI,uDAAS,SAAC,wFAAsB;;AAJxB,qBAAqB;IAJjC,+DAAS,CAAC;QACP,QAAQ,EAAE,0BAA0B;QACpC,oOAA2B;KAC9B,CAAC;GACW,qBAAqB,CAyDjC;AAzDiC;AA2DlC;;GAEG;AACH,MAAM,wBAAyB,SAAQ,yFAA+D;IAElG;;OAEG;IACO,WAAW,CAAC,WAAkD;QACpE,OAAO,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3C,CAAC;IAED;;OAEG;IACa,WAAW;;YACvB,MAAM,2EAAU,CAAC,oBAAoB,EAAE,CAAC;QAC5C,CAAC;KAAA;CAEJ;;;;;;;;;;;;;AC7GD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEiB;AAGC;AACW;AACqC;AACvD;AACM;AACE;AAEpD;;GAEG;IAKU,mBAAmB,SAAnB,mBAAmB;IAQ5B;;QAFA,gBAAW,GAAG,KAAK,CAAC;QAGhB,IAAI,CAAC,QAAQ,GAAG,iEAAa,CAAC,mBAAmB,CAAC,UAAU,CAAE,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG,iEAAa,CAAC,mBAAmB,CAAC,SAAS,CAAE,CAAC;QAC7D,IAAI,CAAC,MAAM,SAAG,iEAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,mCAAI,yDAAS,CAAC,oBAAoB,EAAE,CAAC;IAClG,CAAC;IAED;;OAEG;IACH,QAAQ;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED;;OAEG;IACG,UAAU;;YACZ,IAAI;gBACA,IAAI,CAAC,KAAK,GAAG,MAAM,wFAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aAC3B;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;aACzE;QACL,CAAC;KAAA;IAED;;;;OAIG;IACG,YAAY,CAAC,SAAuB;;YACtC,MAAM,+DAAS,CAAC,YAAY,CAAC,2EAAU,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChG,MAAM,+DAAS,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YAEhD,SAAS,CAAC,QAAQ,EAAE,CAAC;QACzB,CAAC;KAAA;CAEJ;;AA7CY,mBAAmB;IAJ/B,+DAAS,CAAC;QACP,QAAQ,EAAE,wBAAwB;QAClC,8NAAyB;KAC5B,CAAC;GACW,mBAAmB,CA6C/B;AA7C+B","file":"features-grades-grades-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>{{ 'core.grades.grades' | translate }}</h1>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-split-view>\\r\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!courses.loaded\\\" (ionRefresh)=\\\"refreshCourses($event.target)\\\">\\r\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n        </ion-refresher>\\r\\n        <core-loading [hideUntil]=\\\"courses.loaded\\\">\\r\\n            <core-empty-box\\r\\n                *ngIf=\\\"courses.empty\\\"\\r\\n                icon=\\\"fas-chart-bar\\\"\\r\\n                [message]=\\\"'core.grades.nogradesreturned' | translate\\\"\\r\\n            ></core-empty-box>\\r\\n\\r\\n            <ion-list *ngIf=\\\"!courses.empty\\\">\\r\\n                <ion-item\\r\\n                    *ngFor=\\\"let course of courses.items\\\"\\r\\n                    [attr.aria-label]=\\\"course.courseFullName\\\"\\r\\n                    [attr.aria-current]=\\\"courses.getItemAriaCurrent(course)\\\"\\r\\n                    class=\\\"ion-text-wrap\\\"\\r\\n                    button\\r\\n                    detail=\\\"true\\\"\\r\\n                    (click)=\\\"courses.select(course)\\\"\\r\\n                >\\r\\n                    <ion-label>\\r\\n                        <core-format-text\\r\\n                            [text]=\\\"course.courseFullName\\\"\\r\\n                            [contextInstanceId]=\\\"course.courseid\\\"\\r\\n                            contextLevel=\\\"course\\\"\\r\\n                        ></core-format-text>\\r\\n                    </ion-label>\\r\\n                    <ion-badge slot=\\\"end\\\" color=\\\"light\\\">\\r\\n                        <span class=\\\"sr-only\\\" *ngIf=\\\"course.grade && course.grade != '-'\\\">\\r\\n                            {{ 'core.grades.grade' | translate }}\\r\\n                        </span>\\r\\n                        {{course.grade}}\\r\\n                    </ion-badge>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n        </core-loading>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>{{ 'core.grades.grade' | translate }}</h1>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!gradeLoaded\\\" (ionRefresh)=\\\"refreshGrade($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"gradeLoaded\\\">\\r\\n        <core-empty-box *ngIf=\\\"!grade\\\" icon=\\\"fas-chart-bar\\\" [message]=\\\"'core.grades.nogradesreturned' | translate\\\"></core-empty-box>\\r\\n\\r\\n        <ion-list *ngIf=\\\"grade\\\">\\r\\n            <ion-item *ngIf=\\\"grade.itemname && grade.link\\\" class=\\\"ion-text-wrap\\\" detail=\\\"true\\\" [href]=\\\"grade.link\\\" core-link\\r\\n            capture=\\\"true\\\">\\r\\n                <ion-icon *ngIf=\\\"grade.icon\\\" name=\\\"{{grade.icon}}\\\" slot=\\\"start\\\" [attr.aria-label]=\\\"grade.iconAlt\\\"></ion-icon>\\r\\n                <img *ngIf=\\\"grade.image\\\" [src]=\\\"grade.image\\\" slot=\\\"start\\\" class=\\\"core-module-icon\\\"\\r\\n                    [alt]=\\\"grade.iconAlt\\\">\\r\\n                <ion-label>\\r\\n                    <h2><core-format-text [text]=\\\"grade.itemname\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"courseId\\\">\\r\\n                    </core-format-text></h2>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item *ngIf=\\\"grade.itemname && !grade.link\\\" class=\\\"ion-text-wrap\\\" >\\r\\n                <ion-icon *ngIf=\\\"grade.icon\\\" name=\\\"{{grade.icon}}\\\" slot=\\\"start\\\" [attr.aria-label]=\\\"grade.iconAlt\\\"></ion-icon>\\r\\n                <img *ngIf=\\\"grade.image\\\" [src]=\\\"grade.image\\\" slot=\\\"start\\\" class=\\\"core-module-icon\\\" [alt]=\\\"grade.iconAlt\\\"/>\\r\\n                <ion-label>\\r\\n                    <h2><core-format-text [text]=\\\"grade.itemname\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"courseId\\\">\\r\\n                    </core-format-text></h2>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"grade.weight\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.grades.weight' | translate}}</h2>\\r\\n                    <p [innerHTML]=\\\"grade.weight\\\"></p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"grade.grade\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.grades.grade' | translate}}</h2>\\r\\n                    <p [innerHTML]=\\\"grade.grade\\\"></p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"grade.range\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.grades.range' | translate}}</h2>\\r\\n                    <p [innerHTML]=\\\"grade.range\\\"></p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"grade.percentage\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.grades.percentage' | translate}}</h2>\\r\\n                    <p [innerHTML]=\\\"grade.percentage\\\"></p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"grade.lettergrade\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.grades.lettergrade' | translate}}</h2>\\r\\n                    <p [innerHTML]=\\\"grade.lettergrade\\\"></p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"grade.rank\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.grades.rank' | translate}}</h2>\\r\\n                    <p [innerHTML]=\\\"grade.rank\\\"></p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"grade.average\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.grades.average' | translate}}</h2>\\r\\n                    <p [innerHTML]=\\\"grade.average\\\"></p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"grade.feedback\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.grades.feedback' | translate}}</h2>\\r\\n                    <p><core-format-text [fullTitle]=\\\"'core.grades.feedback' | translate\\\" maxHeight=\\\"60\\\" fullOnClick=\\\"true\\\"\\r\\n                        [text]=\\\"grade.feedback\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"courseId\\\"></core-format-text></p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"grade.contributiontocoursetotal\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.grades.contributiontocoursetotal' | translate}}</h2>\\r\\n                    <p [innerHTML]=\\\"grade.contributiontocoursetotal\\\"></p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ion-list>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { conditionalRoutes } from '@/app/app-routing.module';\r\nimport { CoreScreen } from '@services/screen';\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\n\r\nimport { CoreGradesCoursePage } from './pages/course/course.page';\r\nimport { CoreGradesCoursePageModule } from './pages/course/course.module';\r\nimport { CoreGradesCoursesPage } from './pages/courses/courses.page';\r\nimport { CoreGradesGradePage } from './pages/grade/grade.page';\r\nimport { CoreGradesMainMenuHandlerService } from './services/handlers/mainmenu';\r\n\r\nconst mobileRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        data: {\r\n            mainMenuTabRoot: CoreGradesMainMenuHandlerService.PAGE_NAME,\r\n        },\r\n        component: CoreGradesCoursesPage,\r\n    },\r\n    {\r\n        path: ':courseId',\r\n        component: CoreGradesCoursePage,\r\n    },\r\n    {\r\n        path: ':courseId/:gradeId',\r\n        component: CoreGradesGradePage,\r\n    },\r\n];\r\n\r\nconst tabletRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        data: {\r\n            mainMenuTabRoot: CoreGradesMainMenuHandlerService.PAGE_NAME,\r\n        },\r\n        component: CoreGradesCoursesPage,\r\n        children: [\r\n            {\r\n                path: ':courseId',\r\n                component: CoreGradesCoursePage,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: ':courseId',\r\n        component: CoreGradesCoursePage,\r\n        children: [\r\n            {\r\n                path: ':gradeId',\r\n                component: CoreGradesGradePage,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nconst routes: Routes = [\r\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\r\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        CoreGradesCoursePageModule,\r\n    ],\r\n    declarations: [\r\n        CoreGradesCoursesPage,\r\n        CoreGradesGradePage,\r\n    ],\r\n})\r\nexport class CoreGradesLazyModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { CorePageItemsListManager } from '@classes/page-items-list-manager';\r\n\r\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\r\nimport { CoreGrades } from '@features/grades/services/grades';\r\nimport { CoreGradesGradeOverviewWithCourseData, CoreGradesHelper } from '@features/grades/services/grades-helper';\r\nimport { IonRefresher } from '@ionic/angular';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreUtils } from '@services/utils/utils';\r\n\r\n/**\r\n * Page that displays courses grades (main menu option).\r\n */\r\n@Component({\r\n    selector: 'page-core-grades-courses',\r\n    templateUrl: 'courses.html',\r\n})\r\nexport class CoreGradesCoursesPage implements OnDestroy, AfterViewInit {\r\n\r\n    courses: CoreGradesCoursesManager = new CoreGradesCoursesManager(CoreGradesCoursesPage);\r\n\r\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    async ngAfterViewInit(): Promise<void> {\r\n        await this.fetchInitialCourses();\r\n\r\n        this.courses.start(this.splitView);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.courses.destroy();\r\n    }\r\n\r\n    /**\r\n     * Refresh courses.\r\n     *\r\n     * @param refresher Refresher.\r\n     */\r\n    async refreshCourses(refresher: IonRefresher): Promise<void> {\r\n        await CoreUtils.ignoreErrors(CoreGrades.invalidateCoursesGradesData());\r\n        await CoreUtils.ignoreErrors(this.fetchCourses());\r\n\r\n        refresher?.complete();\r\n    }\r\n\r\n    /**\r\n     * Obtain the initial list of courses.\r\n     */\r\n    private async fetchInitialCourses(): Promise<void> {\r\n        try {\r\n            await this.fetchCourses();\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading courses');\r\n\r\n            this.courses.setItems([]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the list of courses.\r\n     */\r\n    private async fetchCourses(): Promise<void> {\r\n        const grades = await CoreGrades.getCoursesGrades();\r\n        const courses = await CoreGradesHelper.getGradesCourseData(grades);\r\n\r\n        this.courses.setItems(courses);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Helper class to manage courses.\r\n */\r\nclass CoreGradesCoursesManager extends CorePageItemsListManager<CoreGradesGradeOverviewWithCourseData> {\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    protected getItemPath(courseGrade: CoreGradesGradeOverviewWithCourseData): string {\r\n        return courseGrade.courseid.toString();\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    protected async logActivity(): Promise<void> {\r\n        await CoreGrades.logCoursesGradesView();\r\n    }\r\n\r\n}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { IonRefresher } from '@ionic/angular';\r\n\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreGrades } from '@features/grades/services/grades';\r\nimport { CoreGradesFormattedRow, CoreGradesHelper } from '@features/grades/services/grades-helper';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { CoreNavigator } from '@services/navigator';\r\n\r\n/**\r\n * Page that displays activity grade.\r\n */\r\n@Component({\r\n    selector: 'page-core-grades-grade',\r\n    templateUrl: 'grade.html',\r\n})\r\nexport class CoreGradesGradePage implements OnInit {\r\n\r\n    courseId: number;\r\n    userId: number;\r\n    gradeId: number;\r\n    grade?: CoreGradesFormattedRow | null;\r\n    gradeLoaded = false;\r\n\r\n    constructor() {\r\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\r\n        this.gradeId = CoreNavigator.getRouteNumberParam('gradeId')!;\r\n        this.userId = CoreNavigator.getRouteNumberParam('userId') ?? CoreSites.getCurrentSiteUserId();\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    ngOnInit(): void {\r\n        this.fetchGrade();\r\n    }\r\n\r\n    /**\r\n     * Fetch all the data required for the view.\r\n     */\r\n    async fetchGrade(): Promise<void> {\r\n        try {\r\n            this.grade = await CoreGradesHelper.getGradeItem(this.courseId, this.gradeId, this.userId);\r\n            this.gradeLoaded = true;\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading grade item');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh data.\r\n     *\r\n     * @param refresher Refresher.\r\n     */\r\n    async refreshGrade(refresher: IonRefresher): Promise<void> {\r\n        await CoreUtils.ignoreErrors(CoreGrades.invalidateCourseGradesData(this.courseId, this.userId));\r\n        await CoreUtils.ignoreErrors(this.fetchGrade());\r\n\r\n        refresher.complete();\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}