{"version":3,"sources":["./src/addons/mod/h5pactivity/pages/users-attempts/users-attempts.html","./src/addons/mod/h5pactivity/pages/users-attempts/users-attempts.module.ts","./src/addons/mod/h5pactivity/pages/users-attempts/users-attempts.ts"],"names":[],"mappings":"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","file":"pages-users-attempts-users-attempts-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>\\r\\n            <core-format-text *ngIf=\\\"h5pActivity\\\" [text]=\\\"h5pActivity.name\\\" contextLevel=\\\"module\\\"\\r\\n                [contextInstanceId]=\\\"h5pActivity.coursemodule\\\" [courseId]=\\\"courseId\\\">\\r\\n            </core-format-text>\\r\\n        </h1>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <ion-list *ngIf=\\\"users.length\\\">\\r\\n            <!-- \\\"Header\\\" of the table -->\\r\\n            <ion-item class=\\\"addon-mod_h5pactivity-table-header hide-detail font-bold\\\" detail=\\\"true\\\">\\r\\n                <ion-label>\\r\\n                    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                        <ion-col class=\\\"ion-text-center\\\" size=\\\"4\\\">{{ 'core.user' | translate }}</ion-col>\\r\\n                        <ion-col class=\\\"ion-text-center\\\" size=\\\"4\\\">{{ 'core.date' | translate }}</ion-col>\\r\\n                        <ion-col class=\\\"ion-text-center\\\" size=\\\"2\\\">{{ 'addon.mod_h5pactivity.score' | translate }}</ion-col>\\r\\n                        <ion-col class=\\\"ion-text-center\\\" size=\\\"2\\\">{{ 'addon.mod_h5pactivity.attempts' | translate }}</ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- List of users. -->\\r\\n            <ion-item class=\\\"ion-text-wrap addon-mod_h5pactivity-table-row\\\" *ngFor=\\\"let user of users\\\" detail=\\\"true\\\" button\\r\\n                [attr.aria-label]=\\\"'addon.mod_h5pactivity.review_user_attempts' | translate:{$a: user.attempts.length}\\\"\\r\\n                (click)=\\\"openUser(user)\\\">\\r\\n\\r\\n                <ion-label>\\r\\n                    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                        <ion-col class=\\\"ion-text-center\\\" size=\\\"4\\\">\\r\\n                            <p>\\r\\n                                <core-user-avatar [user]=\\\"user.user\\\" [courseId]=\\\"courseId\\\"></core-user-avatar>\\r\\n                            </p>\\r\\n                            {{ user.user.fullname }}\\r\\n                        </ion-col>\\r\\n                        <ion-col class=\\\"ion-text-center\\\" size=\\\"4\\\">\\r\\n                            <span *ngIf=\\\"user.attempts.length\\\">\\r\\n                                {{ user.attempts[user.attempts.length - 1].timemodified | coreFormatDate:'strftimedatetimeshort' }}\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"!user.attempts.length\\\">-</span>\\r\\n                        </ion-col>\\r\\n                        <ion-col class=\\\"ion-text-center\\\" size=\\\"2\\\">\\r\\n                            <span *ngIf=\\\"user.score !== undefined\\\">\\r\\n                                {{ 'core.percentagenumber' | translate: {$a: user.score} }}\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"user.score === undefined\\\">-</span>\\r\\n                        </ion-col>\\r\\n                        <ion-col class=\\\"ion-text-center\\\" size=\\\"2\\\">\\r\\n                            {{user.attempts.length}}\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ion-list>\\r\\n\\r\\n        <!-- No attempts. -->\\r\\n        <core-empty-box *ngIf=\\\"!users.length && !canLoadMore\\\" icon=\\\"fas-chart-bar\\\"\\r\\n            [message]=\\\"'addon.mod_h5pactivity.noparticipants' | translate\\\">\\r\\n        </core-empty-box>\\r\\n\\r\\n        <core-infinite-loading [enabled]=\\\"loaded && canLoadMore\\\" [error]=\\\"fetchMoreUsersFailed\\\" (action)=\\\"fetchMoreUsers($event)\\\">\\r\\n        </core-infinite-loading>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { AddonModH5PActivityUsersAttemptsPage } from './users-attempts';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonModH5PActivityUsersAttemptsPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n    ],\r\n    declarations: [\r\n        AddonModH5PActivityUsersAttemptsPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonModH5PActivityUsersAttemptsPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CoreUser, CoreUserProfile } from '@features/user/services/user';\r\nimport { IonRefresher } from '@ionic/angular';\r\n\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport {\r\n    AddonModH5PActivity,\r\n    AddonModH5PActivityData,\r\n    AddonModH5PActivityProvider,\r\n    AddonModH5PActivityUserAttempts,\r\n} from '../../services/h5pactivity';\r\n\r\n/**\r\n * Page that displays all users that can attempt an H5P activity.\r\n */\r\n@Component({\r\n    selector: 'page-addon-mod-h5pactivity-users-attempts',\r\n    templateUrl: 'users-attempts.html',\r\n})\r\nexport class AddonModH5PActivityUsersAttemptsPage implements OnInit {\r\n\r\n    loaded = false;\r\n    courseId!: number;\r\n    cmId!: number;\r\n    h5pActivity?: AddonModH5PActivityData;\r\n    users: AddonModH5PActivityUserAttemptsFormatted[] = [];\r\n    fetchMoreUsersFailed = false;\r\n    canLoadMore = false;\r\n\r\n    protected page = 0;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    async ngOnInit(): Promise<void> {\r\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\r\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\r\n\r\n        try {\r\n            await this.fetchData();\r\n\r\n            await AddonModH5PActivity.logViewReport(this.h5pActivity!.id, this.h5pActivity!.name);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading attempts.');\r\n        } finally {\r\n            this.loaded = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param refresher Refresher.\r\n     */\r\n    doRefresh(refresher: IonRefresher): void {\r\n        this.refreshData().finally(() => {\r\n            refresher.complete();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get quiz data and attempt data.\r\n     *\r\n     * @param refresh Whether user is refreshing data.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchData(refresh?: boolean): Promise<void> {\r\n        this.h5pActivity = await AddonModH5PActivity.getH5PActivity(this.courseId, this.cmId);\r\n\r\n        await Promise.all([\r\n            this.fetchUsers(refresh),\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Get users.\r\n     *\r\n     * @param refresh Whether user is refreshing data.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchUsers(refresh?: boolean): Promise<void> {\r\n        if (refresh) {\r\n            this.page = 0;\r\n        }\r\n\r\n        const result = await AddonModH5PActivity.getUsersAttempts(this.h5pActivity!.id, {\r\n            cmId: this.cmId,\r\n            page: this.page,\r\n        });\r\n\r\n        const formattedUsers = await this.formatUsers(result.users);\r\n\r\n        if (this.page === 0) {\r\n            this.users = formattedUsers;\r\n        } else {\r\n            this.users = this.users.concat(formattedUsers);\r\n        }\r\n\r\n        this.canLoadMore = result.canLoadMore;\r\n        this.page++;\r\n    }\r\n\r\n    /**\r\n     * Format users data.\r\n     *\r\n     * @param users Users to format.\r\n     * @return Formatted users.\r\n     */\r\n    protected async formatUsers(users: AddonModH5PActivityUserAttempts[]): Promise<AddonModH5PActivityUserAttemptsFormatted[]> {\r\n        return await Promise.all(users.map(async (user: AddonModH5PActivityUserAttemptsFormatted) => {\r\n            user.user = await CoreUser.getProfile(user.userid, this.courseId, true);\r\n\r\n            // Calculate the score of the user.\r\n            if (this.h5pActivity!.grademethod === AddonModH5PActivityProvider.GRADEMANUAL) {\r\n                // No score.\r\n            } else if (this.h5pActivity!.grademethod === AddonModH5PActivityProvider.GRADEAVERAGEATTEMPT) {\r\n                if (user.attempts.length) {\r\n                    // Calculate the average.\r\n                    const sumScores = user.attempts.reduce((sumScores, attempt) =>\r\n                        sumScores + attempt.rawscore * 100 / attempt.maxscore, 0);\r\n\r\n                    user.score = Math.round(sumScores / user.attempts.length);\r\n                }\r\n            } else if (user.scored?.attempts[0]) {\r\n                // Only a single attempt used to calculate the grade. Use it.\r\n                user.score = Math.round(user.scored.attempts[0].rawscore * 100 / user.scored.attempts[0].maxscore);\r\n            }\r\n\r\n            return user;\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Load a new batch of users.\r\n     *\r\n     * @param complete Completion callback.\r\n     */\r\n    async fetchMoreUsers(complete: () => void): Promise<void> {\r\n        try {\r\n            await this.fetchUsers(false);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading more users');\r\n\r\n            this.fetchMoreUsersFailed = true;\r\n        }\r\n\r\n        complete();\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async refreshData(): Promise<void> {\r\n        const promises = [\r\n            AddonModH5PActivity.invalidateActivityData(this.courseId),\r\n        ];\r\n\r\n        if (this.h5pActivity) {\r\n            promises.push(AddonModH5PActivity.invalidateAllUsersAttempts(this.h5pActivity.id));\r\n        }\r\n\r\n        await CoreUtils.ignoreErrors(Promise.all(promises));\r\n\r\n        await this.fetchData(true);\r\n    }\r\n\r\n    /**\r\n     * Open the page to view a user attempts.\r\n     *\r\n     * @param user User to open.\r\n     */\r\n    openUser(user: AddonModH5PActivityUserAttemptsFormatted): void {\r\n        CoreNavigator.navigate(`../userattempts/${user.userid}`);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * User attempts data with some calculated data.\r\n */\r\ntype AddonModH5PActivityUserAttemptsFormatted = AddonModH5PActivityUserAttempts & {\r\n    user?: CoreUserProfile;\r\n    score?: number;\r\n};\r\n"],"sourceRoot":"webpack:///"}