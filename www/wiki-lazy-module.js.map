{"version":3,"sources":["./src/addons/mod/wiki/pages/edit/edit.html","./src/addons/mod/wiki/pages/edit/edit.ts","./src/addons/mod/wiki/wiki-lazy.module.ts"],"names":[],"mappings":"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","file":"wiki-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>\\r\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\r\\n            </core-format-text>\\r\\n        </h1>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"save()\\\">\\r\\n                {{ 'core.save' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <form [formGroup]=\\\"pageForm\\\" #editPageForm *ngIf=\\\"loaded\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"canEditTitle\\\">\\r\\n                <ion-label class=\\\"sr-only\\\">{{ 'addon.mod_wiki.newpagetitle' | translate }}</ion-label>\\r\\n                <ion-input name=\\\"title\\\" type=\\\"text\\\" [placeholder]=\\\"'addon.mod_wiki.newpagetitle' | translate\\\"\\r\\n                    formControlName=\\\"title\\\">\\r\\n                </ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item>\\r\\n                <ion-label class=\\\"sr-only\\\">{{ 'core.content' | translate }}</ion-label>\\r\\n                <core-rich-text-editor [control]=\\\"contentControl\\\" [placeholder]=\\\"'core.content' | translate\\\"\\r\\n                    name=\\\"wiki_page_content\\\" [component]=\\\"component\\\" [componentId]=\\\"cmId\\\" [autoSave]=\\\"true\\\" contextLevel=\\\"module\\\"\\r\\n                    [contextInstanceId]=\\\"cmId\\\" elementId=\\\"newcontent_editor\\\" [draftExtraParams]=\\\"editorExtraParams\\\">\\r\\n                </core-rich-text-editor>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item *ngIf=\\\"wrongVersionLock\\\" class=\\\"ion-text-center addon-mod_wiki-wrongversionlock\\\" >\\r\\n                <ion-label>\\r\\n                    <ion-badge color=\\\"danger\\\" class=\\\"ion-padding\\\">{{ 'addon.mod_wiki.wrongversionlock' | translate }}</ion-badge>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </form>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { CoreError } from '@classes/errors/error';\r\nimport { CoreCourse } from '@features/course/services/course';\r\nimport { CanLeave } from '@guards/can-leave';\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreSync } from '@services/sync';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreTextUtils } from '@services/utils/text';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { CoreWSFile } from '@services/ws';\r\nimport { Translate } from '@singletons';\r\nimport { CoreEvents } from '@singletons/events';\r\nimport { CoreForms } from '@singletons/form';\r\nimport { AddonModWiki, AddonModWikiProvider } from '../../services/wiki';\r\nimport { AddonModWikiOffline } from '../../services/wiki-offline';\r\nimport { AddonModWikiSync } from '../../services/wiki-sync';\r\n\r\n/**\r\n * Page that allows adding or editing a wiki page.\r\n */\r\n@Component({\r\n    selector: 'page-addon-mod-wiki-edit',\r\n    templateUrl: 'edit.html',\r\n})\r\nexport class AddonModWikiEditPage implements OnInit, OnDestroy, CanLeave {\r\n\r\n    @ViewChild('editPageForm') formElement?: ElementRef;\r\n\r\n    cmId?: number; // Course module ID.\r\n    courseId?: number; // Course the wiki belongs to.\r\n    title?: string; // Title to display.\r\n    pageForm?: FormGroup; // The form group.\r\n    contentControl?: FormControl; // The FormControl for the page content.\r\n    canEditTitle = false; // Whether title can be edited.\r\n    loaded = false; // Whether the data has been loaded.\r\n    component = AddonModWikiProvider.COMPONENT; // Component to link the files to.\r\n    wrongVersionLock = false; // Whether the page lock doesn't match the initial one.\r\n    editorExtraParams: Record<string, unknown> = {};\r\n\r\n    protected subwikiId?: number; // Subwiki ID the page belongs to.\r\n    protected wikiId?: number; // Wiki ID the page belongs to.\r\n    protected pageId?: number; // The page ID (if editing a page).\r\n    protected section?: string; // The section being edited.\r\n    protected groupId?: number; // The group the subwiki belongs to.\r\n    protected userId?: number; // The user the subwiki belongs to.\r\n    protected blockId?: string; // ID to block the subwiki.\r\n    protected editing = false; // Whether the user is editing a page (true) or creating a new one (false).\r\n    protected editOffline = false; // Whether the user is editing an offline page.\r\n    protected subwikiFiles: CoreWSFile[] = []; // List of files of the subwiki.\r\n    protected originalContent?: string; // The original page content.\r\n    protected version?: number; // Page version.\r\n    protected renewLockInterval?: number; // An interval to renew the lock every certain time.\r\n    protected forceLeave = false; // To allow leaving the page without checking for changes.\r\n    protected isDestroyed = false; // Whether the page has been destroyed.\r\n\r\n    constructor(\r\n        protected formBuilder: FormBuilder,\r\n    ) { }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    async ngOnInit(): Promise<void> {\r\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId') || undefined;\r\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId') || undefined;\r\n        this.subwikiId = CoreNavigator.getRouteNumberParam('subwikiId');\r\n        this.wikiId = CoreNavigator.getRouteNumberParam('wikiId');\r\n        this.pageId = CoreNavigator.getRouteNumberParam('pageId');\r\n        this.section = CoreNavigator.getRouteParam('section');\r\n        this.groupId = CoreNavigator.getRouteNumberParam('groupId');\r\n        this.userId = CoreNavigator.getRouteNumberParam('userId');\r\n\r\n        let pageTitle = CoreNavigator.getRouteParam<string>('pageTitle');\r\n        pageTitle = pageTitle ? pageTitle.replace(/\\+/g, ' ') : '';\r\n\r\n        this.canEditTitle = !pageTitle;\r\n        this.title = pageTitle ?\r\n            Translate.instant('addon.mod_wiki.editingpage', { $a: pageTitle }) :\r\n            Translate.instant('addon.mod_wiki.newpagehdr');\r\n        this.blockId = AddonModWikiSync.getSubwikiBlockId(this.subwikiId, this.wikiId, this.userId, this.groupId);\r\n\r\n        // Create the form group and its controls.\r\n        this.contentControl = this.formBuilder.control('');\r\n        this.pageForm = this.formBuilder.group({\r\n            title: pageTitle,\r\n        });\r\n        this.pageForm.addControl('text', this.contentControl);\r\n\r\n        // Block the wiki so it cannot be synced.\r\n        CoreSync.blockOperation(this.component, this.blockId);\r\n\r\n        if (this.pageId) {\r\n            this.editorExtraParams.pageid = this.pageId;\r\n\r\n            if (this.section) {\r\n                this.editorExtraParams.section = this.section;\r\n            }\r\n        } else if (pageTitle) {\r\n            this.editorExtraParams.pagetitle = pageTitle;\r\n        }\r\n\r\n        try {\r\n            const success = await this.fetchWikiPageData();\r\n\r\n            if (success && !this.isDestroyed) {\r\n                // Block the subwiki now that we have blockId for sure.\r\n                const newBlockId = AddonModWikiSync.getSubwikiBlockId(this.subwikiId, this.wikiId, this.userId, this.groupId);\r\n                if (newBlockId != this.blockId) {\r\n                    CoreSync.unblockOperation(this.component, this.blockId);\r\n                    this.blockId = newBlockId;\r\n                    CoreSync.blockOperation(this.component, this.blockId);\r\n                }\r\n            }\r\n        } finally {\r\n            this.loaded = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convenience function to get wiki page data.\r\n     *\r\n     * @return Promise resolved with boolean: whether it was successful.\r\n     */\r\n    protected async fetchWikiPageData(): Promise<boolean> {\r\n        let canEdit = false;\r\n        let fetchFailed = false;\r\n\r\n        try {\r\n            // Wait for sync to be over (if any).\r\n            const syncResult = await AddonModWikiSync.waitForSync(this.blockId!);\r\n\r\n            if (this.pageId) {\r\n                // Editing a page that already exists.\r\n                this.canEditTitle = false;\r\n                this.editing = true;\r\n                this.editOffline = false; // Cannot edit pages in offline.\r\n\r\n                // Get page contents to obtain title and editing permission\r\n                const pageContents = await AddonModWiki.getPageContents(this.pageId, { cmId: this.cmId });\r\n\r\n                this.pageForm!.controls.title.setValue(pageContents.title); // Set the title in the form group.\r\n                this.wikiId = pageContents.wikiid;\r\n                this.subwikiId = pageContents.subwikiid;\r\n                this.title = Translate.instant('addon.mod_wiki.editingpage', { $a: pageContents.title });\r\n                this.groupId = pageContents.groupid;\r\n                this.userId = pageContents.userid;\r\n                canEdit = pageContents.caneditpage;\r\n\r\n                await this.fetchModuleAndCourseId();\r\n\r\n                // Get subwiki files, needed to replace URLs for rich text editor.\r\n                this.subwikiFiles = await AddonModWiki.getSubwikiFiles(this.wikiId, {\r\n                    groupId: this.groupId,\r\n                    userId: this.userId,\r\n                    cmId: this.cmId,\r\n                });\r\n\r\n                // Get editable text of the page/section.\r\n                const editContents = await AddonModWiki.getPageForEditing(this.pageId, this.section);\r\n\r\n                // Get the original page contents, treating file URLs if needed.\r\n                const content = CoreTextUtils.replacePluginfileUrls(editContents.content || '', this.subwikiFiles);\r\n\r\n                this.contentControl!.setValue(content);\r\n                this.originalContent = content;\r\n                this.version = editContents.version;\r\n\r\n                if (canEdit) {\r\n                    // Renew the lock every certain time.\r\n                    this.renewLockInterval = window.setInterval(() => {\r\n                        this.renewLock();\r\n                    }, AddonModWikiProvider.RENEW_LOCK_TIME);\r\n                }\r\n            } else {\r\n                const pageTitle = this.pageForm!.controls.title.value;\r\n                this.editing = false;\r\n                canEdit = !!this.blockId; // If no blockId, the user cannot edit the page.\r\n\r\n                await this.fetchModuleAndCourseId();\r\n\r\n                // Try to get wikiId.\r\n                if (!this.wikiId && this.cmId && this.courseId) {\r\n                    const module = await CoreCourse.getModule(this.cmId, this.courseId, undefined, true);\r\n\r\n                    this.wikiId = module.instance;\r\n                }\r\n\r\n                if (pageTitle) {\r\n                    // Title is set, it could be editing an offline page or creating a new page using an edit link.\r\n                    // First of all, verify if this page was created in the current sync.\r\n                    if (syncResult) {\r\n                        const page = syncResult.created.find((page) => page.title == pageTitle);\r\n\r\n                        if (page && page.pageId > 0) {\r\n                            // Page was created, now it exists in the site.\r\n                            this.pageId = page.pageId;\r\n\r\n                            return this.fetchWikiPageData();\r\n                        }\r\n                    }\r\n\r\n                    // Check if there's already some offline data for this page.\r\n                    const page = await CoreUtils.ignoreErrors(\r\n                        AddonModWikiOffline.getNewPage(pageTitle, this.subwikiId, this.wikiId, this.userId, this.groupId),\r\n                    );\r\n\r\n                    if (page) {\r\n                        // Load offline content.\r\n                        this.contentControl!.setValue(page.cachedcontent);\r\n                        this.originalContent = page.cachedcontent;\r\n                        this.editOffline = true;\r\n                    } else {\r\n                        // No offline data found.\r\n                        this.editOffline = false;\r\n                    }\r\n                } else {\r\n                    this.editOffline = false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting wiki data.');\r\n            fetchFailed = true;\r\n\r\n            // Go back.\r\n            this.forceLeavePage();\r\n\r\n            return false;\r\n        } finally {\r\n            if (!canEdit && !fetchFailed) {\r\n                // Cannot edit, show alert and go back.\r\n                CoreDomUtils.showAlert(Translate.instant('core.notice'), Translate.instant('addon.mod_wiki.cannoteditpage'));\r\n                this.forceLeavePage();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load cmId and courseId if they aren't set.\r\n     *\r\n     * @return Promise.\r\n     */\r\n    protected async fetchModuleAndCourseId(): Promise<void> {\r\n        if (!this.wikiId || (this.cmId && this.courseId)) {\r\n            return;\r\n        }\r\n\r\n        const module = await CoreCourse.getModuleBasicInfoByInstance(this.wikiId, 'wiki');\r\n\r\n        this.cmId = module.id;\r\n        this.courseId = module.course;\r\n    }\r\n\r\n    /**\r\n     * Force leaving the page, without checking for changes.\r\n     */\r\n    protected forceLeavePage(): void {\r\n        this.forceLeave = true;\r\n        CoreNavigator.back();\r\n    }\r\n\r\n    /**\r\n     * Navigate to a page.\r\n     *\r\n     * @param title Page title.\r\n     */\r\n    protected goToPage(title: string): void {\r\n        // Not the firstpage.\r\n        AddonModWiki.setEditedPageData({\r\n            cmId: this.cmId,\r\n            courseId: this.courseId,\r\n            pageId: this.pageId,\r\n            pageTitle: title,\r\n            wikiId: this.wikiId!,\r\n            subwikiId: this.subwikiId,\r\n            userId: this.userId,\r\n            groupId: this.groupId,\r\n        });\r\n\r\n        this.forceLeavePage();\r\n    }\r\n\r\n    /**\r\n     * Check if data has changed.\r\n     *\r\n     * @return Whether data has changed.\r\n     */\r\n    protected hasDataChanged(): boolean {\r\n        const values = this.pageForm!.value;\r\n\r\n        return !(this.originalContent == values.text || (!this.editing && !values.text && !values.title));\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    async canLeave(): Promise<boolean> {\r\n        if (this.forceLeave) {\r\n            return true;\r\n        }\r\n\r\n        // Check if data has changed.\r\n        if (this.hasDataChanged()) {\r\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\r\n        }\r\n\r\n        CoreForms.triggerFormCancelledEvent(this.formElement, CoreSites.getCurrentSiteId());\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    ionViewDidLeave(): void {\r\n        // When going back, the ionViewDidEnter of the previous page should be called before this ionViewDidLeave.\r\n        // But just in case, use a timeout to make sure it does.\r\n        setTimeout(() => {\r\n            // Remove the edited page data (if any) if the previous page isn't a wiki page.\r\n            AddonModWiki.consumeEditedPageData();\r\n        }, 200);\r\n    }\r\n\r\n    /**\r\n     * Save the data.\r\n     */\r\n    async save(): Promise<void> {\r\n        const values = this.pageForm!.value;\r\n        const title = values.title;\r\n        let text = values.text;\r\n\r\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n\r\n        text = CoreTextUtils.restorePluginfileUrls(text, this.subwikiFiles);\r\n        text = CoreTextUtils.formatHtmlLines(text);\r\n\r\n        try {\r\n            if (this.editing) {\r\n                // Edit existing page.\r\n                await AddonModWiki.editPage(this.pageId!, text, this.section);\r\n\r\n                CoreForms.triggerFormSubmittedEvent(this.formElement, true, CoreSites.getCurrentSiteId());\r\n\r\n                // Invalidate page since it changed.\r\n                await AddonModWiki.invalidatePage(this.pageId!);\r\n\r\n                return this.goToPage(title);\r\n            }\r\n\r\n            // Creating a new page.\r\n            if (!title) {\r\n                // Title is mandatory, stop.\r\n                modal.dismiss();\r\n                CoreDomUtils.showAlert(\r\n                    Translate.instant('core.notice'),\r\n                    Translate.instant('addon.mod_wiki.titleshouldnotbeempty'),\r\n                );\r\n\r\n                return;\r\n            }\r\n\r\n            if (!this.editOffline) {\r\n                // Check if the user has an offline page with the same title.\r\n                const page = await CoreUtils.ignoreErrors(\r\n                    AddonModWikiOffline.getNewPage(title, this.subwikiId, this.wikiId, this.userId, this.groupId),\r\n                );\r\n\r\n                if (page) {\r\n                    // There's a page with same title, reject with error message.\r\n                    throw new CoreError(Translate.instant('addon.mod_wiki.pageexists'));\r\n                }\r\n            }\r\n\r\n            // Try to send the page.\r\n            const id = await AddonModWiki.newPage(title, text, {\r\n                subwikiId: this.subwikiId,\r\n                wikiId: this.wikiId,\r\n                userId: this.userId,\r\n                groupId: this.groupId,\r\n                cmId: this.cmId,\r\n            });\r\n\r\n            CoreForms.triggerFormSubmittedEvent(this.formElement, id > 0, CoreSites.getCurrentSiteId());\r\n\r\n            if (id <= 0) {\r\n                // Page stored in offline. Go to see the offline page.\r\n                return this.goToPage(title);\r\n            }\r\n\r\n            // Page was created, get its data and go to the page.\r\n            CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'wiki' });\r\n            this.pageId = id;\r\n\r\n            const pageContents = await AddonModWiki.getPageContents(this.pageId, { cmId: this.cmId });\r\n\r\n            const promises: Promise<unknown>[] = [];\r\n            this.wikiId = pageContents.wikiid;\r\n\r\n            // Invalidate subwiki pages since there are new.\r\n            promises.push(AddonModWiki.invalidateSubwikiPages(this.wikiId));\r\n            if (!this.subwikiId) {\r\n                // Subwiki was not created, invalidate subwikis as well.\r\n                promises.push(AddonModWiki.invalidateSubwikis(this.wikiId));\r\n            }\r\n\r\n            this.subwikiId = pageContents.subwikiid;\r\n            this.userId = pageContents.userid;\r\n            this.groupId = pageContents.groupid;\r\n\r\n            await CoreUtils.ignoreErrors(Promise.all(promises));\r\n\r\n            // Notify page created.\r\n            CoreEvents.trigger(AddonModWikiProvider.PAGE_CREATED_EVENT, {\r\n                pageId: this.pageId,\r\n                subwikiId: this.subwikiId,\r\n                pageTitle: title,\r\n            }, CoreSites.getCurrentSiteId());\r\n\r\n            this.goToPage(title);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error saving wiki data.');\r\n        } finally {\r\n            modal.dismiss();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renew lock and control versions.\r\n     */\r\n    protected async renewLock(): Promise<void> {\r\n        const response = await AddonModWiki.getPageForEditing(this.pageId!, this.section, true);\r\n\r\n        if (response.version && this.version != response.version) {\r\n            this.wrongVersionLock = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.isDestroyed = true;\r\n        clearInterval(this.renewLockInterval);\r\n\r\n        // Unblock the subwiki.\r\n        if (this.blockId) {\r\n            CoreSync.unblockOperation(this.component, this.blockId);\r\n        }\r\n    }\r\n\r\n}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { AddonModWikiComponentsModule } from './components/components.module';\r\nimport { AddonModWikiIndexPage } from './pages/index/index';\r\nimport { CoreEditorComponentsModule } from '@features/editor/components/components.module';\r\nimport { CanLeaveGuard } from '@guards/can-leave';\r\nimport { AddonModWikiEditPage } from './pages/edit/edit';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: ':courseId/:cmId/page/:hash',\r\n        component: AddonModWikiIndexPage,\r\n    },\r\n    {\r\n        path: ':courseId/:cmId/edit',\r\n        component: AddonModWikiEditPage,\r\n        canDeactivate: [CanLeaveGuard],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        AddonModWikiComponentsModule,\r\n        CoreEditorComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonModWikiIndexPage,\r\n        AddonModWikiEditPage,\r\n    ],\r\n})\r\nexport class AddonModWikiLazyModule {}\r\n"],"sourceRoot":"webpack:///"}