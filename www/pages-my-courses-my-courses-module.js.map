{"version":3,"sources":["./src/core/features/courses/pages/my-courses/my-courses.html","./src/core/features/courses/pages/my-courses/my-courses.module.ts","./src/core/features/courses/pages/my-courses/my-courses.ts"],"names":[],"mappings":"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","file":"pages-my-courses-my-courses-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>{{ 'core.courses.mycourses' | translate }}</h1>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <core-navbar-buttons>\\r\\n                <ion-button *ngIf=\\\"searchEnabled\\\" (click)=\\\"openSearch()\\\"\\r\\n                    [attr.aria-label]=\\\"'core.courses.searchcourses' | translate\\\">\\r\\n                    <ion-icon name=\\\"fas-search\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n                <ion-button [hidden]=\\\"!downloadAllCoursesEnabled || !courses || courses.length < 2 || downloadAllCoursesLoading\\\"\\r\\n                    (click)=\\\"prefetchCourses()\\\" [attr.aria-label]=\\\"'core.courses.downloadcourses' | translate\\\">\\r\\n                    <ion-icon [name]=\\\"downloadAllCoursesIcon\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                </ion-button>\\r\\n                <ion-spinner [hidden]=\\\"!downloadAllCoursesEnabled || !courses || courses.length < 2 ||\\r\\n                    downloadAllCoursesBadge != '' || !downloadAllCoursesLoading\\\"\\r\\n                    [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\r\\n                <ion-badge [hidden]=\\\"!downloadAllCoursesEnabled || !courses || courses.length < 2 || !downloadAllCoursesLoading ||\\r\\n                    downloadAllCoursesBadge == '' || !downloadAllCoursesLoading\\\"\\r\\n                    role=\\\"progressbar\\\" [attr.aria-valuemax]=\\\"downloadAllCoursesTotal\\\"\\r\\n                    [attr.aria-valuenow]=\\\"downloadAllCoursesCount\\\" [attr.aria-valuetext]=\\\"downloadAllCoursesBadgeA11yText\\\">\\r\\n                    {{downloadAllCoursesBadge}}\\r\\n                </ion-badge>\\r\\n            </core-navbar-buttons>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!coursesLoaded\\\" (ionRefresh)=\\\"refreshCourses($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"coursesLoaded\\\">\\r\\n        <ion-searchbar #searchbar *ngIf=\\\"courses && courses.length > 5\\\" [(ngModel)]=\\\"filter\\\" (ionInput)=\\\"filterChanged($event)\\\"\\r\\n            (ionCancel)=\\\"filterChanged()\\\" [placeholder]=\\\"'core.courses.filtermycourses' | translate\\\">\\r\\n        </ion-searchbar>\\r\\n        <ion-grid class=\\\"ion-no-padding safe-area-page\\\">\\r\\n            <ion-row class=\\\"ion-no-padding\\\">\\r\\n                <ion-col *ngFor=\\\"let course of filteredCourses\\\" class=\\\"ion-no-padding\\\"\\r\\n                    size=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"4\\\" size-xl=\\\"4\\\">\\r\\n                    <core-courses-course-progress [course]=\\\"course\\\" class=\\\"core-courseoverview\\\" showAll=\\\"true\\\">\\r\\n                    </core-courses-course-progress>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n        </ion-grid>\\r\\n        <core-empty-box *ngIf=\\\"!courses || !courses.length\\\" icon=\\\"fas-graduation-cap\\\"\\r\\n            [message]=\\\"'core.courses.nocourses' | translate\\\">\\r\\n            <p *ngIf=\\\"searchEnabled\\\">{{ 'core.courses.searchcoursesadvice' | translate }}</p>\\r\\n        </core-empty-box>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreCoursesMyCoursesPage } from './my-courses';\r\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CoreCoursesMyCoursesPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        CoreCoursesComponentsModule,\r\n    ],\r\n    declarations: [\r\n        CoreCoursesMyCoursesPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class CoreCoursesMyCoursesPageModule { }\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { IonSearchbar, IonRefresher } from '@ionic/angular';\r\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport {\r\n    CoreCoursesProvider,\r\n    CoreCourses,\r\n} from '../../services/courses';\r\nimport { CoreCoursesHelper, CoreEnrolledCourseDataWithExtraInfoAndOptions } from '../../services/courses-helper';\r\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\r\nimport { CoreConstants } from '@/core/constants';\r\nimport { CoreCourseOptionsDelegate } from '@features/course/services/course-options-delegate';\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { Translate } from '@singletons';\r\n\r\n/**\r\n * Page that displays the list of courses the user is enrolled in.\r\n */\r\n@Component({\r\n    selector: 'page-core-courses-my-courses',\r\n    templateUrl: 'my-courses.html',\r\n})\r\nexport class CoreCoursesMyCoursesPage implements OnInit, OnDestroy {\r\n\r\n    @ViewChild(IonSearchbar) searchbar!: IonSearchbar;\r\n\r\n    courses: CoreEnrolledCourseDataWithExtraInfoAndOptions[] = [];\r\n    filteredCourses: CoreEnrolledCourseDataWithExtraInfoAndOptions[] = [];\r\n    searchEnabled = false;\r\n    filter = '';\r\n    showFilter = false;\r\n    coursesLoaded = false;\r\n    downloadAllCoursesIcon = CoreConstants.ICON_NOT_DOWNLOADED;\r\n    downloadAllCoursesLoading = false;\r\n    downloadAllCoursesBadge = '';\r\n    downloadAllCoursesEnabled = false;\r\n    downloadAllCoursesCount?: number;\r\n    downloadAllCoursesTotal?: number;\r\n    downloadAllCoursesBadgeA11yText = '';\r\n\r\n    protected myCoursesObserver: CoreEventObserver;\r\n    protected siteUpdatedObserver: CoreEventObserver;\r\n    protected isDestroyed = false;\r\n    protected courseIds = '';\r\n\r\n    constructor() {\r\n        // Update list if user enrols in a course.\r\n        this.myCoursesObserver = CoreEvents.on(\r\n            CoreCoursesProvider.EVENT_MY_COURSES_UPDATED,\r\n            (data) => {\r\n\r\n                if (data.action == CoreCoursesProvider.ACTION_ENROL) {\r\n                    this.fetchCourses();\r\n                }\r\n            },\r\n\r\n            CoreSites.getCurrentSiteId(),\r\n        );\r\n\r\n        // Refresh the enabled flags if site is updated.\r\n        this.siteUpdatedObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\r\n            this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\r\n            this.downloadAllCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\r\n        }, CoreSites.getCurrentSiteId());\r\n    }\r\n\r\n    /**\r\n     * Component being initialized.\r\n     */\r\n    ngOnInit(): void {\r\n        this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\r\n        this.downloadAllCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\r\n\r\n        this.fetchCourses().finally(() => {\r\n            this.coursesLoaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch the user courses.\r\n     *\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchCourses(): Promise<void> {\r\n        try {\r\n            const courses: CoreEnrolledCourseDataWithExtraInfoAndOptions[] = await CoreCourses.getUserCourses();\r\n            const courseIds = courses.map((course) => course.id);\r\n\r\n            this.courseIds = courseIds.join(',');\r\n\r\n            await CoreCoursesHelper.loadCoursesExtraInfo(courses);\r\n\r\n            if (CoreCourses.canGetAdminAndNavOptions()) {\r\n                const options = await CoreCourses.getCoursesAdminAndNavOptions(courseIds);\r\n                courses.forEach((course) => {\r\n                    course.navOptions = options.navOptions[course.id];\r\n                    course.admOptions = options.admOptions[course.id];\r\n                });\r\n            }\r\n\r\n            this.courses = courses;\r\n            this.filteredCourses = this.courses;\r\n            this.filter = '';\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the courses.\r\n     *\r\n     * @param refresher Refresher.\r\n     */\r\n    refreshCourses(refresher: IonRefresher): void {\r\n        const promises: Promise<void>[] = [];\r\n\r\n        promises.push(CoreCourses.invalidateUserCourses());\r\n        promises.push(CoreCourseOptionsDelegate.clearAndInvalidateCoursesOptions());\r\n        if (this.courseIds) {\r\n            promises.push(CoreCourses.invalidateCoursesByField('ids', this.courseIds));\r\n        }\r\n\r\n        Promise.all(promises).finally(() => {\r\n            this.fetchCourses().finally(() => {\r\n                refresher?.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Show or hide the filter.\r\n     */\r\n    switchFilter(): void {\r\n        this.filter = '';\r\n        this.showFilter = !this.showFilter;\r\n        this.filteredCourses = this.courses;\r\n        if (this.showFilter) {\r\n            setTimeout(() => {\r\n                this.searchbar.setFocus();\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The filter has changed.\r\n     *\r\n     * @param Received Event.\r\n     */\r\n    filterChanged(event?: Event): void {\r\n        const target = <HTMLInputElement>event?.target || null;\r\n        const newValue = target ? String(target.value).trim().toLowerCase() : null;\r\n        if (!newValue || !this.courses) {\r\n            this.filteredCourses = this.courses;\r\n        } else {\r\n            // Use displayname if available, or fullname if not.\r\n            if (this.courses.length > 0 && typeof this.courses[0].displayname != 'undefined') {\r\n                this.filteredCourses = this.courses.filter((course) => course.displayname!.toLowerCase().indexOf(newValue) > -1);\r\n            } else {\r\n                this.filteredCourses = this.courses.filter((course) => course.fullname.toLowerCase().indexOf(newValue) > -1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prefetch all the courses.\r\n     *\r\n     * @return Promise resolved when done.\r\n     */\r\n    async prefetchCourses(): Promise<void> {\r\n        this.downloadAllCoursesLoading = true;\r\n\r\n        try {\r\n            await CoreCourseHelper.confirmAndPrefetchCourses(this.courses, { onProgress: (progress) => {\r\n                this.downloadAllCoursesBadge = progress.count + ' / ' + progress.total;\r\n                this.downloadAllCoursesBadgeA11yText =\r\n                    Translate.instant('core.course.downloadcoursesprogressdescription', progress);\r\n                this.downloadAllCoursesCount = progress.count;\r\n                this.downloadAllCoursesTotal = progress.total;\r\n            } });\r\n        } catch (error) {\r\n            if (!this.isDestroyed) {\r\n                CoreDomUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\r\n            }\r\n        }\r\n\r\n        this.downloadAllCoursesBadge = '';\r\n        this.downloadAllCoursesLoading = false;\r\n    }\r\n\r\n    /**\r\n     * Go to search courses.\r\n     */\r\n    openSearch(): void {\r\n        CoreNavigator.navigateToSitePath('courses/search');\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.isDestroyed = true;\r\n        this.myCoursesObserver?.off();\r\n        this.siteUpdatedObserver?.off();\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}