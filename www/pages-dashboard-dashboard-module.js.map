{"version":3,"sources":["./src/core/features/courses/pages/dashboard/dashboard.html","./src/core/features/courses/pages/dashboard/dashboard.module.ts","./src/core/features/courses/pages/dashboard/dashboard.scss","./src/core/features/courses/pages/dashboard/dashboard.ts"],"names":[],"mappings":"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","file":"pages-dashboard-dashboard-module.js","sourcesContent":["export default \"<core-navbar-buttons slot=\\\"end\\\">\\r\\n    <ion-button *ngIf=\\\"searchEnabled\\\" (click)=\\\"openSearch()\\\" [attr.aria-label]=\\\"'core.courses.searchcourses' | translate\\\">\\r\\n        <ion-icon name=\\\"fas-search\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n    </ion-button>\\r\\n    <core-context-menu>\\r\\n        <core-context-menu-item *ngIf=\\\"(downloadCourseEnabled || downloadCoursesEnabled)\\\" [priority]=\\\"1000\\\"\\r\\n        [content]=\\\"'core.settings.showdownloadoptions' | translate\\\" (action)=\\\"toggleDownload()\\\"\\r\\n        [iconAction]=\\\"downloadEnabledIcon\\\"></core-context-menu-item>\\r\\n        <core-context-menu-item *ngIf=\\\"(downloadCourseEnabled || downloadCoursesEnabled)\\\" [priority]=\\\"500\\\"\\r\\n        [content]=\\\"'addon.storagemanager.managestorage' | translate\\\"\\r\\n        (action)=\\\"manageCoursesStorage()\\\" iconAction=\\\"fas-archive\\\"></core-context-menu-item>\\r\\n    </core-context-menu>\\r\\n</core-navbar-buttons>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshDashboard($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <ion-list>\\r\\n            <ng-container *ngFor=\\\"let block of blocks\\\">\\r\\n                <core-block *ngIf=\\\"block.visible\\\" [block]=\\\"block\\\" contextLevel=\\\"user\\\" [instanceId]=\\\"userId\\\"\\r\\n                [extraData]=\\\"{'downloadEnabled': downloadEnabled}\\\"></core-block>\\r\\n            </ng-container>\\r\\n        </ion-list>\\r\\n\\r\\n        <core-empty-box *ngIf=\\\"blocks.length == 0\\\" icon=\\\"fas-th-large\\\" [message]=\\\"'core.course.nocontentavailable' | translate\\\">\\r\\n        </core-empty-box>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreBlockComponentsModule } from '@features/block/components/components.module';\r\n\r\nimport { CoreCoursesDashboardPage } from './dashboard';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CoreCoursesDashboardPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        CoreBlockComponentsModule,\r\n    ],\r\n    declarations: [\r\n        CoreCoursesDashboardPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class CoreCoursesDashboardPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy9jb3Vyc2VzL3BhZ2VzL2Rhc2hib2FyZC9kYXNoYm9hcmQuc2NzcyJ9 */\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { IonRefresher } from '@ionic/angular';\r\n\r\nimport { CoreCourses, CoreCoursesProvider } from '../../services/courses';\r\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreCoursesDashboard } from '@features/courses/services/dashboard';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreCourseBlock } from '@features/course/services/course';\r\nimport { CoreBlockComponent } from '@features/block/components/block/block';\r\nimport { CoreNavigator } from '@services/navigator';\r\n\r\n/**\r\n * Page that displays the dashboard page.\r\n */\r\n@Component({\r\n    selector: 'page-core-courses-dashboard',\r\n    templateUrl: 'dashboard.html',\r\n    styleUrls: ['dashboard.scss'],\r\n})\r\nexport class CoreCoursesDashboardPage implements OnInit, OnDestroy {\r\n\r\n    @ViewChildren(CoreBlockComponent) blocksComponents?: QueryList<CoreBlockComponent>;\r\n\r\n    searchEnabled = false;\r\n    downloadEnabled = false;\r\n    downloadCourseEnabled = false;\r\n    downloadCoursesEnabled = false;\r\n    downloadEnabledIcon = 'far-square';\r\n    userId?: number;\r\n    blocks: Partial<CoreCourseBlock>[] = [];\r\n    loaded = false;\r\n\r\n    protected updateSiteObserver?: CoreEventObserver;\r\n\r\n    /**\r\n     * Initialize the component.\r\n     */\r\n    ngOnInit(): void {\r\n        this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\r\n        this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\r\n        this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\r\n\r\n        // Refresh the enabled flags if site is updated.\r\n        this.updateSiteObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\r\n            this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\r\n            this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\r\n            this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\r\n\r\n            this.switchDownload(this.downloadEnabled && this.downloadCourseEnabled && this.downloadCoursesEnabled);\r\n        }, CoreSites.getCurrentSiteId());\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    /**\r\n     * Convenience function to fetch the dashboard data.\r\n     *\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async loadContent(): Promise<void> {\r\n        const available = await CoreCoursesDashboard.isAvailable();\r\n\r\n        if (available) {\r\n            this.userId = CoreSites.getCurrentSiteUserId();\r\n\r\n            try {\r\n                this.blocks = await CoreCoursesDashboard.getDashboardBlocks();\r\n            } catch (error) {\r\n                CoreDomUtils.showErrorModal(error);\r\n\r\n                // Cannot get the blocks, just show dashboard if needed.\r\n                this.loadFallbackBlocks();\r\n            }\r\n        } else if (!CoreCoursesDashboard.isDisabledInSite()) {\r\n            // Not available, but not disabled either. Use fallback.\r\n            this.loadFallbackBlocks();\r\n        } else {\r\n            // Disabled.\r\n            this.blocks = [];\r\n        }\r\n\r\n        // this.dashboardEnabled = this.blockDelegate.hasSupportedBlock(this.blocks);\r\n        this.loaded = true;\r\n    }\r\n\r\n    /**\r\n     * Load fallback blocks to shown before 3.6 when dashboard blocks are not supported.\r\n     */\r\n    protected loadFallbackBlocks(): void {\r\n        this.blocks = [\r\n            {\r\n                name: 'myoverview',\r\n                visible: true,\r\n            },\r\n            {\r\n                name: 'timeline',\r\n                visible: true,\r\n            },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Refresh the dashboard data.\r\n     *\r\n     * @param refresher Refresher.\r\n     */\r\n    refreshDashboard(refresher: IonRefresher): void {\r\n        const promises: Promise<void>[] = [];\r\n\r\n        promises.push(CoreCoursesDashboard.invalidateDashboardBlocks());\r\n\r\n        // Invalidate the blocks.\r\n        this.blocksComponents?.forEach((blockComponent) => {\r\n            promises.push(blockComponent.invalidate().catch(() => {\r\n                // Ignore errors.\r\n            }));\r\n        });\r\n\r\n        Promise.all(promises).finally(() => {\r\n            this.loadContent().finally(() => {\r\n                refresher?.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggle download enabled.\r\n     */\r\n    toggleDownload(): void {\r\n        this.switchDownload(!this.downloadEnabled);\r\n    }\r\n\r\n    /**\r\n     * Convenience function to switch download enabled.\r\n     *\r\n     * @param enable If enable or disable.\r\n     */\r\n    protected switchDownload(enable: boolean): void {\r\n        this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && enable;\r\n        this.downloadEnabledIcon = this.downloadEnabled ? 'far-check-square' : 'far-square';\r\n        CoreEvents.trigger(CoreCoursesProvider.EVENT_DASHBOARD_DOWNLOAD_ENABLED_CHANGED, { enabled: this.downloadEnabled });\r\n    }\r\n\r\n    /**\r\n     * Open page to manage courses storage.\r\n     */\r\n    manageCoursesStorage(): void {\r\n        CoreNavigator.navigateToSitePath('/storage');\r\n    }\r\n\r\n    /**\r\n     * Go to search courses.\r\n     */\r\n    async openSearch(): Promise<void> {\r\n        CoreNavigator.navigateToSitePath('/courses/search');\r\n    }\r\n\r\n    /**\r\n     * Component being destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.updateSiteObserver?.off();\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}