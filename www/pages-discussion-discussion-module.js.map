{"version":3,"sources":["./src/addons/messages/components/conversation-info/conversation-info.html","./src/addons/messages/pages/discussion/discussion.html","./src/addons/mod/forum/pages/discussion/discussion.html","./src/addons/messages/components/components.module.ts","./src/addons/messages/components/conversation-info/conversation-info.ts","./src/addons/messages/pages/discussion/discussion.module.ts","./src/addons/messages/pages/discussion/discussion.page.ts","./src/addons/messages/pages/discussion/discussion.scss","./src/addons/mod/forum/pages/discussion/discussion.module.ts","./src/addons/mod/forum/pages/discussion/discussion.page.ts","./src/addons/mod/forum/pages/discussion/discussion.scss"],"names":[],"mappings":"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","file":"pages-discussion-discussion-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <h2>{{ 'addon.messages.groupinfo' | translate }}</h2>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"closeModal()\\\" [attr.aria-label]=\\\"'core.close' | translate\\\">\\r\\n                <ion-icon name=\\\"fas-times\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshData($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <ion-item class=\\\"ion-text-center\\\" *ngIf=\\\"conversation\\\">\\r\\n            <ion-label>\\r\\n                <div class=\\\"large-avatar\\\">\\r\\n                    <img class=\\\"avatar\\\" [src]=\\\"conversation!.imageurl\\\" core-external-content [alt]=\\\"conversation!.name\\\"\\r\\n                    onError=\\\"this.src='assets/img/group-avatar.png'\\\">\\r\\n                </div>\\r\\n                <h2>\\r\\n                    <core-format-text [text]=\\\"conversation!.name\\\" contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\"></core-format-text>\\r\\n                </h2>\\r\\n                <p>\\r\\n                    <core-format-text *ngIf=\\\"conversation!.subname\\\" [text]=\\\"conversation!.subname\\\" contextLevel=\\\"system\\\"\\r\\n                        [contextInstanceId]=\\\"0\\\">\\r\\n                    </core-format-text>\\r\\n                </p>\\r\\n                <p>{{ 'addon.messages.numparticipants' | translate:{$a: conversation!.membercount} }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item class=\\\"ion-text-wrap addon-messages-conversation-item\\\" *ngFor=\\\"let member of members\\\"\\r\\n            (click)=\\\"closeModal(member.id)\\\" detail=\\\"true\\\" button>\\r\\n            <core-user-avatar [user]=\\\"member\\\" [linkProfile]=\\\"false\\\" [checkOnline]=\\\"member.showonlinestatus\\\" slot=\\\"start\\\">\\r\\n            </core-user-avatar>\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">\\r\\n                    {{ member.fullname }}\\r\\n                    <ion-icon name=\\\"fas-user-slash\\\" *ngIf=\\\"member.isblocked\\\"\\r\\n                        [attr.aria-label]=\\\"'addon.messages.contactblocked' | translate\\\">\\r\\n                    </ion-icon>\\r\\n                </p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n\\r\\n        <core-infinite-loading [enabled]=\\\"canLoadMore\\\" (action)=\\\"loadMoreMembers($event)\\\" [error]=\\\"loadMoreError\\\">\\r\\n        </core-infinite-loading>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>\\r\\n            <img *ngIf=\\\"loaded && !otherMember && conversationImage\\\" class=\\\"core-bar-button-image\\\" [src]=\\\"conversationImage\\\"\\r\\n                alt=\\\"\\\" onError=\\\"this.src='assets/img/group-avatar.png'\\\" core-external-content role=\\\"presentation\\\"\\r\\n                [siteId]=\\\"siteId || null\\\">\\r\\n            <core-user-avatar *ngIf=\\\"loaded && otherMember\\\" class=\\\"core-bar-button-image\\\" [user]=\\\"otherMember\\\"\\r\\n                [linkProfile]=\\\"false\\\" [checkOnline]=\\\"otherMember.showonlinestatus\\\">\\r\\n            </core-user-avatar>\\r\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\"></core-format-text>\\r\\n            <ion-icon *ngIf=\\\"conversation && conversation.isfavourite\\\" name=\\\"fas-star\\\"\\r\\n                [attr.aria-label]=\\\"'core.favourites' | translate\\\">\\r\\n            </ion-icon>\\r\\n            <ion-icon *ngIf=\\\"conversation && conversation.ismuted\\\" name=\\\"fas-bell-slash\\\"\\r\\n                [attr.aria-label]=\\\"'addon.messages.mutedconversation' | translate\\\">\\r\\n            </ion-icon>\\r\\n        </h1>\\r\\n        <ion-buttons slot=\\\"end\\\"></ion-buttons>\\r\\n    </ion-toolbar>\\r\\n    <core-navbar-buttons slot=\\\"end\\\">\\r\\n        <core-context-menu [attr.aria-label]=\\\"'addon.messages.conversationactions' | translate\\\">\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !showInfo || isGroup\\\" [priority]=\\\"1000\\\"\\r\\n                [content]=\\\"'addon.messages.info' | translate\\\" (action)=\\\"viewInfo()\\\"\\r\\n                iconAction=\\\"fas-info-circle\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !showInfo || !isGroup\\\" [priority]=\\\"1000\\\"\\r\\n                [content]=\\\"'addon.messages.groupinfo' | translate\\\" (action)=\\\"viewInfo()\\\"\\r\\n                iconAction=\\\"fas-info-circle\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"!groupMessagingEnabled || !conversation\\\" [priority]=\\\"800\\\"\\r\\n                [content]=\\\"(conversation && conversation.isfavourite ? 'addon.messages.removefromfavourites' :\\r\\n                'addon.messages.addtofavourites') | translate\\\"\\r\\n                (action)=\\\"changeFavourite($event)\\\" [closeOnClick]=\\\"false\\\" [iconAction]=\\\"favouriteIcon\\\"\\r\\n                [iconSlash]=\\\"favouriteIconSlash\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !otherMember || otherMember.isblocked\\\" [priority]=\\\"700\\\"\\r\\n                [content]=\\\"'addon.messages.blockuser' | translate\\\" (action)=\\\"blockUser()\\\" [iconAction]=\\\"blockIcon\\\">\\r\\n            </core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !otherMember || !otherMember.isblocked\\\" [priority]=\\\"700\\\"\\r\\n                [content]=\\\"'addon.messages.unblockuser' | translate\\\" (action)=\\\"unblockUser()\\\" [iconAction]=\\\"blockIcon\\\">\\r\\n            </core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !muteEnabled || !conversation\\\" [priority]=\\\"600\\\"\\r\\n                [content]=\\\"(conversation && conversation.ismuted ? 'addon.messages.unmuteconversation' :\\r\\n                'addon.messages.muteconversation') | translate\\\" (action)=\\\"changeMute($event)\\\" [closeOnClick]=\\\"false\\\"\\r\\n                [iconAction]=\\\"muteIcon\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"!canDelete || !messages || !messages.length\\\" [priority]=\\\"400\\\"\\r\\n                [content]=\\\"'addon.messages.showdeletemessages' | translate\\\" (action)=\\\"toggleDelete()\\\"\\r\\n                [iconAction]=\\\"(showDelete ? 'far-check-square' : 'far-square')\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"!groupMessagingEnabled || !conversationId || isGroup || !messages || !messages.length\\\"\\r\\n                [priority]=\\\"200\\\" [content]=\\\"'addon.messages.deleteconversation' | translate\\\" (action)=\\\"deleteConversation($event)\\\"\\r\\n                [closeOnClick]=\\\"false\\\" [iconAction]=\\\"deleteIcon\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item\\r\\n                [hidden]=\\\"isSelf || !otherMember || otherMember.iscontact || requestContactSent || requestContactReceived\\\"\\r\\n                [priority]=\\\"100\\\" [content]=\\\"'addon.messages.addtoyourcontacts' | translate\\\" (action)=\\\"createContactRequest()\\\"\\r\\n                [iconAction]=\\\"addRemoveIcon\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !otherMember || !otherMember.iscontact\\\" [priority]=\\\"100\\\"\\r\\n                [content]=\\\"'addon.messages.removefromyourcontacts' | translate\\\" (action)=\\\"removeContact()\\\"\\r\\n                [iconAction]=\\\"addRemoveIcon\\\" [iconSlash]=\\\"true\\\"></core-context-menu-item>\\r\\n        </core-context-menu>\\r\\n    </core-navbar-buttons>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"has-footer\\\" (ionScroll)=\\\"scrollFunction()\\\">\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\" class=\\\"safe-area-page\\\">\\r\\n        <!-- Load previous messages. -->\\r\\n        <core-infinite-loading [enabled]=\\\"canLoadMore\\\" (action)=\\\"loadPrevious($event)\\\" position=\\\"top\\\" [error]=\\\"loadMoreError\\\">\\r\\n        </core-infinite-loading>\\r\\n\\r\\n        <ng-container *ngIf=\\\"isSelf && !canLoadMore\\\">\\r\\n            <p class=\\\"ion-text-center\\\">{{ 'addon.messages.selfconversation' | translate }}</p>\\r\\n            <p class=\\\"ion-text-center\\\"><i>{{ 'addon.messages.selfconversationdefaultmessage' | translate }}</i></p>\\r\\n        </ng-container>\\r\\n\\r\\n        <h2 class=\\\"sr-only\\\">{{ title }}</h2>\\r\\n\\r\\n        <ion-list class=\\\"addon-messages-discussion-container\\\" [class.addon-messages-discussion-group]=\\\"isGroup\\\"\\r\\n            [attr.aria-live]=\\\"'polite'\\\">\\r\\n            <ng-container *ngFor=\\\"let message of messages; index as index; last as last\\\">\\r\\n                <h3 class=\\\"ion-text-center addon-messages-date\\\" *ngIf=\\\"message.showDate\\\">\\r\\n                    {{ message.timecreated | coreFormatDate: \\\"strftimedayshort\\\" }}\\r\\n                </h3>\\r\\n\\r\\n                <ion-chip class=\\\"addon-messages-unreadfrom\\\" *ngIf=\\\"unreadMessageFrom && message.id == unreadMessageFrom\\\"\\r\\n                    color=\\\"light\\\">\\r\\n                    <ion-label>{{ 'addon.messages.newmessages' | translate }}</ion-label>\\r\\n                    <ion-icon name=\\\"fas-arrow-down\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                </ion-chip>\\r\\n\\r\\n                <ion-item class=\\\"ion-text-wrap addon-message\\\" (longPress)=\\\"copyMessage(message)\\\"\\r\\n                    [class.addon-message-mine]=\\\"message.useridfrom == currentUserId\\\"\\r\\n                    [class.addon-message-not-mine]=\\\"message.useridfrom != currentUserId\\\"\\r\\n                    [class.addon-message-no-user]=\\\"!message.showUserData\\\"\\r\\n                    [@coreSlideInOut]=\\\"message.useridfrom == currentUserId ? '' : 'fromLeft'\\\">\\r\\n                    <ion-label>\\r\\n                        <!-- User data. -->\\r\\n                        <div *ngIf=\\\"message.showUserData\\\" class=\\\"item-heading addon-message-user\\\">\\r\\n                            <core-user-avatar slot=\\\"start\\\" [user]=\\\"members[message.useridfrom]\\\" [linkProfile]=\\\"false\\\"\\r\\n                                aria-hidden=\\\"true\\\">\\r\\n                            </core-user-avatar>\\r\\n                            <div>{{ members[message.useridfrom].fullname }}</div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!message.showUserData\\\" class=\\\"sr-only\\\">\\r\\n                            {{ message.useridfrom == currentUserId\\r\\n                            ? ('addon.messages.you' | translate)\\r\\n                            : members[message.useridfrom].fullname }}\\r\\n                        </div>\\r\\n\\r\\n                        <!-- Some messages have <p> and some others don't. Add a <p> so they all have same styles. -->\\r\\n                        <p class=\\\"addon-message-text\\\">\\r\\n                            <core-format-text (afterRender)=\\\"last && scrollToBottom()\\\" [text]=\\\"message.text\\\" contextLevel=\\\"system\\\"\\r\\n                                [contextInstanceId]=\\\"0\\\"></core-format-text>\\r\\n                        </p>\\r\\n                    </ion-label>\\r\\n                    <ion-note *ngIf=\\\"!message.pending\\\" slot=\\\"end\\\">{{ message.timecreated | coreFormatDate: \\\"strftimetime\\\" }}</ion-note>\\r\\n                    <ion-note *ngIf=\\\"message.pending\\\" slot=\\\"end\\\">\\r\\n                        <ion-icon name=\\\"fas-clock\\\" [attr.aria-label]=\\\"'core.notsent' | translate\\\" role=\\\"status\\\"></ion-icon>\\r\\n                    </ion-note>\\r\\n                    <ion-button fill=\\\"clear\\\" *ngIf=\\\"!message.sending && showDelete\\\" (click)=\\\"deleteMessage(message, index)\\\"\\r\\n                        class=\\\"addon-messages-delete-button\\\" [@coreSlideInOut]=\\\"'fromRight'\\\"\\r\\n                        [attr.aria-label]=\\\" 'addon.messages.deletemessage' | translate\\\" slot=\\\"end\\\">\\r\\n                        <ion-icon name=\\\"fas-trash\\\" color=\\\"danger\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n\\r\\n                    <div class=\\\"tail\\\" *ngIf=\\\"message.showTail\\\"></div>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n        </ion-list>\\r\\n\\r\\n        <core-empty-box *ngIf=\\\"!messages || messages.length <= 0\\\" icon=\\\"far-comments\\\"\\r\\n            [message]=\\\"'addon.messages.nomessagesfound' | translate\\\"></core-empty-box>\\r\\n    </core-loading>\\r\\n    <!-- Scroll bottom. -->\\r\\n    <ion-fab slot=\\\"fixed\\\" core-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" *ngIf=\\\"loaded && newMessages > 0\\\">\\r\\n        <ion-fab-button size=\\\"small\\\" (click)=\\\"scrollToFirstUnreadMessage()\\\" color=\\\"light\\\"\\r\\n            [attr.aria-label]=\\\"'addon.messages.newmessages' | translate\\\">\\r\\n            <ion-icon name=\\\"fas-arrow-down\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <span class=\\\"sr-only\\\">{{ 'addon.messages.newmessages' | translate }}</span>\\r\\n            <span class=\\\"core-discussion-messages-badge\\\">{{ newMessages }}</span>\\r\\n        </ion-fab-button>\\r\\n    </ion-fab>\\r\\n</ion-content>\\r\\n<ion-footer color=\\\"light\\\" class=\\\"footer-adjustable\\\" *ngIf=\\\"loaded && (!conversationId || conversation)\\\">\\r\\n    <ion-toolbar color=\\\"light\\\">\\r\\n        <p *ngIf=\\\"footerType == 'unable'\\\" class=\\\"ion-text-center ion-margin-horizontal\\\">\\r\\n            {{ 'addon.messages.unabletomessage' | translate }}\\r\\n        </p>\\r\\n        <div *ngIf=\\\"footerType == 'blocked'\\\" class=\\\"ion-padding-horizontal\\\">\\r\\n            <p class=\\\"ion-text-center\\\">{{ 'addon.messages.youhaveblockeduser' | translate }}</p>\\r\\n            <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin-bottom\\\" (click)=\\\"unblockUser()\\\">\\r\\n                {{ 'addon.messages.unblockuser' | translate }}\\r\\n            </ion-button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"footerType == 'requiresContact' && otherMember\\\" class=\\\"ion-padding-horizontal\\\">\\r\\n            <p class=\\\"ion-text-center\\\">\\r\\n                <strong>{{ 'addon.messages.isnotinyourcontacts' | translate: {$a: otherMember.fullname} }}</strong>\\r\\n            </p>\\r\\n            <p class=\\\"ion-text-center\\\">{{ 'addon.messages.requirecontacttomessage' | translate: {$a: otherMember.fullname} }}</p>\\r\\n            <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin-bottom\\\" (click)=\\\"createContactRequest()\\\">\\r\\n                {{ 'addon.messages.sendcontactrequest' | translate }}\\r\\n            </ion-button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"footerType == 'requestReceived' && otherMember\\\" class=\\\"ion-padding-horizontal\\\">\\r\\n            <p class=\\\"ion-text-center\\\">{{ 'addon.messages.userwouldliketocontactyou' | translate: {$a: otherMember.fullname} }}</p>\\r\\n            <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin-bottom\\\" (click)=\\\"confirmContactRequest()\\\">\\r\\n                {{ 'addon.messages.acceptandaddcontact' | translate }}\\r\\n            </ion-button>\\r\\n            <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin-bottom\\\" color=\\\"light\\\" (click)=\\\"declineContactRequest()\\\">\\r\\n                {{ 'addon.messages.decline' | translate }}\\r\\n            </ion-button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"footerType == 'requestSent' || (footerType == 'message' && requestContactSent)\\\" class=\\\"ion-padding-horizontal\\\">\\r\\n            <p class=\\\"ion-text-center\\\"><strong>{{ 'addon.messages.contactrequestsent' | translate }}</strong></p>\\r\\n            <p class=\\\"ion-text-center\\\" *ngIf=\\\"otherMember\\\">\\r\\n                {{ 'addon.messages.yourcontactrequestpending' | translate: {$a: otherMember.fullname} }}\\r\\n            </p>\\r\\n        </div>\\r\\n        <core-send-message-form *ngIf=\\\"footerType == 'message'\\\" (onSubmit)=\\\"sendMessage($event)\\\" [showKeyboard]=\\\"showKeyboard\\\"\\r\\n            [placeholder]=\\\"'addon.messages.newmessage' | translate\\\"></core-send-message-form>\\r\\n    </ion-toolbar>\\r\\n</ion-footer>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1 *ngIf=\\\"startingPost\\\">\\r\\n            <core-format-text contextLevel=\\\"module\\\" [text]=\\\"startingPost.subject\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\r\\n            </core-format-text>\\r\\n        </h1>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <!-- The context menu will be added in here. -->\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<core-navbar-buttons slot=\\\"end\\\">\\r\\n    <core-context-menu>\\r\\n        <core-context-menu-item *ngIf=\\\"discussionLoaded && !postHasOffline && isOnline\\\"\\r\\n            [priority]=\\\"650\\\" [content]=\\\"'addon.mod_forum.refreshposts' | translate\\\" [iconAction]=\\\"refreshIcon\\\" [closeOnClick]=\\\"false\\\"\\r\\n            (action)=\\\"doRefresh(null, $event)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item *ngIf=\\\"discussionLoaded && isMobile && postHasOffline && isOnline\\\"\\r\\n            [priority]=\\\"550\\\" [content]=\\\"'core.settings.synchronizenow' | translate\\\" [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\"\\r\\n            (action)=\\\"doRefresh(null, $event, true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"sort == 'flat-oldest'\\\"\\r\\n            [priority]=\\\"500\\\" [content]=\\\"'addon.mod_forum.modeflatoldestfirst' | translate\\\" iconAction=\\\"fas-arrow-down\\\"\\r\\n            (action)=\\\"changeSort('flat-oldest')\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"sort == 'flat-newest'\\\"\\r\\n            [priority]=\\\"450\\\" [content]=\\\"'addon.mod_forum.modeflatnewestfirst' | translate\\\" iconAction=\\\"fas-arrow-up\\\"\\r\\n            (action)=\\\"changeSort('flat-newest')\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"sort == 'nested'\\\"\\r\\n            [priority]=\\\"400\\\" [content]=\\\"'addon.mod_forum.modenested' | translate\\\" iconAction=\\\"fas-exchange-alt\\\"\\r\\n            (action)=\\\"changeSort('nested')\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canlock || discussion.locked\\\"\\r\\n            [priority]=\\\"300\\\" [content]=\\\"'addon.mod_forum.lockdiscussion' | translate\\\" iconAction=\\\"fas-lock\\\"\\r\\n            (action)=\\\"setLockState(true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canlock || !discussion.locked\\\"\\r\\n            [priority]=\\\"300\\\" [content]=\\\"'addon.mod_forum.unlockdiscussion' | translate\\\" iconAction=\\\"fas-unlock\\\"\\r\\n            (action)=\\\"setLockState(false)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !canPin || discussion.pinned\\\"\\r\\n            [priority]=\\\"250\\\" [content]=\\\"'addon.mod_forum.pindiscussion' | translate\\\" iconAction=\\\"fas-map-pin\\\"\\r\\n            (action)=\\\"setPinState(true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !canPin || !discussion.pinned\\\"\\r\\n            [priority]=\\\"250\\\" [content]=\\\"'addon.mod_forum.unpindiscussion' | translate\\\" [iconSlash]=\\\"true\\\" iconAction=\\\"fas-map-pin\\\"\\r\\n            (action)=\\\"setPinState(false)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canfavourite || discussion.starred\\\"\\r\\n            [priority]=\\\"200\\\" [content]=\\\"'addon.mod_forum.addtofavourites' | translate\\\" iconAction=\\\"fas-star\\\"\\r\\n            (action)=\\\"toggleFavouriteState(true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canfavourite || !discussion.starred\\\"\\r\\n            [priority]=\\\"200\\\" [content]=\\\"'addon.mod_forum.removefromfavourites' | translate\\\" iconAction=\\\"fas-star\\\" [iconSlash]=\\\"true\\\"\\r\\n            (action)=\\\"toggleFavouriteState(false)\\\">\\r\\n        </core-context-menu-item>\\r\\n    </core-context-menu>\\r\\n</core-navbar-buttons>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!discussionLoaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"discussionLoaded\\\">\\r\\n        <!-- Discussion replies found to be synchronized -->\\r\\n        <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"postHasOffline || hasOfflineRatings\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ 'core.hasdatatosync' | translate:{$a: discussionStr} }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <!-- Cut-off date or due date message -->\\r\\n        <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"availabilityMessage\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-info-circle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ availabilityMessage }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"discussion && discussion.locked\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-lock\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ 'addon.mod_forum.discussionlocked' | translate }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <div *ngIf=\\\"startingPost\\\" class=\\\"ion-margin-bottom\\\">\\r\\n            <addon-mod-forum-post\\r\\n                [post]=\\\"startingPost\\\" [discussion]=\\\"discussion\\\" [courseId]=\\\"courseId\\\" [highlight]=\\\"true\\\"\\r\\n                [discussionId]=\\\"discussionId\\\" [component]=\\\"component\\\" [componentId]=\\\"cmId\\\"\\r\\n                [replyData]=\\\"replyData\\\" [originalData]=\\\"originalData\\\" [forum]=\\\"forum\\\" [accessInfo]=\\\"accessInfo\\\"\\r\\n                [trackPosts]=\\\"trackPosts\\\" [ratingInfo]=\\\"ratingInfo\\\" [leavingPage]=\\\"leavingPage\\\"\\r\\n                (onPostChange)=\\\"postListChanged()\\\">\\r\\n            </addon-mod-forum-post>\\r\\n        </div>\\r\\n\\r\\n        <ion-card *ngIf=\\\"sort != 'nested'\\\">\\r\\n            <ng-container *ngFor=\\\"let post of posts; first as first\\\">\\r\\n                <core-spacer *ngIf=\\\"!first\\\"></core-spacer>\\r\\n                <addon-mod-forum-post\\r\\n                    [post]=\\\"post\\\" [courseId]=\\\"courseId\\\" [discussionId]=\\\"discussionId\\\"\\r\\n                    [component]=\\\"component\\\" [componentId]=\\\"cmId\\\" [replyData]=\\\"replyData\\\"\\r\\n                    [originalData]=\\\"originalData\\\" [parentSubject]=\\\"postSubjects[post.parentid]\\\"\\r\\n                    [forum]=\\\"forum\\\" [accessInfo]=\\\"accessInfo\\\" [trackPosts]=\\\"trackPosts\\\" [ratingInfo]=\\\"ratingInfo\\\"\\r\\n                    [leavingPage]=\\\"leavingPage\\\"\\r\\n                    (onPostChange)=\\\"postListChanged()\\\">\\r\\n                </addon-mod-forum-post>\\r\\n            </ng-container>\\r\\n        </ion-card>\\r\\n\\r\\n        <ng-container *ngIf=\\\"sort == 'nested'\\\">\\r\\n            <ng-container *ngFor=\\\"let post of posts\\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"nestedPosts; context: {post: post}\\\"></ng-container>\\r\\n            </ng-container>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-template #nestedPosts let-post=\\\"post\\\">\\r\\n            <ion-card>\\r\\n                <addon-mod-forum-post\\r\\n                    [post]=\\\"post\\\" [courseId]=\\\"courseId\\\" [discussionId]=\\\"discussionId\\\" [component]=\\\"component\\\"\\r\\n                    [componentId]=\\\"cmId\\\" [replyData]=\\\"replyData\\\" [originalData]=\\\"originalData\\\"\\r\\n                    [parentSubject]=\\\"postSubjects[post.parentid]\\\" [forum]=\\\"forum\\\" [accessInfo]=\\\"accessInfo\\\"\\r\\n                    [trackPosts]=\\\"trackPosts\\\" [ratingInfo]=\\\"ratingInfo\\\" [leavingPage]=\\\"leavingPage\\\"\\r\\n                    (onPostChange)=\\\"postListChanged()\\\">\\r\\n                </addon-mod-forum-post>\\r\\n            </ion-card>\\r\\n            <div class=\\\"ion-padding-start\\\" *ngIf=\\\"post.children && post.children.length && post.children[0].subject\\\">\\r\\n                <ng-container *ngFor=\\\"let child of post.children\\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"nestedPosts; context: {post: child}\\\"></ng-container>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\n\r\nimport { AddonMessagesConversationInfoComponent } from './conversation-info/conversation-info';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonMessagesConversationInfoComponent,\r\n    ],\r\n    imports: [\r\n        CoreSharedModule,\r\n    ],\r\n})\r\nexport class AddonMessagesComponentsModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { IonRefresher } from '@ionic/angular';\r\nimport {\r\n    AddonMessagesConversationFormatted,\r\n    AddonMessagesConversationMember,\r\n    AddonMessages,\r\n} from '../../services/messages';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@singletons';\r\n\r\n/**\r\n * Component that displays the list of conversations, including group conversations.\r\n */\r\n@Component({\r\n    selector: 'page-addon-messages-conversation-info',\r\n    templateUrl: 'conversation-info.html',\r\n})\r\nexport class AddonMessagesConversationInfoComponent implements OnInit {\r\n\r\n    @Input() conversationId = 0;\r\n\r\n    loaded = false;\r\n    conversation?: AddonMessagesConversationFormatted;\r\n    members: AddonMessagesConversationMember[] = [];\r\n    canLoadMore = false;\r\n    loadMoreError = false;\r\n\r\n    constructor(\r\n        protected route: ActivatedRoute,\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Component loaded.\r\n     */\r\n    ngOnInit(): void {\r\n        this.fetchData().finally(() => {\r\n            this.loaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch the required data.\r\n     *\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchData(): Promise<void> {\r\n        // Get the conversation data first.\r\n        try {\r\n            const conversation = await AddonMessages.getConversation(this.conversationId, false, true, 0, 0);\r\n            this.conversation = conversation;\r\n\r\n            // Now get the members.\r\n            await this.fetchMembers();\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting members.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get conversation members.\r\n     *\r\n     * @param loadingMore Whether we are loading more data or just the first ones.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchMembers(loadingMore?: boolean): Promise<void> {\r\n        this.loadMoreError = false;\r\n\r\n        const limitFrom = loadingMore ? this.members.length : 0;\r\n\r\n        const data = await AddonMessages.getConversationMembers(this.conversationId, limitFrom);\r\n        if (loadingMore) {\r\n            this.members = this.members.concat(data.members);\r\n        } else {\r\n            this.members = data.members;\r\n        }\r\n\r\n        this.canLoadMore = data.canLoadMore;\r\n    }\r\n\r\n    /**\r\n     * Function to load more members.\r\n     *\r\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\r\n     * @return Resolved when done.\r\n     */\r\n    async loadMoreMembers(infiniteComplete?: () => void): Promise<void> {\r\n        try {\r\n            await this.fetchMembers(true);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting members.');\r\n            this.loadMoreError = true;\r\n        } finally {\r\n            infiniteComplete && infiniteComplete();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param refresher Refresher.\r\n     * @return Promise resolved when done.\r\n     */\r\n    async refreshData(refresher?: IonRefresher): Promise<void> {\r\n        const promises: Promise<void>[] = [];\r\n\r\n        promises.push(AddonMessages.invalidateConversation(this.conversationId));\r\n        promises.push(AddonMessages.invalidateConversationMembers(this.conversationId));\r\n\r\n        await Promise.all(promises);\r\n\r\n        await this.fetchData().finally(() => {\r\n            refresher?.complete();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Close modal.\r\n     *\r\n     * @param userId User conversation to load.\r\n     */\r\n    closeModal(userId?: number): void {\r\n        ModalController.dismiss(userId);\r\n    }\r\n\r\n}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\n\r\nimport { AddonMessagesDiscussionPage } from './discussion.page';\r\nimport { AddonMessagesComponentsModule } from '@addons/messages/components/components.module';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonMessagesDiscussionPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        AddonMessagesComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonMessagesDiscussionPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonMessagesDiscussionPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { IonContent } from '@ionic/angular';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\r\nimport { CoreSites } from '@services/sites';\r\nimport {\r\n    AddonMessagesProvider,\r\n    AddonMessagesConversationFormatted,\r\n    AddonMessagesConversationMember,\r\n    AddonMessagesGetMessagesMessage,\r\n    AddonMessages,\r\n    AddonMessagesConversationMessageFormatted,\r\n    AddonMessagesSendMessageResults,\r\n} from '../../services/messages';\r\nimport { AddonMessagesOffline, AddonMessagesOfflineMessagesDBRecordFormatted } from '../../services/messages-offline';\r\nimport { AddonMessagesSync, AddonMessagesSyncProvider } from '../../services/messages-sync';\r\nimport { CoreUser } from '@features/user/services/user';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { CoreTextUtils } from '@services/utils/text';\r\nimport { CoreLogger } from '@singletons/logger';\r\nimport { CoreApp } from '@services/app';\r\nimport { CoreInfiniteLoadingComponent } from '@components/infinite-loading/infinite-loading';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport moment from 'moment';\r\nimport { CoreAnimations } from '@components/animations';\r\nimport { CoreError } from '@classes/errors/error';\r\nimport { Translate } from '@singletons';\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { CoreIonLoadingElement } from '@classes/ion-loading';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AddonMessagesConversationInfoComponent } from '../../components/conversation-info/conversation-info';\r\nimport { CoreConstants } from '@/core/constants';\r\n\r\n/**\r\n * Page that displays a message discussion page.\r\n */\r\n@Component({\r\n    selector: 'page-addon-messages-discussion',\r\n    templateUrl: 'discussion.html',\r\n    animations: [CoreAnimations.SLIDE_IN_OUT],\r\n    styleUrls: ['discussion.scss'],\r\n})\r\nexport class AddonMessagesDiscussionPage implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    @ViewChild(IonContent) content?: IonContent;\r\n    @ViewChild(CoreInfiniteLoadingComponent) infinite?: CoreInfiniteLoadingComponent;\r\n\r\n    siteId: string;\r\n    protected fetching = false;\r\n    protected polling?: number;\r\n    protected logger: CoreLogger;\r\n\r\n    protected messagesBeingSent = 0;\r\n    protected pagesLoaded = 1;\r\n    protected lastMessage = { text: '', timecreated: 0 };\r\n    protected keepMessageMap: {[hash: string]: boolean} = {};\r\n    protected syncObserver: CoreEventObserver;\r\n    protected oldContentHeight = 0;\r\n    protected scrollBottom = true;\r\n    protected viewDestroyed = false;\r\n    protected memberInfoObserver: CoreEventObserver;\r\n    protected showLoadingModal = false; // Whether to show a loading modal while fetching data.\r\n    protected hostElement: HTMLElement;\r\n\r\n    conversationId?: number; // Conversation ID. Undefined if it's a new individual conversation.\r\n    conversation?: AddonMessagesConversationFormatted; // The conversation object (if it exists).\r\n    userId?: number; // User ID you're talking to (only if group messaging not enabled or it's a new individual conversation).\r\n    currentUserId: number;\r\n    title?: string;\r\n    showInfo = false;\r\n    conversationImage?: string;\r\n    loaded = false;\r\n    showKeyboard = false;\r\n    canLoadMore = false;\r\n    loadMoreError = false;\r\n    messages: AddonMessagesConversationMessageFormatted[] = [];\r\n    showDelete = false;\r\n    canDelete = false;\r\n    groupMessagingEnabled: boolean;\r\n    isGroup = false;\r\n    members: {[id: number]: AddonMessagesConversationMember} = {}; // Members that wrote a message, indexed by ID.\r\n    favouriteIcon = 'fa-star';\r\n    deleteIcon = 'fas-trash';\r\n    blockIcon = 'fas-user-lock';\r\n    addRemoveIcon = 'fas-user-plus';\r\n    muteIcon = 'fas-bell-slash';\r\n    favouriteIconSlash = false;\r\n    muteEnabled = false;\r\n    otherMember?: AddonMessagesConversationMember; // Other member information (individual conversations only).\r\n    footerType: 'message' | 'blocked' | 'requiresContact' | 'requestSent' | 'requestReceived' | 'unable' = 'unable';\r\n    requestContactSent = false;\r\n    requestContactReceived = false;\r\n    isSelf = false;\r\n    newMessages = 0;\r\n    scrollElement?: HTMLElement;\r\n    unreadMessageFrom = 0;\r\n    initialized = false;\r\n\r\n    constructor(\r\n        protected route: ActivatedRoute,\r\n        protected elementRef: ElementRef<HTMLElement>,\r\n    ) {\r\n        this.hostElement = elementRef.nativeElement;\r\n        this.siteId = CoreSites.getCurrentSiteId();\r\n        this.currentUserId = CoreSites.getCurrentSiteUserId();\r\n        this.groupMessagingEnabled = AddonMessages.isGroupMessagingEnabled();\r\n        this.muteEnabled = AddonMessages.isMuteConversationEnabled();\r\n\r\n        this.logger = CoreLogger.getInstance('AddonMessagesDiscussionPage');\r\n\r\n        // Refresh data if this discussion is synchronized automatically.\r\n        this.syncObserver = CoreEvents.on(AddonMessagesSyncProvider.AUTO_SYNCED, (data) => {\r\n            if ((data.userId && data.userId == this.userId) ||\r\n                    (data.conversationId && data.conversationId == this.conversationId)) {\r\n                // Fetch messages.\r\n                this.fetchMessages();\r\n\r\n                // Show first warning if any.\r\n                if (data.warnings && data.warnings[0]) {\r\n                    CoreDomUtils.showErrorModal(data.warnings[0]);\r\n                }\r\n            }\r\n        }, this.siteId);\r\n\r\n        // Refresh data if info of a mamber of the conversation have changed.\r\n        this.memberInfoObserver = CoreEvents.on(\r\n            AddonMessagesProvider.MEMBER_INFO_CHANGED_EVENT,\r\n            (data) => {\r\n                if (data.userId && (this.members[data.userId] || this.otherMember && data.userId == this.otherMember.id)) {\r\n                    this.fetchData();\r\n                }\r\n            },\r\n            this.siteId,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Runs when the page has loaded. This event only happens once per page being created.\r\n     * If a page leaves but is cached, then this event will not fire again on a subsequent viewing.\r\n     * Setup code for the page.\r\n     */\r\n    async ngOnInit(): Promise<void> {\r\n\r\n        this.route.queryParams.subscribe(async (params) => {\r\n            const oldConversationId = this.conversationId;\r\n            const oldUserId = this.userId;\r\n            let forceScrollToBottom = false;\r\n            this.conversationId = CoreNavigator.getRouteNumberParam('conversationId', { params }) || undefined;\r\n            this.userId = CoreNavigator.getRouteNumberParam('userId', { params }) || undefined;\r\n            this.showInfo = !params.hideInfo;\r\n\r\n            if (oldConversationId != this.conversationId || oldUserId != this.userId) {\r\n                // Showing reload again can break animations.\r\n                this.loaded = false;\r\n                this.initialized = false;\r\n                forceScrollToBottom = true;\r\n            }\r\n\r\n            this.showKeyboard = CoreNavigator.getRouteBooleanParam('showKeyboard', { params }) || false;\r\n\r\n            await this.fetchData();\r\n\r\n            this.scrollToBottom(forceScrollToBottom);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * View has been initialized.\r\n     */\r\n    async ngAfterViewInit(): Promise<void> {\r\n        this.scrollElement = await this.content?.getScrollElement();\r\n    }\r\n\r\n    /**\r\n     * Adds a new message to the message list.\r\n     *\r\n     * @param message Message to be added.\r\n     * @param keep If set the keep flag or not.\r\n     * @return If message is not mine and was recently added.\r\n     */\r\n    protected addMessage(\r\n        message: AddonMessagesConversationMessageFormatted,\r\n        keep: boolean = true,\r\n    ): boolean {\r\n\r\n        /* Create a hash to identify the message. The text of online messages isn't reliable because it can have random data\r\n           like VideoJS ID. Try to use id and fallback to text for offline messages. */\r\n        const id = 'id' in message ? message.id : '';\r\n        message.hash = Md5.hashAsciiStr(String(id || message.text || '')) + '#' + message.timecreated + '#' +\r\n                message.useridfrom;\r\n\r\n        let added = false;\r\n        if (typeof this.keepMessageMap[message.hash] === 'undefined') {\r\n            // Message not added to the list. Add it now.\r\n            this.messages.push(message);\r\n            added = message.useridfrom != this.currentUserId;\r\n        }\r\n        // Message needs to be kept in the list.\r\n        this.keepMessageMap[message.hash] = keep;\r\n\r\n        return added;\r\n    }\r\n\r\n    /**\r\n     * Remove a message if it shouldn't be in the list anymore.\r\n     *\r\n     * @param hash Hash of the message to be removed.\r\n     */\r\n    protected removeMessage(hash: string): void {\r\n        if (this.keepMessageMap[hash]) {\r\n            // Selected to keep it, clear the flag.\r\n            this.keepMessageMap[hash] = false;\r\n\r\n            return;\r\n        }\r\n\r\n        delete this.keepMessageMap[hash];\r\n\r\n        const position = this.messages.findIndex((message) => message.hash == hash);\r\n        if (position >= 0) {\r\n            this.messages.splice(position, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convenience function to fetch the conversation data.\r\n     *\r\n     * @return Resolved when done.\r\n     */\r\n    protected async fetchData(): Promise<void> {\r\n        let loader: CoreIonLoadingElement | undefined;\r\n        if (this.showLoadingModal) {\r\n            loader = await CoreDomUtils.showModalLoading();\r\n        }\r\n\r\n        if (!this.groupMessagingEnabled && this.userId) {\r\n            // Get the user profile to retrieve the user fullname and image.\r\n            CoreUser.getProfile(this.userId, undefined, true).then((user) => {\r\n                if (!this.title) {\r\n                    this.title = user.fullname;\r\n                }\r\n                this.conversationImage = user.profileimageurl;\r\n                this.members[user.id] = <AddonMessagesConversationMember>user;\r\n\r\n                return;\r\n            }).catch(() => {\r\n                // Ignore errors.\r\n            });\r\n        }\r\n\r\n        // Synchronize messages if needed.\r\n        try {\r\n            const syncResult = await AddonMessagesSync.syncDiscussion(this.conversationId, this.userId);\r\n            if (syncResult.warnings && syncResult.warnings[0]) {\r\n                CoreDomUtils.showErrorModal(syncResult.warnings[0]);\r\n            }\r\n        } catch {\r\n            // Ignore errors;\r\n        }\r\n\r\n        try {\r\n            const promises: Promise<void>[] = [];\r\n            if (this.groupMessagingEnabled) {\r\n                // Get the conversation ID if it exists and we don't have it yet.\r\n                const exists = await this.getConversation(this.conversationId, this.userId);\r\n\r\n                if (exists) {\r\n                    // Fetch the messages for the first time.\r\n                    promises.push(this.fetchMessages());\r\n                }\r\n\r\n                if (this.userId) {\r\n                    // Get the member info. Invalidate first to make sure we get the latest status.\r\n                    promises.push(AddonMessages.invalidateMemberInfo(this.userId).then(async () => {\r\n                        this.otherMember = await AddonMessages.getMemberInfo(this.userId!);\r\n\r\n                        if (!exists && this.otherMember) {\r\n                            this.conversationImage = this.otherMember.profileimageurl;\r\n                            this.title = this.otherMember.fullname;\r\n                        }\r\n                        this.blockIcon = this.otherMember.isblocked ? 'fas-user-check' : 'fas-user-lock';\r\n\r\n                        return;\r\n                    }));\r\n                } else {\r\n                    this.otherMember = undefined;\r\n                }\r\n\r\n            } else {\r\n                if (this.userId) {\r\n                    // Fake the user member info.\r\n                    promises.push(CoreUser.getProfile(this.userId!).then(async (user) => {\r\n                        this.otherMember = {\r\n                            id: user.id,\r\n                            fullname: user.fullname,\r\n                            profileurl: '',\r\n                            profileimageurl: user.profileimageurl || '',\r\n                            profileimageurlsmall: user.profileimageurlsmall || '',\r\n                            isonline: false,\r\n                            showonlinestatus: false,\r\n                            isblocked: false,\r\n                            iscontact: false,\r\n                            isdeleted: false,\r\n                            canmessageevenifblocked: true,\r\n                            canmessage: true,\r\n                            requirescontact: false,\r\n                        };\r\n                        this.otherMember.isblocked = await AddonMessages.isBlocked(this.userId!);\r\n                        this.otherMember.iscontact = await AddonMessages.isContact(this.userId!);\r\n                        this.blockIcon = this.otherMember.isblocked ? 'fas-user-check' : 'fas-user-lock';\r\n\r\n                        return;\r\n                    }));\r\n\r\n                }\r\n\r\n                // Fetch the messages for the first time.\r\n                promises.push(this.fetchMessages().then(() => {\r\n                    if (!this.title && this.messages.length) {\r\n                        // Didn't receive the fullname via argument. Try to get it from messages.\r\n                        // It's possible that name cannot be resolved when no messages were yet exchanged.\r\n                        const firstMessage = this.messages[0];\r\n                        if ('usertofullname' in firstMessage) {\r\n                            if (firstMessage.useridto != this.currentUserId) {\r\n                                this.title = firstMessage.usertofullname || '';\r\n                            } else {\r\n                                this.title = firstMessage.userfromfullname || '';\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return;\r\n                }));\r\n            }\r\n\r\n            await Promise.all(promises);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingmessages', true);\r\n        } finally {\r\n            this.checkCanDelete();\r\n            this.loaded = true;\r\n            this.setPolling(); // Make sure we're polling messages.\r\n            this.setContactRequestInfo();\r\n            this.setFooterType();\r\n            loader && loader.dismiss();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Runs when the page has fully entered and is now the active page.\r\n     * This event will fire, whether it was the first load or a cached page.\r\n     */\r\n    ionViewDidEnter(): void {\r\n        this.setPolling();\r\n    }\r\n\r\n    /**\r\n     * Runs when the page is about to leave and no longer be the active page.\r\n     */\r\n    ionViewWillLeave(): void {\r\n        this.unsetPolling();\r\n    }\r\n\r\n    /**\r\n     * Convenience function to fetch messages.\r\n     *\r\n     * @param messagesAreNew If messages loaded are new messages.\r\n     * @return Resolved when done.\r\n     */\r\n    protected async fetchMessages(messagesAreNew: boolean = true): Promise<void> {\r\n        this.loadMoreError = false;\r\n\r\n        if (this.messagesBeingSent > 0) {\r\n            // We do not poll while a message is being sent or we could confuse the user.\r\n            // Otherwise, his message would disappear from the list, and he'd have to wait for the interval to check for messages.\r\n            return;\r\n        } else if (this.fetching) {\r\n            // Already fetching.\r\n            return;\r\n        } else if (this.groupMessagingEnabled && !this.conversationId) {\r\n            // Don't have enough data to fetch messages.\r\n            throw new CoreError('No enough data provided to fetch messages');\r\n        }\r\n\r\n        if (this.conversationId) {\r\n            this.logger.debug(`Polling new messages for conversation '${this.conversationId}'`);\r\n        } else if (this.userId) {\r\n            this.logger.debug(`Polling new messages for discussion with user '${this.userId}'`);\r\n        } else {\r\n            // Should not happen.\r\n            throw new CoreError('No enough data provided to fetch messages');\r\n        }\r\n\r\n        this.fetching = true;\r\n\r\n        try {\r\n            // Wait for synchronization process to finish.\r\n            await AddonMessagesSync.waitForSyncConversation(this.conversationId, this.userId);\r\n\r\n            let messages: AddonMessagesConversationMessageFormatted[] = [];\r\n            // Fetch messages. Invalidate the cache before fetching.\r\n            if (this.groupMessagingEnabled) {\r\n                await AddonMessages.invalidateConversationMessages(this.conversationId!);\r\n                messages = await this.getConversationMessages(this.pagesLoaded);\r\n            } else {\r\n                await AddonMessages.invalidateDiscussionCache(this.userId!);\r\n                messages = await this.getDiscussionMessages(this.pagesLoaded);\r\n            }\r\n\r\n            this.loadMessages(messages, messagesAreNew);\r\n\r\n        } finally {\r\n            this.fetching = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Format and load a list of messages into the view.\r\n     *\r\n     * @param messagesAreNew If messages loaded are new messages.\r\n     * @param messages Messages to load.\r\n     */\r\n    protected loadMessages(\r\n        messages: AddonMessagesConversationMessageFormatted[],\r\n        messagesAreNew: boolean = true,\r\n    ): void {\r\n\r\n        if (this.viewDestroyed) {\r\n            return;\r\n        }\r\n\r\n        // Don't use domUtils.getScrollHeight because it gives an outdated value after receiving a new message.\r\n        const scrollHeight = this.scrollElement ? this.scrollElement.scrollHeight : 0;\r\n\r\n        // Check if we are at the bottom to scroll it after render.\r\n        // Use a 5px error margin because in iOS there is 1px difference for some reason.\r\n        this.scrollBottom = Math.abs(scrollHeight - (this.scrollElement?.scrollTop || 0) -\r\n            (this.scrollElement?.clientHeight || 0)) < 5;\r\n\r\n        if (this.messagesBeingSent > 0) {\r\n            // Ignore polling due to a race condition.\r\n            return;\r\n        }\r\n\r\n        // Add new messages to the list and mark the messages that should still be displayed.\r\n        const newMessages = messages.reduce((val, message) => val + (this.addMessage(message) ? 1 : 0), 0);\r\n\r\n        // Set the new badges message if we're loading new messages.\r\n        if (messagesAreNew) {\r\n            this.setNewMessagesBadge(this.newMessages + newMessages);\r\n        }\r\n\r\n        // Remove messages that shouldn't be in the list anymore.\r\n        for (const hash in this.keepMessageMap) {\r\n            this.removeMessage(hash);\r\n        }\r\n\r\n        // Sort the messages.\r\n        AddonMessages.sortMessages(this.messages);\r\n\r\n        // Calculate which messages need to display the date or user data.\r\n        this.messages.forEach((message, index) => {\r\n            message.showDate = this.showDate(message, this.messages[index - 1]);\r\n            message.showUserData = this.showUserData(message, this.messages[index - 1]);\r\n            message.showTail = this.showTail(message, this.messages[index + 1]);\r\n        });\r\n\r\n        // If we received a new message while using group messaging, force mark messages as read.\r\n        const last = this.messages[this.messages.length - 1];\r\n        const forceMark = this.groupMessagingEnabled && last && last.useridfrom != this.currentUserId && this.lastMessage.text != ''\r\n                    && (last.text !== this.lastMessage.text || last.timecreated !== this.lastMessage.timecreated);\r\n\r\n        // Notify that there can be a new message.\r\n        this.notifyNewMessage();\r\n\r\n        // Mark retrieved messages as read if they are not.\r\n        this.markMessagesAsRead(forceMark);\r\n    }\r\n\r\n    /**\r\n     * Set the new message badge number and set scroll listener if needed.\r\n     *\r\n     * @param addMessages NUmber of messages still to be read.\r\n     */\r\n    protected setNewMessagesBadge(addMessages: number): void {\r\n        if (this.newMessages == 0 && addMessages > 0) {\r\n            // Setup scrolling.\r\n            this.content!.scrollEvents = true;\r\n\r\n            this.scrollFunction();\r\n        } else if (this.newMessages > 0 && addMessages == 0) {\r\n            // Remove scrolling.\r\n            this.content!.scrollEvents = false;\r\n        }\r\n\r\n        this.newMessages = addMessages;\r\n    }\r\n\r\n    /**\r\n     * The scroll was moved. Update new messages count.\r\n     */\r\n    scrollFunction(): void {\r\n        if (this.newMessages > 0) {\r\n            const scrollBottom = (this.scrollElement?.scrollTop || 0) + (this.scrollElement?.clientHeight || 0);\r\n            const scrollHeight = (this.scrollElement?.scrollHeight || 0);\r\n            if (scrollBottom > scrollHeight - 40) {\r\n                // At the bottom, reset.\r\n                this.setNewMessagesBadge(0);\r\n\r\n                return;\r\n            }\r\n\r\n            const scrollElRect = this.scrollElement?.getBoundingClientRect();\r\n            const scrollBottomPos = (scrollElRect && scrollElRect.bottom) || 0;\r\n\r\n            if (scrollBottomPos == 0) {\r\n                return;\r\n            }\r\n\r\n            const messages = Array.from(this.hostElement.querySelectorAll('.addon-message-not-mine'))\r\n                .slice(-this.newMessages)\r\n                .reverse();\r\n\r\n            const newMessagesUnread = messages.findIndex((message) => {\r\n                const elementRect = message.getBoundingClientRect();\r\n                if (!elementRect) {\r\n                    return false;\r\n                }\r\n\r\n                return elementRect.bottom <= scrollBottomPos;\r\n            });\r\n\r\n            if (newMessagesUnread > 0 && newMessagesUnread < this.newMessages) {\r\n                this.setNewMessagesBadge(newMessagesUnread);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the conversation.\r\n     *\r\n     * @param conversationId Conversation ID.\r\n     * @param userId User ID.\r\n     * @return Promise resolved with a boolean: whether the conversation exists or not.\r\n     */\r\n    protected async getConversation(conversationId?: number, userId?: number): Promise<boolean> {\r\n        let fallbackConversation: AddonMessagesConversationFormatted | undefined;\r\n\r\n        // Try to get the conversationId if we don't have it.\r\n        if (!conversationId && userId) {\r\n            try {\r\n                if (userId == this.currentUserId && AddonMessages.isSelfConversationEnabled()) {\r\n                    fallbackConversation = await AddonMessages.getSelfConversation();\r\n                } else {\r\n                    fallbackConversation = await AddonMessages.getConversationBetweenUsers(userId, undefined, true);\r\n                }\r\n                conversationId = fallbackConversation.id;\r\n            } catch (error) {\r\n                // Probably conversation does not exist or user is offline. Try to load offline messages.\r\n                this.isSelf = userId == this.currentUserId;\r\n\r\n                const messages = await AddonMessagesOffline.getMessages(userId);\r\n\r\n                if (messages && messages.length) {\r\n                // We have offline messages, this probably means that the conversation didn't exist. Don't display error.\r\n                    messages.forEach((message) => {\r\n                        message.pending = true;\r\n                        message.text = message.smallmessage;\r\n                    });\r\n\r\n                    this.loadMessages(messages);\r\n                } else if (error.errorcode != 'errorconversationdoesnotexist') {\r\n                    // Display the error.\r\n                    throw error;\r\n                }\r\n\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Retrieve the conversation. Invalidate data first to get the right unreadcount.\r\n        await AddonMessages.invalidateConversation(conversationId!);\r\n\r\n        try {\r\n            this.conversation = await AddonMessages.getConversation(conversationId!, undefined, true);\r\n        } catch (error) {\r\n            // Get conversation failed, use the fallback one if we have it.\r\n            if (fallbackConversation) {\r\n                this.conversation = fallbackConversation;\r\n            } else {\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        if (this.conversation) {\r\n            this.conversationId = this.conversation.id;\r\n            this.title = this.conversation.name;\r\n            this.conversationImage = this.conversation.imageurl;\r\n            this.isGroup = this.conversation.type == AddonMessagesProvider.MESSAGE_CONVERSATION_TYPE_GROUP;\r\n            this.favouriteIcon = 'fas-star';\r\n            this.favouriteIconSlash = this.conversation.isfavourite;\r\n            this.muteIcon = this.conversation.ismuted ? 'fas-bell' : 'fas-bell-slash';\r\n            if (!this.isGroup) {\r\n                this.userId = this.conversation.userid;\r\n            }\r\n            this.isSelf = this.conversation.type == AddonMessagesProvider.MESSAGE_CONVERSATION_TYPE_SELF;\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Get the messages of the conversation. Used if group messaging is supported.\r\n     *\r\n     * @param pagesToLoad Number of \"pages\" to load.\r\n     * @param offset Offset for message list.\r\n     * @return Promise resolved with the list of messages.\r\n     */\r\n    protected async getConversationMessages(\r\n        pagesToLoad: number,\r\n        offset: number = 0,\r\n    ): Promise<AddonMessagesConversationMessageFormatted[]> {\r\n\r\n        if (!this.conversationId) {\r\n            return [];\r\n        }\r\n\r\n        const excludePending = offset > 0;\r\n\r\n        const result = await AddonMessages.getConversationMessages(this.conversationId, {\r\n            excludePending: excludePending,\r\n            limitFrom: offset,\r\n        });\r\n\r\n        pagesToLoad--;\r\n\r\n        // Treat members. Don't use CoreUtilsProvider.arrayToObject because we don't want to override the existing object.\r\n        if (result.members) {\r\n            result.members.forEach((member) => {\r\n                this.members[member.id] = member;\r\n            });\r\n        }\r\n\r\n        const messages: AddonMessagesConversationMessageFormatted[] = result.messages;\r\n\r\n        if (pagesToLoad > 0 && result.canLoadMore) {\r\n            offset += AddonMessagesProvider.LIMIT_MESSAGES;\r\n\r\n            // Get more messages.\r\n            const nextMessages = await this.getConversationMessages(pagesToLoad, offset);\r\n\r\n            return messages.concat(nextMessages);\r\n        }\r\n\r\n        // No more messages to load, return them.\r\n        this.canLoadMore = !!result.canLoadMore;\r\n\r\n        return messages;\r\n\r\n    }\r\n\r\n    /**\r\n     * Get a discussion. Can load several \"pages\".\r\n     *\r\n     * @param pagesToLoad Number of pages to load.\r\n     * @param lfReceivedUnread Number of unread received messages already fetched, so fetch will be done from this.\r\n     * @param lfReceivedRead Number of read received messages already fetched, so fetch will be done from this.\r\n     * @param lfSentUnread Number of unread sent messages already fetched, so fetch will be done from this.\r\n     * @param lfSentRead Number of read sent messages already fetched, so fetch will be done from this.\r\n     * @return Resolved when done.\r\n     */\r\n    protected async getDiscussionMessages(\r\n        pagesToLoad: number,\r\n        lfReceivedUnread: number = 0,\r\n        lfReceivedRead: number = 0,\r\n        lfSentUnread: number = 0,\r\n        lfSentRead: number = 0,\r\n    ): Promise<(AddonMessagesGetMessagesMessage | AddonMessagesOfflineMessagesDBRecordFormatted)[]> {\r\n\r\n        // Only get offline messages if we're loading the first \"page\".\r\n        const excludePending = lfReceivedUnread > 0 || lfReceivedRead > 0 || lfSentUnread > 0 || lfSentRead > 0;\r\n\r\n        // Get next messages.\r\n        const result = await AddonMessages.getDiscussion(\r\n            this.userId!,\r\n            excludePending,\r\n            lfReceivedUnread,\r\n            lfReceivedRead,\r\n            lfSentUnread,\r\n            lfSentRead,\r\n        );\r\n\r\n        pagesToLoad--;\r\n        if (pagesToLoad > 0 && result.canLoadMore) {\r\n            // More pages to load. Calculate new limit froms.\r\n            result.messages.forEach((message) => {\r\n                if (!message.pending && 'read' in message) {\r\n                    if (message.useridfrom == this.userId) {\r\n                        if (message.read) {\r\n                            lfReceivedRead++;\r\n                        } else {\r\n                            lfReceivedUnread++;\r\n                        }\r\n                    } else {\r\n                        if (message.read) {\r\n                            lfSentRead++;\r\n                        } else {\r\n                            lfSentUnread++;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Get next messages.\r\n            const nextMessages =\r\n                await this.getDiscussionMessages(pagesToLoad, lfReceivedUnread, lfReceivedRead, lfSentUnread, lfSentRead);\r\n\r\n            return result.messages.concat(nextMessages);\r\n        } else {\r\n            // No more messages to load, return them.\r\n            this.canLoadMore = result.canLoadMore;\r\n\r\n            return result.messages;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mark messages as read.\r\n     */\r\n    protected async markMessagesAsRead(forceMark: boolean): Promise<void> {\r\n        let readChanged = false;\r\n\r\n        if (AddonMessages.isMarkAllMessagesReadEnabled()) {\r\n            let messageUnreadFound = false;\r\n\r\n            // Mark all messages at a time if there is any unread message.\r\n            if (forceMark) {\r\n                messageUnreadFound = true;\r\n            } else if (this.groupMessagingEnabled) {\r\n                messageUnreadFound = !!((this.conversation?.unreadcount && this.conversation?.unreadcount > 0) &&\r\n                    (this.conversationId && this.conversationId > 0));\r\n            } else {\r\n                // If an unread message is found, mark all messages as read.\r\n                messageUnreadFound = this.messages.some((message) =>\r\n                    message.useridfrom != this.currentUserId && ('read' in message && !message.read));\r\n            }\r\n\r\n            if (messageUnreadFound) {\r\n                this.setUnreadLabelPosition();\r\n\r\n                if (this.groupMessagingEnabled) {\r\n                    await AddonMessages.markAllConversationMessagesRead(this.conversationId!);\r\n                } else {\r\n                    await AddonMessages.markAllMessagesRead(this.userId);\r\n\r\n                    // Mark all messages as read.\r\n                    this.messages.forEach((message) => {\r\n                        if ('read' in message) {\r\n                            message.read = true;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                readChanged = true;\r\n            }\r\n        } else {\r\n            this.setUnreadLabelPosition();\r\n            const promises: Promise<void>[] = [];\r\n\r\n            // Mark each message as read one by one.\r\n            this.messages.forEach((message) => {\r\n                // If the message is unread, call AddonMessages.markMessageRead.\r\n                if (message.useridfrom != this.currentUserId && 'read' in message && !message.read) {\r\n                    promises.push(AddonMessages.markMessageRead(message.id).then(() => {\r\n                        readChanged = true;\r\n                        message.read = true;\r\n\r\n                        return;\r\n                    }));\r\n                }\r\n            });\r\n\r\n            await Promise.all(promises);\r\n        }\r\n\r\n        if (readChanged) {\r\n            CoreEvents.trigger(AddonMessagesProvider.READ_CHANGED_EVENT, {\r\n                conversationId: this.conversationId,\r\n                userId: this.userId,\r\n            }, this.siteId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Notify the last message found so discussions list controller can tell if last message should be updated.\r\n     */\r\n    protected notifyNewMessage(): void {\r\n        const last = this.messages[this.messages.length - 1];\r\n\r\n        let trigger = false;\r\n\r\n        if (!last) {\r\n            this.lastMessage = { text: '', timecreated: 0 };\r\n            trigger = true;\r\n        } else if (last.text !== this.lastMessage.text || last.timecreated !== this.lastMessage.timecreated) {\r\n            this.lastMessage = { text: last.text || '', timecreated: last.timecreated };\r\n            trigger = true;\r\n        }\r\n\r\n        if (trigger) {\r\n            // Update discussions last message.\r\n            CoreEvents.trigger(AddonMessagesProvider.NEW_MESSAGE_EVENT, {\r\n                conversationId: this.conversationId,\r\n                userId: this.userId,\r\n                message: this.lastMessage.text,\r\n                timecreated: this.lastMessage.timecreated,\r\n                isfavourite: !!this.conversation?.isfavourite,\r\n                type: this.conversation?.type,\r\n            }, this.siteId);\r\n\r\n            // Update navBar links and buttons.\r\n            const newCanDelete = (last && 'id' in last && last.id && this.messages.length == 1) || this.messages.length > 1;\r\n            if (this.canDelete != newCanDelete) {\r\n                this.checkCanDelete();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the place where the unread label position has to be.\r\n     */\r\n    protected setUnreadLabelPosition(): void {\r\n        if (this.unreadMessageFrom != 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.groupMessagingEnabled) {\r\n            // Use the unreadcount from the conversation to calculate where should the label be placed.\r\n            if (this.conversation && (this.conversation?.unreadcount && this.conversation?.unreadcount > 0) && this.messages) {\r\n                // Iterate over messages to find the right message using the unreadcount. Skip offline messages and own messages.\r\n                let found = 0;\r\n\r\n                for (let i = this.messages.length - 1; i >= 0; i--) {\r\n                    const message = this.messages[i];\r\n                    if (!message.pending && message.useridfrom != this.currentUserId && 'id' in message) {\r\n                        found++;\r\n                        if (found == this.conversation.unreadcount) {\r\n                            this.unreadMessageFrom = Number(message.id);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            let previousMessageRead = false;\r\n\r\n            for (const x in this.messages) {\r\n                const message = this.messages[x];\r\n                if (message.useridfrom != this.currentUserId && 'read' in message) {\r\n                    const unreadFrom = !message.read && previousMessageRead;\r\n\r\n                    if (unreadFrom) {\r\n                        // Save where the label is placed.\r\n                        this.unreadMessageFrom = Number(message.id);\r\n                        break;\r\n                    }\r\n\r\n                    previousMessageRead = !!message.read;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Do not update the message unread from label on next refresh.\r\n        if (this.unreadMessageFrom == 0) {\r\n            // Using negative to indicate the label is not placed but should not be placed.\r\n            this.unreadMessageFrom = -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if there's any message in the list that can be deleted.\r\n     */\r\n    protected checkCanDelete(): void {\r\n        // All messages being sent should be at the end of the list.\r\n        const first = this.messages[0];\r\n        this.canDelete = first && !first.sending;\r\n    }\r\n\r\n    /**\r\n     * Hide unread label when sending messages.\r\n     */\r\n    protected hideUnreadLabel(): void {\r\n        if (this.unreadMessageFrom > 0) {\r\n            this.unreadMessageFrom = -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait until fetching is false.\r\n     *\r\n     * @return Resolved when done.\r\n     */\r\n    protected waitForFetch(): Promise<void> {\r\n        if (!this.fetching) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const deferred = CoreUtils.promiseDefer<void>();\r\n\r\n        setTimeout(() => this.waitForFetch().finally(() => {\r\n            deferred.resolve();\r\n        }), 400);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Set a polling to get new messages every certain time.\r\n     */\r\n    protected setPolling(): void {\r\n        if (this.groupMessagingEnabled && !this.conversationId) {\r\n            // Don't have enough data to poll messages.\r\n            return;\r\n        }\r\n\r\n        if (!this.polling) {\r\n            // Start polling.\r\n            this.polling = window.setInterval(() => {\r\n                this.fetchMessages().catch(() => {\r\n                    // Ignore errors.\r\n                });\r\n            }, AddonMessagesProvider.POLL_INTERVAL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unset polling.\r\n     */\r\n    protected unsetPolling(): void {\r\n        if (this.polling) {\r\n            this.logger.debug(`Cancelling polling for conversation with user '${this.userId}'`);\r\n            clearInterval(this.polling);\r\n            this.polling = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copy message to clipboard.\r\n     *\r\n     * @param message Message to be copied.\r\n     */\r\n    copyMessage(message: AddonMessagesConversationMessageFormatted): void {\r\n        const text = 'smallmessage' in message ? message.smallmessage || message.text || '' : message.text || '';\r\n        CoreUtils.copyToClipboard(CoreTextUtils.decodeHTMLEntities(text));\r\n    }\r\n\r\n    /**\r\n     * Function to delete a message.\r\n     *\r\n     * @param message Message object to delete.\r\n     * @param index Index where the message is to delete it from the view.\r\n     */\r\n    async deleteMessage(\r\n        message: AddonMessagesConversationMessageFormatted,\r\n        index: number,\r\n    ): Promise<void> {\r\n\r\n        const canDeleteAll = this.conversation && this.conversation.candeletemessagesforallusers;\r\n        const langKey = message.pending || canDeleteAll || this.isSelf ? 'core.areyousure' :\r\n            'addon.messages.deletemessageconfirmation';\r\n        const options: AlertOptions = {};\r\n\r\n        if (canDeleteAll && !message.pending) {\r\n            // Show delete for all checkbox.\r\n            options.inputs = [{\r\n                type: 'checkbox',\r\n                name: 'deleteforall',\r\n                checked: false,\r\n                value: true,\r\n                label: Translate.instant('addon.messages.deleteforeveryone'),\r\n            }];\r\n        }\r\n\r\n        try {\r\n            const data: boolean[] = await CoreDomUtils.showConfirm(\r\n                Translate.instant(langKey),\r\n                undefined,\r\n                undefined,\r\n                undefined,\r\n                options,\r\n            );\r\n\r\n            const modal = await CoreDomUtils.showModalLoading('core.deleting', true);\r\n\r\n            try {\r\n                await AddonMessages.deleteMessage(message, data && data[0]);\r\n                // Remove message from the list without having to wait for re-fetch.\r\n                this.messages.splice(index, 1);\r\n                this.removeMessage(message.hash!);\r\n                this.notifyNewMessage();\r\n\r\n                this.fetchMessages(); // Re-fetch messages to update cached data.\r\n            } finally {\r\n                modal.dismiss();\r\n            }\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errordeletemessage', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to load previous messages.\r\n     *\r\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\r\n     * @return Resolved when done.\r\n     */\r\n    async loadPrevious(infiniteComplete?: () => void): Promise<void> {\r\n        if (!this.initialized) {\r\n            // Don't load previous if the view isn't fully initialized.\r\n            // Don't put the initialized condition in the \"enabled\" input because then the load more is hidden and\r\n            // the scroll height changes when it appears.\r\n            infiniteComplete && infiniteComplete();\r\n\r\n            return;\r\n        }\r\n\r\n        let infiniteHeight = this.infinite?.hostElement.getBoundingClientRect().height || 0;\r\n        const scrollHeight = (this.scrollElement?.scrollHeight || 0);\r\n\r\n        // If there is an ongoing fetch, wait for it to finish.\r\n        try {\r\n            await this.waitForFetch();\r\n        } finally {\r\n            this.pagesLoaded++;\r\n\r\n            try {\r\n                await this.fetchMessages(false);\r\n\r\n                // Try to keep the scroll position.\r\n                const scrollBottom = scrollHeight - (this.scrollElement?.scrollTop || 0);\r\n\r\n                const height = this.infinite?.hostElement.getBoundingClientRect().height || 0;\r\n                if (this.canLoadMore && infiniteHeight && this.infinite) {\r\n                    // The height of the infinite is different while spinner is shown. Add that difference.\r\n                    infiniteHeight = infiniteHeight - height;\r\n                } else if (!this.canLoadMore) {\r\n                    // Can't load more, take into account the full height of the infinite loading since it will disappear now.\r\n                    infiniteHeight = infiniteHeight || height;\r\n                }\r\n\r\n                this.keepScroll(scrollHeight, scrollBottom, infiniteHeight);\r\n            } catch (error) {\r\n                this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\r\n                this.pagesLoaded--;\r\n                CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingmessages', true);\r\n            } finally {\r\n                infiniteComplete && infiniteComplete();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Keep scroll position after loading previous messages.\r\n     */\r\n    protected keepScroll(oldScrollHeight: number, oldScrollBottom: number, infiniteHeight: number, retries = 0): void {\r\n        setTimeout(() => {\r\n            const newScrollHeight = (this.scrollElement?.scrollHeight || 0);\r\n\r\n            if (newScrollHeight == oldScrollHeight) {\r\n                // Height hasn't changed yet. Retry if max retries haven't been reached.\r\n                if (retries <= 10) {\r\n                    this.keepScroll(oldScrollHeight, oldScrollBottom, infiniteHeight, retries + 1);\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            // Scroll has changed, but maybe it hasn't reached the full height yet.\r\n            setTimeout(() => {\r\n                const newScrollHeight = (this.scrollElement?.scrollHeight || 0);\r\n                const scrollTo = newScrollHeight - oldScrollBottom + infiniteHeight;\r\n\r\n                this.content!.scrollToPoint(0, scrollTo, 0);\r\n            }, 30);\r\n        }, 30);\r\n    }\r\n\r\n    /**\r\n     * Scroll bottom when render has finished.\r\n     *\r\n     * @param force Whether to force scroll to bottom.\r\n     */\r\n    async scrollToBottom(force = false): Promise<void> {\r\n        // Check if scroll is at bottom. If so, scroll bottom after rendering since there might be something new.\r\n        if (this.scrollBottom || force) {\r\n            this.scrollBottom = false;\r\n\r\n            // Reset the badge.\r\n            this.setNewMessagesBadge(0);\r\n\r\n            // Leave time for the view to be rendered.\r\n            await CoreUtils.nextTicks(5);\r\n\r\n            if (!this.viewDestroyed) {\r\n                this.content!.scrollToBottom(0);\r\n            }\r\n\r\n            if (force) {\r\n                this.initialized = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Scroll to the first new unread message.\r\n     */\r\n    scrollToFirstUnreadMessage(): void {\r\n        if (this.newMessages > 0) {\r\n            const messages = Array.from(this.hostElement.querySelectorAll('.addon-message-not-mine'));\r\n\r\n            CoreDomUtils.scrollToElement(this.content!, <HTMLElement> messages[messages.length - this.newMessages]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends a message to the server.\r\n     *\r\n     * @param text Message text.\r\n     */\r\n    async sendMessage(text: string): Promise<void> {\r\n        this.hideUnreadLabel();\r\n\r\n        this.showDelete = false;\r\n        this.scrollBottom = true;\r\n        this.setNewMessagesBadge(0);\r\n\r\n        const message: AddonMessagesConversationMessageFormatted = {\r\n            id: -1,\r\n            pending: true,\r\n            sending: true,\r\n            useridfrom: this.currentUserId,\r\n            smallmessage: text,\r\n            text: text,\r\n            timecreated: new Date().getTime(),\r\n        };\r\n        message.showDate = this.showDate(message, this.messages[this.messages.length - 1]);\r\n        this.addMessage(message, false);\r\n\r\n        this.messagesBeingSent++;\r\n\r\n        // If there is an ongoing fetch, wait for it to finish.\r\n        // Otherwise, if a message is sent while fetching it could disappear until the next fetch.\r\n        try {\r\n            await this.waitForFetch();\r\n        } finally {\r\n\r\n            try {\r\n                let data: AddonMessagesSendMessageResults;\r\n                if (this.conversationId) {\r\n                    data = await AddonMessages.sendMessageToConversation(this.conversation!, text);\r\n                } else {\r\n                    data = await AddonMessages.sendMessage(this.userId!, text);\r\n                }\r\n\r\n                this.messagesBeingSent--;\r\n                let failure = false;\r\n                if (data.sent) {\r\n                    try {\r\n\r\n                        if (!this.conversationId && data.message && 'conversationid' in data.message) {\r\n                            // Message sent to a new conversation, try to load the conversation.\r\n                            await this.getConversation(data.message.conversationid, this.userId);\r\n                            // Now fetch messages.\r\n                            try {\r\n                                await this.fetchMessages();\r\n                            } finally {\r\n                                // Start polling messages now that the conversation exists.\r\n                                this.setPolling();\r\n                            }\r\n                        } else {\r\n                            // Message was sent, fetch messages right now.\r\n                            await this.fetchMessages();\r\n                        }\r\n                    } catch {\r\n                        failure = true;\r\n                    }\r\n                }\r\n\r\n                if (failure || !data.sent) {\r\n                    // Fetch failed or is offline message, mark the message as sent.\r\n                    // If fetch is successful there's no need to mark it because the fetch will already show the message received.\r\n                    message.sending = false;\r\n                    if (data.sent) {\r\n                        // Message sent to server, not pending anymore.\r\n                        message.pending = false;\r\n                    } else if (data.message) {\r\n                        message.timecreated = data.message.timecreated || 0;\r\n                    }\r\n\r\n                    this.notifyNewMessage();\r\n                }\r\n\r\n            } catch (error) {\r\n                this.messagesBeingSent--;\r\n\r\n                // Only close the keyboard if an error happens.\r\n                // We want the user to be able to send multiple messages without the keyboard being closed.\r\n                CoreApp.closeKeyboard();\r\n\r\n                CoreDomUtils.showErrorModalDefault(error, 'addon.messages.messagenotsent', true);\r\n                this.removeMessage(message.hash!);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check date should be shown on message list for the current message.\r\n     * If date has changed from previous to current message it should be shown.\r\n     *\r\n     * @param message Current message where to show the date.\r\n     * @param prevMessage Previous message where to compare the date with.\r\n     * @return If date has changed and should be shown.\r\n     */\r\n    showDate(\r\n        message: AddonMessagesConversationMessageFormatted,\r\n        prevMessage?: AddonMessagesConversationMessageFormatted,\r\n    ): boolean {\r\n\r\n        if (!prevMessage) {\r\n            // First message, show it.\r\n            return true;\r\n        }\r\n\r\n        // Check if day has changed.\r\n        return !moment(message.timecreated).isSame(prevMessage.timecreated, 'day');\r\n    }\r\n\r\n    /**\r\n     * Check if the user info should be displayed for the current message.\r\n     * User data is only displayed for group conversations if the previous message was from another user.\r\n     *\r\n     * @param message Current message where to show the user info.\r\n     * @param prevMessage Previous message.\r\n     * @return Whether user data should be shown.\r\n     */\r\n    showUserData(\r\n        message: AddonMessagesConversationMessageFormatted,\r\n        prevMessage?: AddonMessagesConversationMessageFormatted,\r\n    ): boolean {\r\n\r\n        return this.isGroup && message.useridfrom != this.currentUserId && this.members[(message.useridfrom || 0)] &&\r\n            (!prevMessage || prevMessage.useridfrom != message.useridfrom || !!message.showDate);\r\n    }\r\n\r\n    /**\r\n     * Check if a css tail should be shown.\r\n     *\r\n     * @param message Current message where to show the user info.\r\n     * @param nextMessage Next message.\r\n     * @return Whether user data should be shown.\r\n     */\r\n    showTail(\r\n        message: AddonMessagesConversationMessageFormatted,\r\n        nextMessage?: AddonMessagesConversationMessageFormatted,\r\n    ): boolean {\r\n        return !nextMessage || nextMessage.useridfrom != message.useridfrom || !!nextMessage.showDate;\r\n    }\r\n\r\n    /**\r\n     * Toggles delete state.\r\n     */\r\n    toggleDelete(): void {\r\n        this.showDelete = !this.showDelete;\r\n    }\r\n\r\n    /**\r\n     * View info. If it's an individual conversation, go to the user profile.\r\n     * If it's a group conversation, view info about the group.\r\n     */\r\n    async viewInfo(): Promise<void> {\r\n        if (this.isGroup) {\r\n            // Display the group information.\r\n            const userId = await CoreDomUtils.openSideModal<number>({\r\n                component: AddonMessagesConversationInfoComponent,\r\n                componentProps: {\r\n                    conversationId: this.conversationId,\r\n                },\r\n            });\r\n\r\n            if (typeof userId != 'undefined') {\r\n                const splitViewLoaded = CoreNavigator.isCurrentPathInTablet('**/messages/**/discussion');\r\n\r\n                // Open user conversation.\r\n                if (splitViewLoaded) {\r\n                    // Notify the left pane to load it, this way the right conversation will be highlighted.\r\n                    CoreEvents.trigger(\r\n                        AddonMessagesProvider.OPEN_CONVERSATION_EVENT,\r\n                        { userId },\r\n                        this.siteId,\r\n                    );\r\n                } else {\r\n                    // Open the discussion in a new view.\r\n                    CoreNavigator.navigateToSitePath('/messages/discussion', { params: { userId } });\r\n                }\r\n            }\r\n        } else {\r\n            // Open the user profile.\r\n            CoreNavigator.navigateToSitePath('/user/profile', { params: { userId: this.userId } });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change the favourite state of the current conversation.\r\n     *\r\n     * @param done Function to call when done.\r\n     */\r\n    async changeFavourite(done?: () => void): Promise<void> {\r\n        if (!this.conversation) {\r\n            return;\r\n        }\r\n\r\n        this.favouriteIcon = CoreConstants.ICON_LOADING;\r\n\r\n        try {\r\n            await AddonMessages.setFavouriteConversation(this.conversation.id, !this.conversation.isfavourite);\r\n\r\n            this.conversation.isfavourite = !this.conversation.isfavourite;\r\n\r\n            // Get the conversation data so it's cached. Don't block the user for this.\r\n            AddonMessages.getConversation(this.conversation.id, undefined, true);\r\n\r\n            CoreEvents.trigger(AddonMessagesProvider.UPDATE_CONVERSATION_LIST_EVENT, {\r\n                conversationId: this.conversation.id,\r\n                action: 'favourite',\r\n                value: this.conversation.isfavourite,\r\n            }, this.siteId);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error changing favourite state.');\r\n        } finally {\r\n            this.favouriteIcon = 'fas-star';\r\n            this.favouriteIconSlash = this.conversation.isfavourite;\r\n            done && done();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change the mute state of the current conversation.\r\n     *\r\n     * @param done Function to call when done.\r\n     */\r\n    async changeMute(done?: () => void): Promise<void> {\r\n        if (!this.conversation) {\r\n            return;\r\n        }\r\n\r\n        this.muteIcon = CoreConstants.ICON_LOADING;\r\n\r\n        try {\r\n            await AddonMessages.muteConversation(this.conversation.id, !this.conversation.ismuted);\r\n            this.conversation.ismuted = !this.conversation.ismuted;\r\n\r\n            // Get the conversation data so it's cached. Don't block the user for this.\r\n            AddonMessages.getConversation(this.conversation.id, undefined, true);\r\n\r\n            CoreEvents.trigger(AddonMessagesProvider.UPDATE_CONVERSATION_LIST_EVENT, {\r\n                conversationId: this.conversation.id,\r\n                action: 'mute',\r\n                value: this.conversation.ismuted,\r\n            }, this.siteId);\r\n\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error changing muted state.');\r\n        } finally {\r\n            this.muteIcon = this.conversation.ismuted ? 'fas-bell' : 'fas-bell-slash';\r\n            done && done();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculate whether there are pending contact requests.\r\n     */\r\n    protected setContactRequestInfo(): void {\r\n        this.requestContactSent = false;\r\n        this.requestContactReceived = false;\r\n        if (this.otherMember && !this.otherMember.iscontact) {\r\n            this.requestContactSent = !!this.otherMember.contactrequests?.some((request) =>\r\n                request.userid == this.currentUserId && request.requesteduserid == this.otherMember!.id);\r\n            this.requestContactReceived = !!this.otherMember.contactrequests?.some((request) =>\r\n                request.userid == this.otherMember!.id && request.requesteduserid == this.currentUserId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculate what to display in the footer.\r\n     */\r\n    protected setFooterType(): void {\r\n        if (!this.otherMember) {\r\n            // Group conversation or group messaging not available.\r\n            this.footerType = 'message';\r\n        } else if (this.otherMember.isblocked) {\r\n            this.footerType = 'blocked';\r\n        } else if (this.requestContactReceived) {\r\n            this.footerType = 'requestReceived';\r\n        } else if (this.otherMember.canmessage) {\r\n            this.footerType = 'message';\r\n        } else if (this.requestContactSent) {\r\n            this.footerType = 'requestSent';\r\n        } else if (this.otherMember.requirescontact) {\r\n            this.footerType = 'requiresContact';\r\n        } else {\r\n            this.footerType = 'unable';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Displays a confirmation modal to block the user of the individual conversation.\r\n     *\r\n     * @return Promise resolved when user is blocked or dialog is cancelled.\r\n     */\r\n    async blockUser(): Promise<void> {\r\n        if (!this.otherMember) {\r\n            // Should never happen.\r\n            throw new CoreError('No member selected to be blocked.');\r\n        }\r\n\r\n        if (this.otherMember.canmessageevenifblocked) {\r\n            CoreDomUtils.showErrorModal(Translate.instant('addon.messages.cantblockuser', { $a: this.otherMember.fullname }));\r\n\r\n            return;\r\n        }\r\n\r\n        const template = Translate.instant('addon.messages.blockuserconfirm', { $a: this.otherMember.fullname });\r\n        const okText = Translate.instant('addon.messages.blockuser');\r\n\r\n        try {\r\n            await CoreDomUtils.showConfirm(template, undefined, okText);\r\n            this.blockIcon = CoreConstants.ICON_LOADING;\r\n\r\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n            this.showLoadingModal = true;\r\n\r\n            try {\r\n                try {\r\n                    await AddonMessages.blockContact(this.otherMember.id);\r\n                } finally {\r\n                    modal.dismiss();\r\n                    this.showLoadingModal = false;\r\n                }\r\n            } catch (error) {\r\n                CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\r\n            } finally {\r\n                this.blockIcon = this.otherMember.isblocked ? 'fas-user-check' : 'fas-user-lock';\r\n            }\r\n        } catch {\r\n            // User cancelled.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete the conversation.\r\n     *\r\n     * @param done Function to call when done.\r\n     */\r\n    async deleteConversation(done?: () => void): Promise<void> {\r\n        if (!this.conversation) {\r\n            return;\r\n        }\r\n\r\n        const confirmMessage = 'addon.messages.' + (this.isSelf ? 'deleteallselfconfirm' : 'deleteallconfirm');\r\n\r\n        try {\r\n            await CoreDomUtils.showDeleteConfirm(confirmMessage);\r\n            this.deleteIcon = CoreConstants.ICON_LOADING;\r\n\r\n            try {\r\n                try {\r\n                    await AddonMessages.deleteConversation(this.conversation.id);\r\n\r\n                    CoreEvents.trigger(\r\n                        AddonMessagesProvider.UPDATE_CONVERSATION_LIST_EVENT,\r\n                        {\r\n                            conversationId: this.conversation.id,\r\n                            action: 'delete',\r\n                        },\r\n                        this.siteId,\r\n                    );\r\n\r\n                    this.messages = [];\r\n                } finally {\r\n                    done && done();\r\n                }\r\n            } catch (error) {\r\n                CoreDomUtils.showErrorModalDefault(error, 'Error deleting conversation.');\r\n            } finally {\r\n                this.deleteIcon = 'fas-trash';\r\n            }\r\n        } catch {\r\n            // User cancelled.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Displays a confirmation modal to unblock the user of the individual conversation.\r\n     *\r\n     * @return Promise resolved when user is unblocked or dialog is cancelled.\r\n     */\r\n    async unblockUser(): Promise<void> {\r\n        if (!this.otherMember) {\r\n            // Should never happen.\r\n            throw new CoreError('No member selected to be unblocked.');\r\n        }\r\n\r\n        const template = Translate.instant('addon.messages.unblockuserconfirm', { $a: this.otherMember.fullname });\r\n        const okText = Translate.instant('addon.messages.unblockuser');\r\n\r\n        try {\r\n            await CoreDomUtils.showConfirm(template, undefined, okText);\r\n\r\n            this.blockIcon = CoreConstants.ICON_LOADING;\r\n\r\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n            this.showLoadingModal = true;\r\n\r\n            try {\r\n                try {\r\n                    await AddonMessages.unblockContact(this.otherMember.id);\r\n                } finally {\r\n                    modal.dismiss();\r\n                    this.showLoadingModal = false;\r\n                }\r\n            } catch (error) {\r\n                CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\r\n            } finally {\r\n                this.blockIcon = this.otherMember.isblocked ? 'fas-user-check' : 'fas-user-lock';\r\n            }\r\n        } catch {\r\n            // User cancelled.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Displays a confirmation modal to send a contact request to the other user of the individual conversation.\r\n     *\r\n     * @return Promise resolved when the request is sent or the dialog is cancelled.\r\n     */\r\n    async createContactRequest(): Promise<void> {\r\n        if (!this.otherMember) {\r\n            // Should never happen.\r\n            throw new CoreError('No member selected to be requested.');\r\n        }\r\n\r\n        const template = Translate.instant('addon.messages.addcontactconfirm', { $a: this.otherMember.fullname });\r\n        const okText = Translate.instant('core.add');\r\n\r\n        try {\r\n            await CoreDomUtils.showConfirm(template, undefined, okText);\r\n\r\n            this.addRemoveIcon = CoreConstants.ICON_LOADING;\r\n\r\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n            this.showLoadingModal = true;\r\n\r\n            try {\r\n                try {\r\n                    await AddonMessages.createContactRequest(this.otherMember.id);\r\n                } finally {\r\n                    modal.dismiss();\r\n                    this.showLoadingModal = false;\r\n                }\r\n            } catch (error) {\r\n                CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\r\n            } finally {\r\n                this.addRemoveIcon = 'fas-user-plus';\r\n            }\r\n        } catch {\r\n            // User cancelled.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Confirms the contact request of the other user of the individual conversation.\r\n     *\r\n     * @return Promise resolved when the request is confirmed.\r\n     */\r\n    async confirmContactRequest(): Promise<void> {\r\n        if (!this.otherMember) {\r\n            // Should never happen.\r\n            throw new CoreError('No member selected to be confirmed.');\r\n        }\r\n\r\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n        this.showLoadingModal = true;\r\n\r\n        try {\r\n            try {\r\n                await AddonMessages.confirmContactRequest(this.otherMember.id);\r\n            } finally {\r\n                modal.dismiss();\r\n                this.showLoadingModal = false;\r\n            }\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Declines the contact request of the other user of the individual conversation.\r\n     *\r\n     * @return Promise resolved when the request is confirmed.\r\n     */\r\n    async declineContactRequest(): Promise<void> {\r\n        if (!this.otherMember) {\r\n            // Should never happen.\r\n            throw new CoreError('No member selected to be declined.');\r\n        }\r\n\r\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n        this.showLoadingModal = true;\r\n\r\n        try {\r\n            try {\r\n                await AddonMessages.declineContactRequest(this.otherMember.id);\r\n            } finally {\r\n                modal.dismiss();\r\n                this.showLoadingModal = false;\r\n            }\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Displays a confirmation modal to remove the other user of the conversation from contacts.\r\n     *\r\n     * @return Promise resolved when the request is sent or the dialog is cancelled.\r\n     */\r\n    async removeContact(): Promise<void> {\r\n        if (!this.otherMember) {\r\n            // Should never happen.\r\n            throw new CoreError('No member selected to be removed.');\r\n        }\r\n\r\n        const template = Translate.instant('addon.messages.removecontactconfirm', { $a: this.otherMember.fullname });\r\n        const okText = Translate.instant('core.remove');\r\n\r\n        try {\r\n            await CoreDomUtils.showConfirm(template, undefined, okText);\r\n\r\n            this.addRemoveIcon = CoreConstants.ICON_LOADING;\r\n\r\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n            this.showLoadingModal = true;\r\n\r\n            try {\r\n                try {\r\n                    await AddonMessages.removeContact(this.otherMember.id);\r\n                } finally {\r\n                    modal.dismiss();\r\n                    this.showLoadingModal = false;\r\n                }\r\n            } catch (error) {\r\n                CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\r\n            } finally {\r\n                this.addRemoveIcon = 'fas-user-plus';\r\n            }\r\n        } catch {\r\n            // User cancelled.\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        // Unset again, just in case.\r\n        this.unsetPolling();\r\n        this.syncObserver?.off();\r\n        this.memberInfoObserver?.off();\r\n        this.viewDestroyed = true;\r\n    }\r\n\r\n}\r\n","export default \"/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/*\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/*\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n * Extracted from ionic.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host ion-content {\\n  --background: var(--background-alternative);\\n}\\n:host ion-content::part(scroll) {\\n  padding-bottom: 0 !important;\\n}\\n:host .addon-messages-discussion-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding-bottom: 15px;\\n  background: var(--background-alternative);\\n}\\n:host .addon-messages-date {\\n  font-weight: normal;\\n  font-size: 0.9rem;\\n}\\n:host ion-item.addon-message {\\n  border: 0;\\n  border-radius: 4px;\\n  padding: 0 8px 0 8px;\\n  margin: 10px 8px 0 8px;\\n  --background: var(--addon-messages-message-bg);\\n  background: var(--background);\\n  align-self: flex-start;\\n  width: 90%;\\n  max-width: 90%;\\n  --min-height: var(--a11y-min-target-size);\\n  position: relative;\\n  transition: width 500ms ease-in-out;\\n  overflow: visible;\\n}\\n:host ion-item.addon-message::part(native) {\\n  --inner-border-width: 0;\\n  --inner-padding-end: 0;\\n  padding: 0;\\n  margin: 0;\\n}\\n:host ion-item.addon-message core-format-text > p:only-child {\\n  display: inline;\\n}\\n:host ion-item.addon-message .addon-message-user {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 0.5rem;\\n  margin-top: 0;\\n  color: var(--ion-text-color);\\n}\\n:host ion-item.addon-message .addon-message-user core-user-avatar {\\n  display: block;\\n  --core-avatar-size: var(--addon-messages-avatar-size);\\n  margin: 0;\\n}\\n:host ion-item.addon-message .addon-message-user div {\\n  font-weight: 500;\\n  flex-grow: 1;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message .addon-message-user div {\\n    padding-left: unset;\\n    padding-right: unset;\\n    -webkit-padding-start: 0.5rem;\\n    padding-inline-start: 0.5rem;\\n    -webkit-padding-end: 0.5rem;\\n    padding-inline-end: 0.5rem;\\n  }\\n}\\n:host ion-item.addon-message ion-note {\\n  color: var(--addon-messages-message-note-text);\\n  font-size: var(--addon-messages-message-note-font-size);\\n  margin: 0;\\n  padding: 0 0 8px 0;\\n  align-self: flex-end;\\n}\\n:host ion-item.addon-message[tappable]:active {\\n  --background: var(--addon-messages-message-activated-bg);\\n}\\n:host ion-item.addon-message ion-label {\\n  margin: 0;\\n  padding: 8px 0;\\n}\\n:host ion-item.addon-message .addon-message-text {\\n  display: inline-flex;\\n}\\n:host ion-item.addon-message .addon-message-text * {\\n  color: var(--ion-text-color);\\n}\\n:host ion-item.addon-message .tail {\\n  content: \\\"\\\";\\n  width: 0;\\n  height: 0;\\n  border: 0.5rem solid transparent;\\n  position: absolute;\\n  touch-action: none;\\n  bottom: 0;\\n}\\n:host ion-item.addon-message.addon-message-mine {\\n  --background: var(--addon-messages-message-mine-bg);\\n  align-self: flex-end;\\n}\\n:host ion-item.addon-message.addon-message-mine[tappable]:active {\\n  --background: var(--addon-messages-message-mine-activated-bg);\\n}\\n:host ion-item.addon-message.addon-message-mine .spinner {\\n  float: right;\\n  margin-left: 5px;\\n  margin-right: -3px;\\n  margin-top: 2px;\\n  margin-bottom: -2px;\\n}\\n[dir=rtl] :host ion-item.addon-message.addon-message-mine .spinner {\\n  float: left;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message.addon-message-mine .spinner {\\n    margin-left: unset;\\n    margin-right: unset;\\n    -webkit-margin-start: 5px;\\n    margin-inline-start: 5px;\\n    -webkit-margin-end: -3px;\\n    margin-inline-end: -3px;\\n  }\\n}\\n:host ion-item.addon-message.addon-message-mine .spinner svg {\\n  width: 16px;\\n  height: 16px;\\n}\\n:host ion-item.addon-message.addon-message-mine .tail {\\n  right: -8px;\\n  margin-right: -0.5rem;\\n  border-bottom-color: var(--addon-messages-message-mine-bg);\\n}\\n[dir=rtl] :host ion-item.addon-message.addon-message-mine .tail {\\n  left: unset;\\n  right: unset;\\n  left: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message.addon-message-mine .tail {\\n    margin-right: unset;\\n    -webkit-margin-end: -0.5rem;\\n    margin-inline-end: -0.5rem;\\n  }\\n}\\n:host ion-item.addon-message.addon-message-mine[tappable]:active .tail {\\n  border-bottom-color: var(--addon-messages-message-mine-activated-bg);\\n}\\n:host ion-item.addon-message.addon-message-not-mine .tail {\\n  border-bottom-color: var(--addon-messages-message-bg);\\n  left: -8px;\\n  margin-left: -0.5rem;\\n}\\n[dir=rtl] :host ion-item.addon-message.addon-message-not-mine .tail {\\n  left: unset;\\n  right: unset;\\n  right: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-item.addon-message.addon-message-not-mine .tail {\\n    margin-left: unset;\\n    -webkit-margin-start: -0.5rem;\\n    margin-inline-start: -0.5rem;\\n  }\\n}\\n:host ion-item.addon-message[tappable].addon-message-not-mine.activated .tail {\\n  border-bottom-color: var(--addon-messages-message-activated-bg);\\n}\\n:host ion-item.addon-message .addon-messages-delete-button {\\n  min-height: initial;\\n  line-height: initial;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  height: var(--a11y-min-target-size) !important;\\n  align-self: flex-end;\\n}\\n:host ion-item.addon-message .addon-messages-delete-button ion-icon {\\n  font-size: 1.4em;\\n  line-height: initial;\\n  color: var(--ion-color-danger);\\n}\\n:host ion-item.addon-message.addon-message-no-user {\\n  margin-top: 8px;\\n}\\n:host ion-item.addon-message.addon-message-mine + ion-item.addon-message.addon-message-no-user.addon-message-mine,\\n:host ion-item.addon-message.addon-message-not-mine + ion-item.addon-message.addon-message-no-user.addon-message-not-mine {\\n  padding-top: 0;\\n}\\n:host ion-item.addon-message.addon-message-mine + ion-item.addon-message.addon-message-no-user.addon-message-mine .item-heading,\\n:host ion-item.addon-message.addon-message-not-mine + ion-item.addon-message.addon-message-no-user.addon-message-not-mine .item-heading {\\n  margin-bottom: 0;\\n}\\n:host-context(.ios) ion-footer .toolbar:last-child {\\n  padding-bottom: 4px;\\n  min-height: 0;\\n}\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/*\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/*\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n * Extracted from ionic.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host .addon-messages-unreadfrom {\\n  color: var(--ion-color-primary);\\n  background-color: transparent;\\n  margin-top: 6px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n:host .addon-messages-unreadfrom ion-icon {\\n  color: var(--ion-color-primary);\\n  background-color: transparent;\\n}\\n:host .has-fab .scroll-content {\\n  padding-bottom: 0;\\n}\\n:host ion-fab ion-fab-button::part(native) {\\n  contain: unset;\\n  overflow: visible;\\n}\\n:host ion-fab ion-fab-button .core-discussion-messages-badge {\\n  position: absolute;\\n  border-radius: 50%;\\n  color: var(--addon-messages-discussion-badge-text);\\n  background-color: var(--addon-messages-discussion-badge);\\n  display: block;\\n  line-height: 20px;\\n  height: 20px;\\n  width: 20px;\\n  right: -6px;\\n  top: -6px;\\n}\\n[dir=rtl] :host ion-fab ion-fab-button .core-discussion-messages-badge {\\n  left: unset;\\n  right: unset;\\n  left: -6px;\\n}\\n:host ion-header ion-toolbar h1 {\\n  display: flex;\\n  align-items: center;\\n  padding: 0;\\n}\\n:host ion-header ion-toolbar h1 .core-bar-button-image {\\n  margin-right: 6px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-header ion-toolbar h1 .core-bar-button-image {\\n    margin-right: unset;\\n    -webkit-margin-end: 6px;\\n    margin-inline-end: 6px;\\n  }\\n}\\n:host ion-header ion-toolbar h1 core-format-text {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  flex-shrink: 1;\\n}\\n:host ion-header ion-toolbar h1 ion-icon {\\n  margin-left: 6px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-header ion-toolbar h1 ion-icon {\\n    margin-left: unset;\\n    -webkit-margin-start: 6px;\\n    margin-inline-start: 6px;\\n  }\\n}\\n:host-context(.ios) ion-header ion-toolbar h1 {\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddonModForumComponentsModule } from '@addons/mod/forum/components/components.module';\r\nimport { CanLeaveGuard } from '@guards/can-leave';\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\n\r\nimport { AddonModForumDiscussionPage } from './discussion.page';\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    component: AddonModForumDiscussionPage,\r\n    canDeactivate: [CanLeaveGuard],\r\n}];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        AddonModForumComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonModForumDiscussionPage,\r\n    ],\r\n})\r\nexport class AddonForumDiscussionPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { ContextLevel, CoreConstants } from '@/core/constants';\r\nimport { Component, OnDestroy, ViewChild, OnInit, AfterViewInit, ElementRef, Optional } from '@angular/core';\r\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\r\nimport { CoreFileUploader } from '@features/fileuploader/services/fileuploader';\r\nimport { CoreRatingInfo, CoreRatingProvider } from '@features/rating/services/rating';\r\nimport { CoreRatingOffline } from '@features/rating/services/rating-offline';\r\nimport { CoreRatingSyncProvider } from '@features/rating/services/rating-sync';\r\nimport { CoreUser } from '@features/user/services/user';\r\nimport { CanLeave } from '@guards/can-leave';\r\nimport { IonContent, IonRefresher } from '@ionic/angular';\r\nimport { CoreApp } from '@services/app';\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { CoreScreen } from '@services/screen';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { Network, NgZone, Translate } from '@singletons';\r\nimport { CoreArray } from '@singletons/array';\r\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n    AddonModForum,\r\n    AddonModForumAccessInformation,\r\n    AddonModForumData,\r\n    AddonModForumDiscussion,\r\n    AddonModForumPost,\r\n    AddonModForumProvider,\r\n    AddonModForumReply,\r\n} from '../../services/forum';\r\nimport { AddonModForumHelper } from '../../services/forum-helper';\r\nimport { AddonModForumOffline } from '../../services/forum-offline';\r\nimport { AddonModForumSync, AddonModForumSyncProvider } from '../../services/forum-sync';\r\n\r\ntype SortType = 'flat-newest' | 'flat-oldest' | 'nested';\r\n\r\ntype Post = AddonModForumPost & { children?: Post[] };\r\n\r\n/**\r\n * Page that displays a forum discussion.\r\n */\r\n@Component({\r\n    selector: 'page-addon-mod-forum-discussion',\r\n    templateUrl: 'discussion.html',\r\n    styleUrls: ['discussion.scss'],\r\n})\r\nexport class AddonModForumDiscussionPage implements OnInit, AfterViewInit, OnDestroy, CanLeave {\r\n\r\n    @ViewChild(IonContent) content!: IonContent;\r\n\r\n    courseId!: number;\r\n    discussionId!: number;\r\n    forum: Partial<AddonModForumData> = {};\r\n    accessInfo: AddonModForumAccessInformation = {};\r\n    discussion!: AddonModForumDiscussion;\r\n    startingPost?: Post;\r\n    posts!: Post[];\r\n    discussionLoaded = false;\r\n    postSubjects!: { [id: string]: string };\r\n    isOnline!: boolean;\r\n    postHasOffline!: boolean;\r\n    sort: SortType = 'nested';\r\n    trackPosts!: boolean;\r\n    replyData: Omit<AddonModForumReply, 'id'> = {\r\n        replyingTo: 0,\r\n        isEditing: false,\r\n        subject: '',\r\n        message: null,\r\n        files: [],\r\n        isprivatereply: false,\r\n    };\r\n\r\n    originalData: Omit<AddonModForumReply, 'id'> = {\r\n        subject: null,\r\n        message: null,\r\n        files: [],\r\n        isprivatereply: false,\r\n    };\r\n\r\n    refreshIcon = CoreConstants.ICON_LOADING;\r\n    syncIcon = CoreConstants.ICON_LOADING;\r\n    discussionStr = '';\r\n    component = AddonModForumProvider.COMPONENT;\r\n    cmId!: number;\r\n    canPin = false;\r\n    availabilityMessage: string | null = null;\r\n    leavingPage = false;\r\n\r\n    protected forumId!: number;\r\n    protected postId!: number;\r\n    protected parent!: number;\r\n    protected onlineObserver?: Subscription;\r\n    protected syncObserver?: CoreEventObserver;\r\n    protected syncManualObserver?: CoreEventObserver;\r\n\r\n    ratingInfo?: CoreRatingInfo;\r\n    hasOfflineRatings = false;\r\n    protected ratingOfflineObserver?: CoreEventObserver;\r\n    protected ratingSyncObserver?: CoreEventObserver;\r\n    protected changeDiscObserver?: CoreEventObserver;\r\n\r\n    constructor(\r\n        @Optional() protected splitView: CoreSplitViewComponent,\r\n        protected elementRef: ElementRef,\r\n    ) {}\r\n\r\n    get isMobile(): boolean {\r\n        return CoreScreen.isMobile;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\r\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\r\n        this.forumId = CoreNavigator.getRouteNumberParam('forumId')!;\r\n        this.discussion = CoreNavigator.getRouteParam<AddonModForumDiscussion>('discussion')!;\r\n        this.discussionId = this.discussion\r\n            ? this.discussion.discussion\r\n            : CoreNavigator.getRouteNumberParam('discussionId')!;\r\n        this.trackPosts = CoreNavigator.getRouteBooleanParam('trackPosts')!;\r\n        this.postId = CoreNavigator.getRouteNumberParam('postId')!;\r\n        this.parent = CoreNavigator.getRouteNumberParam('parent')!;\r\n\r\n        this.isOnline = CoreApp.isOnline();\r\n        this.onlineObserver = Network.onChange().subscribe(() => {\r\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\r\n            NgZone.run(() => {\r\n                this.isOnline = CoreApp.isOnline();\r\n            });\r\n        });\r\n\r\n        this.discussionStr = Translate.instant('addon.mod_forum.discussion');\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    async ngAfterViewInit(): Promise<void> {\r\n        if (this.parent) {\r\n            this.sort = 'nested'; // Force nested order.\r\n        } else {\r\n            this.sort = await this.getUserSort();\r\n        }\r\n\r\n        await this.fetchPosts(true, false, true);\r\n\r\n        const scrollTo = this.postId || this.parent;\r\n        if (scrollTo) {\r\n            // Scroll to the post.\r\n            setTimeout(() => {\r\n                CoreDomUtils.scrollToElementBySelector(\r\n                    this.elementRef.nativeElement,\r\n                    this.content,\r\n                    '#addon-mod_forum-post-' + scrollTo,\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * User entered the page that contains the component.\r\n     */\r\n    async ionViewDidEnter(): Promise<void> {\r\n        if (this.syncObserver) {\r\n            // Already setup.\r\n            return;\r\n        }\r\n\r\n        // The discussion object was not passed as parameter.\r\n        if (!this.discussion) {\r\n            await this.loadDiscussion(this.forumId, this.cmId, this.discussionId);\r\n        }\r\n\r\n        // Refresh data if this discussion is synchronized automatically.\r\n        this.syncObserver = CoreEvents.on(AddonModForumSyncProvider.AUTO_SYNCED, data => {\r\n            if (data.forumId == this.forumId && this.discussionId == data.discussionId\r\n                    && data.userId == CoreSites.getCurrentSiteUserId()) {\r\n                // Refresh the data.\r\n                this.discussionLoaded = false;\r\n                this.refreshPosts();\r\n            }\r\n        }, CoreSites.getCurrentSiteId());\r\n\r\n        // Refresh data if this forum discussion is synchronized from discussions list.\r\n        this.syncManualObserver = CoreEvents.on(AddonModForumSyncProvider.MANUAL_SYNCED, data => {\r\n            if (data.source != 'discussion' && data.forumId == this.forumId &&\r\n                    data.userId == CoreSites.getCurrentSiteUserId()) {\r\n                // Refresh the data.\r\n                this.discussionLoaded = false;\r\n                this.refreshPosts();\r\n            }\r\n        }, CoreSites.getCurrentSiteId());\r\n\r\n        // Invalidate discussion list if it was not read.\r\n        if (this.discussion.numunread > 0) {\r\n            AddonModForum.invalidateDiscussionsList(this.forumId);\r\n        }\r\n\r\n        // Listen for offline ratings saved and synced.\r\n        this.ratingOfflineObserver = CoreEvents.on(CoreRatingProvider.RATING_SAVED_EVENT, (data) => {\r\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == ContextLevel.MODULE &&\r\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\r\n                this.hasOfflineRatings = true;\r\n            }\r\n        });\r\n\r\n        this.ratingSyncObserver = CoreEvents.on(CoreRatingSyncProvider.SYNCED_EVENT, async (data) => {\r\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == ContextLevel.MODULE &&\r\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\r\n                this.hasOfflineRatings = false;\r\n            }\r\n        });\r\n\r\n        this.changeDiscObserver = CoreEvents.on(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data => {\r\n            if ((this.forumId && this.forumId === data.forumId) || data.cmId === this.cmId) {\r\n                AddonModForum.invalidateDiscussionsList(this.forumId).finally(() => {\r\n                    if (typeof data.locked != 'undefined') {\r\n                        this.discussion.locked = data.locked;\r\n                    }\r\n                    if (typeof data.pinned != 'undefined') {\r\n                        this.discussion.pinned = data.pinned;\r\n                    }\r\n                    if (typeof data.starred != 'undefined') {\r\n                        this.discussion.starred = data.starred;\r\n                    }\r\n\r\n                    if (typeof data.deleted != 'undefined' && data.deleted) {\r\n                        if (!data.post?.parentid) {\r\n                            if (this.splitView?.outletActivated) {\r\n                                CoreNavigator.navigate('../');\r\n                            } else {\r\n                                CoreNavigator.back();\r\n                            }\r\n                        } else {\r\n                            this.discussionLoaded = false;\r\n                            this.refreshPosts();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check if we can leave the page or not.\r\n     *\r\n     * @return Resolved if we can leave it, rejected if not.\r\n     */\r\n    async canLeave(): Promise<boolean> {\r\n        if (AddonModForumHelper.hasPostDataChanged(this.replyData, this.originalData)) {\r\n            // Show confirmation if some data has been modified.\r\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\r\n        }\r\n\r\n        // Delete the local files from the tmp folder.\r\n        CoreFileUploader.clearTmpFiles(this.replyData.files);\r\n\r\n        this.leavingPage = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Runs when the page is about to leave and no longer be the active page.\r\n     */\r\n    ionViewWillLeave(): void {\r\n        this.syncObserver && this.syncObserver.off();\r\n        this.syncManualObserver && this.syncManualObserver.off();\r\n        this.ratingOfflineObserver && this.ratingOfflineObserver.off();\r\n        this.ratingSyncObserver && this.ratingSyncObserver.off();\r\n        this.changeDiscObserver && this.changeDiscObserver.off();\r\n        delete this.syncObserver;\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.onlineObserver && this.onlineObserver.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Get sort type configured by the current user.\r\n     *\r\n     * @return Promise resolved with the sort type.\r\n     */\r\n    protected async getUserSort(): Promise<SortType> {\r\n        try {\r\n            const value = await CoreSites.getCurrentSite()!.getLocalSiteConfig<SortType>('AddonModForumDiscussionSort');\r\n\r\n            return value;\r\n        } catch (error) {\r\n            try {\r\n                const value = await CoreUser.getUserPreference('forum_displaymode');\r\n\r\n                switch (Number(value)) {\r\n                    case 1:\r\n                        return 'flat-oldest';\r\n                    case -1:\r\n                        return 'flat-newest';\r\n                    case 3:\r\n                        return 'nested';\r\n                    case 2: // Threaded not implemented.\r\n                    default:\r\n                        // Not set, use default sort.\r\n                        // @TODO add fallback to $CFG->forum_displaymode.\r\n                }\r\n            } catch (error) {\r\n                // Ignore errors.\r\n            }\r\n        }\r\n\r\n        return 'flat-oldest';\r\n    }\r\n\r\n    /**\r\n     * Convenience function to get the forum.\r\n     *\r\n     * @return Promise resolved with the forum.\r\n     */\r\n    protected fetchForum(): Promise<AddonModForumData> {\r\n        if (this.courseId && this.cmId) {\r\n            return AddonModForum.getForum(this.courseId, this.cmId);\r\n        }\r\n\r\n        if (this.courseId && this.forumId) {\r\n            return AddonModForum.getForumById(this.courseId, this.forumId);\r\n        }\r\n\r\n        throw new Error('Cannot get the forum');\r\n    }\r\n\r\n    /**\r\n     * Convenience function to get the posts.\r\n     *\r\n     * @param sync Whether to try to synchronize the discussion.\r\n     * @param showErrors Whether to show errors in a modal.\r\n     * @param forceMarkAsRead Whether to mark all posts as read.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchPosts(sync?: boolean, showErrors?: boolean, forceMarkAsRead?: boolean): Promise<void> {\r\n        let onlinePosts: AddonModForumPost[] = [];\r\n        const offlineReplies: AddonModForumPost[] = [];\r\n        let hasUnreadPosts = false;\r\n\r\n        try {\r\n            if (sync) {\r\n                // Try to synchronize the forum.\r\n                await CoreUtils.ignoreErrors(this.syncDiscussion(!!showErrors));\r\n            }\r\n\r\n            const response = await AddonModForum.getDiscussionPosts(this.discussionId, { cmId: this.cmId });\r\n            const replies = await AddonModForumOffline.getDiscussionReplies(this.discussionId);\r\n            this.ratingInfo = response.ratinginfo;\r\n\r\n            onlinePosts = response.posts;\r\n            this.courseId = response.courseid || this.courseId;\r\n            this.forumId = response.forumid || this.forumId;\r\n\r\n            // Check if there are responses stored in offline.\r\n            this.postHasOffline = !!replies.length;\r\n            const convertPromises: Promise<void>[] = [];\r\n\r\n            // Index posts to allow quick access. Also check unread field.\r\n            const onlinePostsMap: Record<string, AddonModForumPost> = {};\r\n            onlinePosts.forEach((post) => {\r\n                onlinePostsMap[post.id] = post;\r\n                hasUnreadPosts = hasUnreadPosts || !!post.unread;\r\n            });\r\n\r\n            replies.forEach((offlineReply) => {\r\n                // If we don't have forumId and courseId, get it from the post.\r\n                if (!this.forumId) {\r\n                    this.forumId = offlineReply.forumid;\r\n                }\r\n                if (!this.courseId) {\r\n                    this.courseId = offlineReply.courseid;\r\n                }\r\n\r\n                convertPromises.push(\r\n                    AddonModForumHelper.instance\r\n                        .convertOfflineReplyToOnline(offlineReply)\r\n                        .then(async reply => {\r\n                            offlineReplies.push(reply);\r\n\r\n                            // Disable reply of the parent. Reply in offline to the same post is not allowed, edit instead.\r\n                            onlinePostsMap[reply.parentid!].capabilities.reply = false;\r\n\r\n                            return;\r\n                        }),\r\n                );\r\n            });\r\n\r\n            await Promise.all(convertPromises);\r\n\r\n            // Convert back to array.\r\n            onlinePosts = CoreUtils.objectToArray(onlinePostsMap);\r\n\r\n            let posts = offlineReplies.concat(onlinePosts);\r\n\r\n            this.startingPost = AddonModForum.extractStartingPost(posts);\r\n\r\n            // If sort type is nested, normal sorting is disabled and nested posts will be displayed.\r\n            if (this.sort == 'nested') {\r\n                // Sort first by creation date to make format tree work.\r\n                AddonModForum.sortDiscussionPosts(posts, 'ASC');\r\n\r\n                const rootId = this.startingPost ? this.startingPost.id : (this.discussion ? this.discussion.id : 0);\r\n                posts = CoreUtils.formatTree(posts, 'parentid', 'id', rootId);\r\n            } else {\r\n                // Set default reply subject.\r\n                const direction = this.sort == 'flat-newest' ? 'DESC' : 'ASC';\r\n                AddonModForum.sortDiscussionPosts(posts, direction);\r\n            }\r\n\r\n            try {\r\n                // Now try to get the forum.\r\n                const forum = await this.fetchForum();\r\n                // \"forum.istracked\" is more reliable than \"trackPosts\".\r\n                if (typeof forum.istracked != 'undefined') {\r\n                    this.trackPosts = forum.istracked;\r\n                }\r\n\r\n                this.forumId = forum.id;\r\n                this.cmId = forum.cmid;\r\n                this.courseId = forum.course;\r\n                this.forum = forum;\r\n                this.availabilityMessage = AddonModForumHelper.getAvailabilityMessage(forum);\r\n\r\n                const promises: Promise<void>[] = [];\r\n\r\n                promises.push(\r\n                    AddonModForum.instance\r\n                        .getAccessInformation(this.forumId, { cmId: this.cmId })\r\n                        .then(async accessInfo => {\r\n                            this.accessInfo = accessInfo;\r\n\r\n                            // Disallow replying if cut-off date is reached and the user has not the capability to override it.\r\n                            // Just in case the posts were fetched from WS when the cut-off date was not reached but it is now.\r\n                            if (AddonModForumHelper.isCutoffDateReached(forum) && !accessInfo.cancanoverridecutoff) {\r\n                                posts.forEach((post) => {\r\n                                    post.capabilities.reply = false;\r\n                                });\r\n                            }\r\n\r\n                            return;\r\n                        }),\r\n                );\r\n\r\n                // The discussion object was not passed as parameter and there is no starting post.\r\n                if (!this.discussion) {\r\n                    promises.push(this.loadDiscussion(this.forumId, this.cmId, this.discussionId));\r\n                }\r\n\r\n                await Promise.all(promises);\r\n            } catch (error) {\r\n                // Ignore errors.\r\n            }\r\n\r\n            if (!this.discussion && !this.startingPost) {\r\n                // The discussion object was not passed as parameter and there is no starting post. Should not happen.\r\n                throw new Error('Invalid forum discussion.');\r\n            }\r\n\r\n            if (this.startingPost && this.startingPost.author && this.forum.type == 'single') {\r\n                // Hide author and groups for first post and type single.\r\n                delete this.startingPost.author.fullname;\r\n                delete this.startingPost.author.groups;\r\n            }\r\n\r\n            this.posts = posts;\r\n            this.postSubjects = this.getAllPosts().reduce(\r\n                (postSubjects, post) => {\r\n                    postSubjects[post.id] = post.subject;\r\n\r\n                    return postSubjects;\r\n                },\r\n                this.startingPost\r\n                    ? { [this.startingPost.id]: this.startingPost.subject }\r\n                    : {},\r\n            );\r\n\r\n            if (AddonModForum.isSetPinStateAvailableForSite()) {\r\n                // Use the canAddDiscussion WS to check if the user can pin discussions.\r\n                try {\r\n                    const response = await AddonModForum.canAddDiscussionToAll(this.forumId, { cmId: this.cmId });\r\n\r\n                    this.canPin = !!response.canpindiscussions;\r\n                } catch (error) {\r\n                    this.canPin = false;\r\n                }\r\n            } else {\r\n                this.canPin = false;\r\n            }\r\n\r\n            this.hasOfflineRatings =\r\n                await CoreRatingOffline.hasRatings('mod_forum', 'post', ContextLevel.MODULE, this.cmId, this.discussionId);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModal(error);\r\n        } finally {\r\n            this.discussionLoaded = true;\r\n            this.refreshIcon = CoreConstants.ICON_REFRESH;\r\n            this.syncIcon = CoreConstants.ICON_SYNC;\r\n\r\n            if (forceMarkAsRead || (hasUnreadPosts && this.trackPosts)) {\r\n                // // Add log in Moodle and mark unread posts as readed.\r\n                AddonModForum.logDiscussionView(this.discussionId, this.forumId || -1, this.forum.name).catch(() => {\r\n                    // Ignore errors.\r\n                }).finally(() => {\r\n                    // Trigger mark read posts.\r\n                    CoreEvents.trigger(AddonModForumProvider.MARK_READ_EVENT, {\r\n                        courseId: this.courseId,\r\n                        moduleId: this.cmId,\r\n                    }, CoreSites.getCurrentSiteId());\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convenience function to load discussion.\r\n     *\r\n     * @param forumId Forum ID.\r\n     * @param cmId Forum cmid.\r\n     * @param discussionId Discussion ID.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async loadDiscussion(forumId: number, cmId: number, discussionId: number): Promise<void> {\r\n        // Fetch the discussion if not passed as parameter.\r\n        if (this.discussion || !forumId) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const discussion = await AddonModForumHelper.getDiscussionById(forumId, cmId, discussionId);\r\n\r\n            this.discussion = discussion;\r\n            this.discussionId = this.discussion.discussion;\r\n        } catch (error) {\r\n            // Ignore errors.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tries to synchronize the posts discussion.\r\n     *\r\n     * @param showErrors Whether to show errors in a modal.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async syncDiscussion(showErrors: boolean): Promise<void> {\r\n        const promises: Promise<void>[] = [];\r\n\r\n        promises.push(\r\n            AddonModForumSync.instance\r\n                .syncDiscussionReplies(this.discussionId)\r\n                .then((result) => {\r\n                    if (result.warnings && result.warnings.length) {\r\n                        CoreDomUtils.showErrorModal(result.warnings[0]);\r\n                    }\r\n\r\n                    if (result && result.updated) {\r\n                        // Sync successful, send event.\r\n                        CoreEvents.trigger(AddonModForumSyncProvider.MANUAL_SYNCED, {\r\n                            forumId: this.forumId,\r\n                            userId: CoreSites.getCurrentSiteUserId(),\r\n                            source: 'discussion',\r\n                        }, CoreSites.getCurrentSiteId());\r\n                    }\r\n\r\n                    return;\r\n                }),\r\n        );\r\n\r\n        promises.push(\r\n            AddonModForumSync.instance\r\n                .syncRatings(this.cmId, this.discussionId)\r\n                .then((result) => {\r\n                    if (result.warnings && result.warnings.length) {\r\n                        CoreDomUtils.showErrorModal(result.warnings[0]);\r\n                    }\r\n\r\n                    return;\r\n                }),\r\n        );\r\n\r\n        try {\r\n            await Promise.all(promises);\r\n        } catch (error) {\r\n            if (showErrors) {\r\n                CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\r\n            }\r\n\r\n            throw new Error('Failed syncing discussion');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param refresher Refresher.\r\n     * @param done Function to call when done.\r\n     * @param showErrors If show errors to the user of hide them.\r\n     * @return Promise resolved when done.\r\n     */\r\n    async doRefresh(refresher?: IonRefresher | null, done?: () => void, showErrors: boolean = false): Promise<void> {\r\n        if (this.discussionLoaded) {\r\n            await this.refreshPosts(true, showErrors).finally(() => {\r\n                refresher?.complete();\r\n                done && done();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh posts.\r\n     *\r\n     * @param sync Whether to try to synchronize the discussion.\r\n     * @param showErrors Whether to show errors in a modal.\r\n     * @return Promise resolved when done.\r\n     */\r\n    refreshPosts(sync?: boolean, showErrors?: boolean): Promise<void> {\r\n        this.content.scrollToTop();\r\n        this.refreshIcon = CoreConstants.ICON_LOADING;\r\n        this.syncIcon = CoreConstants.ICON_LOADING;\r\n\r\n        const promises = [\r\n            AddonModForum.invalidateForumData(this.courseId),\r\n            AddonModForum.invalidateDiscussionPosts(this.discussionId, this.forumId),\r\n            AddonModForum.invalidateAccessInformation(this.forumId),\r\n            AddonModForum.invalidateCanAddDiscussion(this.forumId),\r\n        ];\r\n\r\n        return CoreUtils.allPromises(promises).catch(() => {\r\n            // Ignore errors.\r\n        }).then(() => this.fetchPosts(sync, showErrors));\r\n    }\r\n\r\n    /**\r\n     * Function to change posts sorting\r\n     *\r\n     * @param type Sort type.\r\n     * @return Promised resolved when done.\r\n     */\r\n    changeSort(type: SortType): Promise<void> {\r\n        this.discussionLoaded = false;\r\n        this.sort = type;\r\n        CoreSites.getCurrentSite()!.setLocalSiteConfig('AddonModForumDiscussionSort', this.sort);\r\n        this.content.scrollToTop();\r\n\r\n        return this.fetchPosts();\r\n    }\r\n\r\n    /**\r\n     * Lock or unlock the discussion.\r\n     *\r\n     * @param locked True to lock the discussion, false to unlock.\r\n     */\r\n    async setLockState(locked: boolean): Promise<void> {\r\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n\r\n        try {\r\n            const response = await AddonModForum.setLockState(this.forumId, this.discussionId, locked);\r\n            this.discussion.locked = response.locked;\r\n\r\n            const data = {\r\n                forumId: this.forumId,\r\n                discussionId: this.discussionId,\r\n                cmId: this.cmId,\r\n                locked: this.discussion.locked,\r\n            };\r\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\r\n\r\n            CoreDomUtils.showToast('addon.mod_forum.lockupdated', true);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModal(error);\r\n        } finally {\r\n            modal.dismiss();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pin or unpin the discussion.\r\n     *\r\n     * @param pinned True to pin the discussion, false to unpin it.\r\n     */\r\n    async setPinState(pinned: boolean): Promise<void> {\r\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n\r\n        try {\r\n            await AddonModForum.setPinState(this.discussionId, pinned);\r\n\r\n            this.discussion.pinned = pinned;\r\n\r\n            const data = {\r\n                forumId: this.forumId,\r\n                discussionId: this.discussionId,\r\n                cmId: this.cmId,\r\n                pinned: this.discussion.pinned,\r\n            };\r\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\r\n\r\n            CoreDomUtils.showToast('addon.mod_forum.pinupdated', true);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModal(error);\r\n        } finally {\r\n            modal.dismiss();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Star or unstar the discussion.\r\n     *\r\n     * @param starred True to star the discussion, false to unstar it.\r\n     */\r\n    async toggleFavouriteState(starred: boolean): Promise<void> {\r\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n\r\n        try {\r\n            await AddonModForum.toggleFavouriteState(this.discussionId, starred);\r\n\r\n            this.discussion.starred = starred;\r\n\r\n            const data = {\r\n                forumId: this.forumId,\r\n                discussionId: this.discussionId,\r\n                cmId: this.cmId,\r\n                starred: this.discussion.starred,\r\n            };\r\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\r\n\r\n            CoreDomUtils.showToast('addon.mod_forum.favouriteupdated', true);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModal(error);\r\n        } finally {\r\n            modal.dismiss();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * New post added.\r\n     */\r\n    postListChanged(): void {\r\n        // Trigger an event to notify a new reply.\r\n        const data = {\r\n            forumId: this.forumId,\r\n            discussionId: this.discussionId,\r\n            cmId: this.cmId,\r\n        };\r\n        CoreEvents.trigger(AddonModForumProvider.REPLY_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\r\n\r\n        this.discussionLoaded = false;\r\n        this.refreshPosts().finally(() => {\r\n            this.discussionLoaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all the posts contained in the discussion.\r\n     *\r\n     * @return Array containing all the posts of the discussion.\r\n     */\r\n    protected getAllPosts(): Post[] {\r\n        const allPosts = this.posts.map(post => this.flattenPostHierarchy(post));\r\n\r\n        return CoreArray.flatten(allPosts);\r\n    }\r\n\r\n    /**\r\n     * Flatten a post's hierarchy into an array.\r\n     *\r\n     * @param parent Parent post.\r\n     * @return Array containing all the posts within the hierarchy (including the parent).\r\n     */\r\n    protected flattenPostHierarchy(parent: Post): Post[] {\r\n        const posts = [parent];\r\n        const children = parent.children || [];\r\n\r\n        for (const child of children) {\r\n            posts.push(...this.flattenPostHierarchy(child));\r\n        }\r\n\r\n        return posts;\r\n    }\r\n\r\n}\r\n","export default \":host .addon-forum-reply-button .label {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvbW9kL2ZvcnVtL3BhZ2VzL2Rpc2N1c3Npb24vZGlzY3Vzc2lvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksU0FBQTtBQURSIiwiZmlsZSI6InNyYy9hZGRvbnMvbW9kL2ZvcnVtL3BhZ2VzL2Rpc2N1c3Npb24vZGlzY3Vzc2lvbi5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG5cclxuICAgIC5hZGRvbi1mb3J1bS1yZXBseS1idXR0b24gLmxhYmVsIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ== */\";"],"sourceRoot":"webpack:///"}