{"version":3,"sources":["./src/addons/calendar/pages/event/event.html","./src/addons/calendar/pages/event/event.module.ts","./src/addons/calendar/pages/event/event.page.ts","./src/addons/calendar/pages/event/event.scss"],"names":[],"mappings":"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","file":"addons-calendar-pages-event-event-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1 *ngIf=\\\"event\\\">\\r\\n            <img *ngIf=\\\"event.moduleIcon\\\" src=\\\"{{event.moduleIcon}}\\\" alt=\\\"\\\" role=\\\"presentation\\\" class=\\\"core-module-icon\\\">\\r\\n            <ion-icon *ngIf=\\\"event.eventIcon && !event.moduleIcon\\\" [name]=\\\"event.eventIcon\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <!-- Add the icon title so accessibility tools read it. -->\\r\\n            <span class=\\\"sr-only\\\">\\r\\n                {{ 'addon.calendar.type' + event.formattedType | translate }}\\r\\n                <span class=\\\"sr-only\\\" *ngIf=\\\"event.moduleIcon && event.iconTitle\\\">{{ event.iconTitle }}</span>\\r\\n            </span>\\r\\n            <core-format-text [text]=\\\"event.name\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n        </h1>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <!-- The context menu will be added in here. -->\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<core-navbar-buttons slot=\\\"end\\\">\\r\\n    <core-context-menu>\\r\\n        <core-context-menu-item [hidden]=\\\"isSplitViewOn || !eventLoaded || (!hasOffline && event && !event.deleted) || !isOnline\\\"\\r\\n            [priority]=\\\"400\\\" [content]=\\\"'core.settings.synchronizenow' | translate\\\" (action)=\\\"doRefresh(undefined, $event, true)\\\"\\r\\n            [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!canEdit || !event || !event.canedit || event.deleted\\\" [priority]=\\\"300\\\"\\r\\n            [content]=\\\"'core.edit' | translate\\\" (action)=\\\"openEdit()\\\" iconAction=\\\"fas-edit\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!canDelete || !event || !event.candelete || event.deleted\\\" [priority]=\\\"200\\\"\\r\\n            [content]=\\\"'core.delete' | translate\\\" (action)=\\\"deleteEvent()\\\"\\r\\n            iconAction=\\\"fas-trash\\\"></core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!event || !event.deleted\\\" [priority]=\\\"200\\\" [content]=\\\"'core.restore' | translate\\\"\\r\\n            (action)=\\\"undoDelete()\\\" iconAction=\\\"fas-undo-alt\\\"></core-context-menu-item>\\r\\n    </core-context-menu>\\r\\n</core-navbar-buttons>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!eventLoaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"eventLoaded\\\">\\r\\n        <!-- There is data to be synchronized -->\\r\\n        <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"hasOffline || (event && event.deleted)\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ 'core.hasdatatosync' | translate:{$a: 'addon.calendar.calendarevent' | translate} }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <ion-card>\\r\\n            <ion-card-content *ngIf=\\\"event\\\">\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"isSplitViewOn\\\">\\r\\n                    <img *ngIf=\\\"event.moduleIcon\\\" src=\\\"{{event.moduleIcon}}\\\" slot=\\\"start\\\" alt=\\\"\\\" role=\\\"presentation\\\"\\r\\n                        class=\\\"core-module-icon\\\">\\r\\n                    <ion-icon *ngIf=\\\"event.eventIcon && !event.moduleIcon\\\" [name]=\\\"event.eventIcon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\">\\r\\n                    </ion-icon>\\r\\n                    <ion-label>\\r\\n                        <span class=\\\"sr-only\\\">\\r\\n                            {{ 'addon.calendar.type' + event.formattedType | translate }}\\r\\n                            <span class=\\\"sr-only\\\" *ngIf=\\\"event.moduleIcon && event.iconTitle\\\">{{ event.iconTitle }}</span>\\r\\n                        </span>\\r\\n                        <h2>{{ 'addon.calendar.eventname' | translate }}</h2>\\r\\n                        <p>\\r\\n                            <core-format-text [text]=\\\"event.name\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                                [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                        </p>\\r\\n                    </ion-label>\\r\\n                    <ion-note slot=\\\"end\\\" *ngIf=\\\"event.deleted\\\">\\r\\n                        <ion-icon name=\\\"fas-trash\\\" aria-hidden=\\\"true\\\"></ion-icon> {{ 'core.deletedoffline' | translate }}\\r\\n                    </ion-note>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'addon.calendar.when' | translate }}</h2>\\r\\n                        <core-format-text [text]=\\\"event.formattedtime\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                        [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                    </ion-label>\\r\\n                    <ion-note slot=\\\"end\\\" *ngIf=\\\"!isSplitViewOn && event.deleted\\\">\\r\\n                        <ion-icon name=\\\"fas-trash\\\" aria-hidden=\\\"true\\\"></ion-icon> {{ 'core.deletedoffline' | translate }}\\r\\n                    </ion-note>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'addon.calendar.eventtype' | translate }}</h2>\\r\\n                        <p>{{ 'addon.calendar.type' + event.formattedType | translate }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"courseName\\\" [href]=\\\"courseUrl\\\" core-link capture=\\\"true\\\">\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'core.course' | translate}}</h2>\\r\\n                        <p>\\r\\n                            <core-format-text [text]=\\\"courseName\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"courseId\\\">\\r\\n                            </core-format-text>\\r\\n                        </p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"groupName\\\">\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'core.group' | translate}}</h2>\\r\\n                        <p>{{ groupName }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"categoryPath\\\">\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'core.category' | translate}}</h2>\\r\\n                        <p><core-format-text [text]=\\\"categoryPath\\\" contextLevel=\\\"coursecat\\\"\\r\\n                            [contextInstanceId]=\\\"event.categoryid\\\"></core-format-text></p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"event.description\\\">\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'core.description' | translate}}</h2>\\r\\n                        <p>\\r\\n                            <core-format-text [text]=\\\"event.description\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                                [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                        </p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"event.location\\\">\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'core.location' | translate}}</h2>\\r\\n                        <p>\\r\\n                            <a [href]=\\\"event.encodedLocation\\\" core-link auto-login=\\\"no\\\">\\r\\n                                <core-format-text [text]=\\\"event.location\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                                    [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                            </a>\\r\\n                        </p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item *ngIf=\\\"moduleUrl\\\">\\r\\n                    <ion-label>\\r\\n                        <ion-button expand=\\\"block\\\" color=\\\"primary\\\" [href]=\\\"moduleUrl\\\" core-link capture=\\\"true\\\">\\r\\n                            {{ 'addon.calendar.gotoactivity' | translate }}\\r\\n                        </ion-button>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ion-card-content>\\r\\n        </ion-card>\\r\\n\\r\\n        <ion-card list *ngIf=\\\"notificationsEnabled && event\\\">\\r\\n            <ion-item>\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'addon.calendar.reminders' | translate }}</h2>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ng-container *ngFor=\\\"let reminder of reminders\\\">\\r\\n                <ion-item *ngIf=\\\"reminder.time > 0 || defaultTime > 0\\\" class=\\\"ion-text-wrap\\\"\\r\\n                    [class.item-dimmed]=\\\"(reminder.time == -1 ? (event.timestart - defaultTime) : reminder.time) <= currentTime!\\\">\\r\\n                    <ion-label>\\r\\n                        <p *ngIf=\\\"reminder.time == -1\\\">\\r\\n                            {{ 'core.defaultvalue' | translate :{$a: ((event.timestart - defaultTime) * 1000) | coreFormatDate } }}\\r\\n                        </p>\\r\\n                        <p *ngIf=\\\"reminder.time > 0\\\">{{ reminder.time * 1000 | coreFormatDate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-button fill=\\\"clear\\\" (click)=\\\"cancelNotification(reminder.id, $event)\\\"\\r\\n                        [attr.aria-label]=\\\"'core.delete' | translate\\\" slot=\\\"end\\\"\\r\\n                        *ngIf=\\\"(reminder.time == -1 ? (event.timestart - defaultTime) : reminder.time) > currentTime!\\\">\\r\\n                        <ion-icon name=\\\"fas-trash\\\" color=\\\"danger\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"event.timestart + event.timeduration > currentTime!\\\">\\r\\n                <ion-item>\\r\\n                    <ion-label>\\r\\n                        <ion-button expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"notificationPicker.open()\\\">\\r\\n                            {{ 'addon.calendar.setnewreminder' | translate }}\\r\\n                        </ion-button>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-datetime #notificationPicker hidden [(ngModel)]=\\\"notificationTimeText\\\"\\r\\n                    [displayFormat]=\\\"notificationFormat\\\" [min]=\\\"notificationMin\\\" [max]=\\\"notificationMax\\\"\\r\\n                    [doneText]=\\\"'core.add' | translate\\\" (ionChange)=\\\"addNotificationTime()\\\" [monthNames]=\\\"monthNames\\\">\\r\\n                </ion-datetime>\\r\\n            </ng-container>\\r\\n        </ion-card>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { AddonCalendarComponentsModule } from '../../components/components.module';\r\n\r\nimport { AddonCalendarEventPage } from './event.page';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonCalendarEventPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        AddonCalendarComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonCalendarEventPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonCalendarEventPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy, OnInit, Optional } from '@angular/core';\r\nimport { IonRefresher } from '@ionic/angular';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport {\r\n    AddonCalendar,\r\n    AddonCalendarEvent,\r\n    AddonCalendarEventBase,\r\n    AddonCalendarEventToDisplay,\r\n    AddonCalendarGetEventsEvent,\r\n    AddonCalendarProvider,\r\n} from '../../services/calendar';\r\nimport { AddonCalendarHelper } from '../../services/calendar-helper';\r\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\r\nimport { AddonCalendarSync, AddonCalendarSyncEvents, AddonCalendarSyncProvider } from '../../services/calendar-sync';\r\nimport { CoreCourses } from '@features/courses/services/courses';\r\nimport { CoreApp } from '@services/app';\r\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreTextUtils } from '@services/utils/text';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreLocalNotifications } from '@services/local-notifications';\r\nimport { CoreCourse } from '@features/course/services/course';\r\nimport { CoreTimeUtils } from '@services/utils/time';\r\nimport { CoreGroups } from '@services/groups';\r\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\r\nimport { Network, NgZone, Translate } from '@singletons';\r\nimport { Subscription } from 'rxjs';\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { AddonCalendarReminderDBRecord } from '../../services/database/calendar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CoreScreen } from '@services/screen';\r\nimport { CoreConstants } from '@/core/constants';\r\nimport { CoreLang } from '@services/lang';\r\n\r\n/**\r\n * Page that displays a single calendar event.\r\n */\r\n@Component({\r\n    selector: 'page-addon-calendar-event',\r\n    templateUrl: 'event.html',\r\n    styleUrls: ['event.scss'],\r\n})\r\nexport class AddonCalendarEventPage implements OnInit, OnDestroy {\r\n\r\n    protected eventId!: number;\r\n    protected siteHomeId: number;\r\n    protected editEventObserver: CoreEventObserver;\r\n    protected syncObserver: CoreEventObserver;\r\n    protected manualSyncObserver: CoreEventObserver;\r\n    protected onlineObserver: Subscription;\r\n    protected currentSiteId: string;\r\n\r\n    eventLoaded = false;\r\n    notificationFormat?: string;\r\n    notificationMin?: string;\r\n    notificationMax?: string;\r\n    notificationTimeText?: string;\r\n    event?: AddonCalendarEventToDisplay;\r\n    courseId?: number;\r\n    courseName = '';\r\n    groupName?: string;\r\n    courseUrl = '';\r\n    notificationsEnabled = false;\r\n    moduleUrl = '';\r\n    categoryPath = '';\r\n    currentTime?: number;\r\n    defaultTime = 0;\r\n    reminders: AddonCalendarReminderDBRecord[] = [];\r\n    canEdit = false;\r\n    canDelete = false;\r\n    hasOffline = false;\r\n    isOnline = false;\r\n    syncIcon = CoreConstants.ICON_LOADING; // Sync icon.\r\n    isSplitViewOn = false;\r\n    monthNames?: string[];\r\n\r\n    constructor(\r\n        @Optional() protected svComponent: CoreSplitViewComponent,\r\n        protected route: ActivatedRoute,\r\n    ) {\r\n\r\n        this.notificationsEnabled = CoreLocalNotifications.isAvailable();\r\n        this.siteHomeId = CoreSites.getCurrentSiteHomeId();\r\n        this.currentSiteId = CoreSites.getCurrentSiteId();\r\n        this.isSplitViewOn = this.svComponent?.outletActivated;\r\n\r\n        // Check if site supports editing and deleting. No need to check allowed types, event.canedit already does it.\r\n        this.canEdit = AddonCalendar.canEditEventsInSite();\r\n        this.canDelete = AddonCalendar.canDeleteEventsInSite();\r\n\r\n        // Listen for event edited. If current event is edited, reload the data.\r\n        this.editEventObserver = CoreEvents.on(AddonCalendarProvider.EDIT_EVENT_EVENT, (data) => {\r\n            if (data && data.eventId == this.eventId) {\r\n                this.eventLoaded = false;\r\n                this.refreshEvent(true, false);\r\n            }\r\n        }, this.currentSiteId);\r\n\r\n        // Refresh data if this calendar event is synchronized automatically.\r\n        this.syncObserver = CoreEvents.on(\r\n            AddonCalendarSyncProvider.AUTO_SYNCED,\r\n            this.checkSyncResult.bind(this, false),\r\n            this.currentSiteId,\r\n        );\r\n\r\n        // Refresh data if calendar events are synchronized manually but not by this page.\r\n        this.manualSyncObserver = CoreEvents.on(\r\n            AddonCalendarSyncProvider.MANUAL_SYNCED,\r\n            this.checkSyncResult.bind(this, true),\r\n            this.currentSiteId,\r\n        );\r\n\r\n        // Refresh online status when changes.\r\n        this.onlineObserver = Network.onChange().subscribe(() => {\r\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\r\n            NgZone.run(() => {\r\n                this.isOnline = CoreApp.isOnline();\r\n            });\r\n        });\r\n    }\r\n\r\n    protected async initReminders(): Promise<void> {\r\n        if (this.notificationsEnabled) {\r\n            this.monthNames = CoreLang.getMonthNames();\r\n\r\n            this.reminders = await AddonCalendar.getEventReminders(this.eventId);\r\n            this.defaultTime = await AddonCalendar.getDefaultNotificationTime() * 60;\r\n\r\n            // Calculate format to use.\r\n            this.notificationFormat =\r\n                CoreTimeUtils.fixFormatForDatetime(CoreTimeUtils.convertPHPToMoment(\r\n                    Translate.instant('core.strftimedatetime'),\r\n                ));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ngOnInit(): void {\r\n        this.eventId = CoreNavigator.getRouteNumberParam('id')!;\r\n        this.syncIcon = CoreConstants.ICON_LOADING;\r\n\r\n        this.fetchEvent();\r\n        this.initReminders();\r\n    }\r\n\r\n    /**\r\n     * Fetches the event and updates the view.\r\n     *\r\n     * @param sync Whether it should try to synchronize offline events.\r\n     * @param showErrors Whether to show sync errors to the user.\r\n     * @return Promise resolved when done.\r\n     */\r\n    async fetchEvent(sync = false, showErrors = false): Promise<void> {\r\n        const currentSite = CoreSites.getCurrentSite();\r\n        const canGetById = AddonCalendar.isGetEventByIdAvailableInSite();\r\n        let deleted = false;\r\n\r\n        this.isOnline = CoreApp.isOnline();\r\n\r\n        if (sync) {\r\n            // Try to synchronize offline events.\r\n            try {\r\n                const result = await AddonCalendarSync.syncEvents();\r\n                if (result.warnings && result.warnings.length) {\r\n                    CoreDomUtils.showErrorModal(result.warnings[0]);\r\n                }\r\n\r\n                if (result.deleted && result.deleted.indexOf(this.eventId) != -1) {\r\n                    // This event was deleted during the sync.\r\n                    deleted = true;\r\n                }\r\n\r\n                if (result.updated) {\r\n                    // Trigger a manual sync event.\r\n                    result.source = 'event';\r\n\r\n                    CoreEvents.trigger(\r\n                        AddonCalendarSyncProvider.MANUAL_SYNCED,\r\n                        result,\r\n                        this.currentSiteId,\r\n                    );\r\n                }\r\n            } catch (error) {\r\n                if (showErrors) {\r\n                    CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (deleted) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let event: AddonCalendarEvent | AddonCalendarEventBase | AddonCalendarGetEventsEvent;\r\n            // Get the event data.\r\n            if (canGetById) {\r\n                event = await AddonCalendar.getEventById(this.eventId);\r\n            } else {\r\n                event = await AddonCalendar.getEvent(this.eventId);\r\n            }\r\n            this.event = AddonCalendarHelper.formatEventData(event);\r\n\r\n            try {\r\n                const offlineEvent = AddonCalendarHelper.formatOfflineEventData(\r\n                    await AddonCalendarOffline.getEvent(this.eventId),\r\n                );\r\n\r\n                // There is offline data, apply it.\r\n                this.hasOffline = true;\r\n\r\n                this.event = Object.assign(this.event, offlineEvent);\r\n            } catch {\r\n                // No offline data.\r\n                this.hasOffline = false;\r\n            }\r\n\r\n            this.currentTime = CoreTimeUtils.timestamp();\r\n            this.notificationMin = CoreTimeUtils.userDate(this.currentTime * 1000, 'YYYY-MM-DDTHH:mm', false);\r\n            this.notificationMax = CoreTimeUtils.userDate(\r\n                (this.event!.timestart + this.event!.timeduration) * 1000,\r\n                'YYYY-MM-DDTHH:mm',\r\n                false,\r\n            );\r\n\r\n            // Reset some of the calculated data.\r\n            this.categoryPath = '';\r\n            this.courseName = '';\r\n            this.courseUrl = '';\r\n            this.moduleUrl = '';\r\n\r\n            if (this.event!.moduleIcon) {\r\n                // It's a module event, translate the module name to the current language.\r\n                const name = CoreCourse.translateModuleName(this.event!.modulename || '');\r\n                if (name.indexOf('core.mod_') === -1) {\r\n                    this.event!.modulename = name;\r\n                }\r\n\r\n                // Get the module URL.\r\n                if (canGetById) {\r\n                    this.moduleUrl = this.event!.url || '';\r\n                }\r\n            }\r\n\r\n            const promises: Promise<void>[] = [];\r\n\r\n            const courseId = this.event.courseid;\r\n            if (courseId != this.siteHomeId) {\r\n                // If the event belongs to a course, get the course name and the URL to view it.\r\n                if (canGetById && this.event.course) {\r\n                    this.courseId = this.event.course.id;\r\n                    this.courseName = this.event.course.fullname;\r\n                    this.courseUrl = this.event.course.viewurl;\r\n                } else if (!canGetById && this.event.courseid ) {\r\n                    // Retrieve the course.\r\n                    promises.push(CoreCourses.getUserCourse(this.event.courseid, true).then((course) => {\r\n                        this.courseId = course.id;\r\n                        this.courseName = course.fullname;\r\n                        this.courseUrl = currentSite ? CoreTextUtils.concatenatePaths(\r\n                            currentSite.siteUrl,\r\n                            '/course/view.php?id=' + this.courseId,\r\n                        ) : '';\r\n\r\n                        return;\r\n                    }).catch(() => {\r\n                        // Error getting course, just don't show the course name.\r\n                    }));\r\n                }\r\n            }\r\n\r\n            // If it's a group event, get the name of the group.\r\n            if (courseId && this.event.groupid) {\r\n                promises.push(CoreGroups.getUserGroupsInCourse(courseId).then((groups) => {\r\n                    const group = groups.find((group) => group.id == this.event!.groupid);\r\n\r\n                    this.groupName = group ? group.name : '';\r\n\r\n                    return;\r\n                }).catch(() => {\r\n                    // Error getting groups, just don't show the group name.\r\n                    this.groupName = '';\r\n                }));\r\n            }\r\n\r\n            if (canGetById && this.event.iscategoryevent && this.event.category) {\r\n                this.categoryPath = this.event.category.nestedname;\r\n            }\r\n\r\n            if (this.event.location) {\r\n                // Build a link to open the address in maps.\r\n                this.event.location = CoreTextUtils.decodeHTML(this.event.location);\r\n                this.event.encodedLocation = CoreTextUtils.buildAddressURL(this.event.location);\r\n            }\r\n\r\n            // Check if event was deleted in offine.\r\n            promises.push(AddonCalendarOffline.isEventDeleted(this.eventId).then((deleted) => {\r\n                this.event!.deleted = deleted;\r\n\r\n                return;\r\n            }));\r\n\r\n            // Re-calculate the formatted time so it uses the device date.\r\n            promises.push(AddonCalendar.getCalendarTimeFormat().then(async (timeFormat) => {\r\n                this.event!.formattedtime = await AddonCalendar.formatEventTime(this.event!, timeFormat);\r\n\r\n                return;\r\n            }));\r\n\r\n            await Promise.all(promises);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevent', true);\r\n        }\r\n\r\n        this.eventLoaded = true;\r\n        this.syncIcon = CoreConstants.ICON_SYNC;\r\n    }\r\n\r\n    /**\r\n     * Add a reminder for this event.\r\n     */\r\n    async addNotificationTime(): Promise<void> {\r\n        if (this.notificationTimeText && this.event && this.event.id) {\r\n            let notificationTime = CoreTimeUtils.convertToTimestamp(this.notificationTimeText);\r\n\r\n            const currentTime = CoreTimeUtils.timestamp();\r\n            const minute = Math.floor(currentTime / 60) * 60;\r\n\r\n            // Check if the notification time is in the same minute as we are, so the notification is triggered.\r\n            if (notificationTime >= minute && notificationTime < minute + 60) {\r\n                notificationTime = currentTime + 1;\r\n            }\r\n\r\n            await AddonCalendar.addEventReminder(this.event, notificationTime);\r\n            this.reminders = await AddonCalendar.getEventReminders(this.eventId);\r\n            this.notificationTimeText = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cancel the selected notification.\r\n     *\r\n     * @param id Reminder ID.\r\n     * @param e Click event.\r\n     */\r\n    async cancelNotification(id: number, e: Event): Promise<void> {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        try {\r\n            await CoreDomUtils.showDeleteConfirm();\r\n\r\n            const modal = await CoreDomUtils.showModalLoading('core.deleting', true);\r\n\r\n            try {\r\n                await AddonCalendar.deleteEventReminder(id);\r\n                this.reminders = await AddonCalendar.getEventReminders(this.eventId);\r\n            } catch (error) {\r\n                CoreDomUtils.showErrorModalDefault(error, 'Error deleting reminder');\r\n            } finally {\r\n                modal.dismiss();\r\n            }\r\n        } catch {\r\n            // Ignore errors.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param refresher Refresher.\r\n     * @param done Function to call when done.\r\n     * @param showErrors Whether to show sync errors to the user.\r\n     * @return Promise resolved when done.\r\n     */\r\n    async doRefresh(refresher?: IonRefresher, done?: () => void, showErrors= false): Promise<void> {\r\n        if (!this.eventLoaded) {\r\n            return;\r\n        }\r\n\r\n        await this.refreshEvent(true, showErrors).finally(() => {\r\n            refresher?.complete();\r\n            done && done();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refresh the event.\r\n     *\r\n     * @param sync Whether it should try to synchronize offline events.\r\n     * @param showErrors Whether to show sync errors to the user.\r\n     * @return Promise resolved when done.\r\n     */\r\n    async refreshEvent(sync = false, showErrors = false): Promise<void> {\r\n        this.syncIcon = CoreConstants.ICON_LOADING;\r\n\r\n        const promises: Promise<void>[] = [];\r\n\r\n        promises.push(AddonCalendar.invalidateEvent(this.eventId));\r\n        promises.push(AddonCalendar.invalidateTimeFormat());\r\n\r\n        await CoreUtils.allPromisesIgnoringErrors(promises);\r\n\r\n        await this.fetchEvent(sync, showErrors);\r\n    }\r\n\r\n    /**\r\n     * Open the page to edit the event.\r\n     */\r\n    openEdit(): void {\r\n        CoreNavigator.navigateToSitePath(`/calendar/edit/${this.eventId}`);\r\n    }\r\n\r\n    /**\r\n     * Delete the event.\r\n     */\r\n    async deleteEvent(): Promise<void> {\r\n        if (!this.event) {\r\n            return;\r\n        }\r\n\r\n        const title = Translate.instant('addon.calendar.deleteevent');\r\n        const options: AlertOptions = {};\r\n        let message: string;\r\n\r\n        if (this.event.eventcount > 1) {\r\n            // It's a repeated event.\r\n            message = Translate.instant(\r\n                'addon.calendar.confirmeventseriesdelete',\r\n                { $a: { name: this.event.name, count: this.event.eventcount } },\r\n            );\r\n\r\n            options.inputs = [\r\n                {\r\n                    type: 'radio',\r\n                    name: 'deleteall',\r\n                    checked: true,\r\n                    value: false,\r\n                    label: Translate.instant('addon.calendar.deleteoneevent'),\r\n                },\r\n                {\r\n                    type: 'radio',\r\n                    name: 'deleteall',\r\n                    checked: false,\r\n                    value: true,\r\n                    label: Translate.instant('addon.calendar.deleteallevents'),\r\n                },\r\n            ];\r\n        } else {\r\n            // Not repeated, display a simple confirm.\r\n            message = Translate.instant('addon.calendar.confirmeventdelete', { $a: this.event.name });\r\n        }\r\n\r\n        let deleteAll = false;\r\n        try {\r\n            deleteAll = await CoreDomUtils.showConfirm(message, title, undefined, undefined, options);\r\n        } catch {\r\n\r\n            // User canceled.\r\n            return;\r\n        }\r\n\r\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n\r\n        try {\r\n            const sent = await AddonCalendar.deleteEvent(this.event.id, this.event.name, deleteAll);\r\n\r\n            if (sent) {\r\n                // Event deleted, invalidate right days & months.\r\n                try {\r\n                    await AddonCalendarHelper.refreshAfterChangeEvent(this.event, deleteAll ? this.event.eventcount : 1);\r\n                } catch {\r\n                    // Ignore errors.\r\n                }\r\n            }\r\n\r\n            // Trigger an event.\r\n            CoreEvents.trigger(AddonCalendarProvider.DELETED_EVENT_EVENT, {\r\n                eventId: this.eventId,\r\n                sent: sent,\r\n            }, CoreSites.getCurrentSiteId());\r\n\r\n            if (sent) {\r\n                CoreDomUtils.showToast('addon.calendar.eventcalendareventdeleted', true, 3000);\r\n\r\n                // Event deleted, close the view.\r\n                if (CoreScreen.isMobile) {\r\n                    CoreNavigator.back();\r\n                }\r\n            } else {\r\n                // Event deleted in offline, just mark it as deleted.\r\n                this.event.deleted = true;\r\n            }\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error deleting event.');\r\n        }\r\n\r\n        modal.dismiss();\r\n    }\r\n\r\n    /**\r\n     * Undo delete the event.\r\n     */\r\n    async undoDelete(): Promise<void> {\r\n        if (!this.event) {\r\n            return;\r\n        }\r\n\r\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\r\n\r\n        try {\r\n\r\n            await AddonCalendarOffline.unmarkDeleted(this.event.id);\r\n\r\n            // Trigger an event.\r\n            CoreEvents.trigger(AddonCalendarProvider.UNDELETED_EVENT_EVENT, {\r\n                eventId: this.eventId,\r\n            }, CoreSites.getCurrentSiteId());\r\n\r\n            this.event.deleted = false;\r\n\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error undeleting event.');\r\n        }\r\n\r\n        modal.dismiss();\r\n    }\r\n\r\n    /**\r\n     * Check the result of an automatic sync or a manual sync not done by this page.\r\n     *\r\n     * @param isManual Whether it's a manual sync.\r\n     * @param data Sync result.\r\n     */\r\n    protected checkSyncResult(isManual: boolean, data: AddonCalendarSyncEvents): void {\r\n        if (!data) {\r\n            return;\r\n        }\r\n\r\n        if (data.deleted && data.deleted.indexOf(this.eventId) != -1) {\r\n            CoreDomUtils.showToast('addon.calendar.eventcalendareventdeleted', true, 3000);\r\n\r\n            // Event was deleted, close the view.\r\n            if (CoreScreen.isMobile) {\r\n                CoreNavigator.back();\r\n            }\r\n        } else if (data.events && (!isManual || data.source != 'event')) {\r\n            const event = data.events.find((ev) => ev.id == this.eventId);\r\n\r\n            if (event) {\r\n                this.eventLoaded = false;\r\n                this.refreshEvent();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.editEventObserver?.off();\r\n        this.syncObserver?.off();\r\n        this.manualSyncObserver?.off();\r\n        this.onlineObserver?.unsubscribe();\r\n    }\r\n\r\n}\r\n","export default \":host ion-card ion-note {\\n  font-size: 1.6rem;\\n}\\n:host h1 ion-icon, :host h1 img {\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvY2FsZW5kYXIvcGFnZXMvZXZlbnQvZXZlbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLGlCQUFBO0FBQVI7QUFFSTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7QUFBUiIsImZpbGUiOiJzcmMvYWRkb25zL2NhbGVuZGFyL3BhZ2VzL2V2ZW50L2V2ZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBpb24tY2FyZCBpb24tbm90ZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICB9XHJcbiAgICBoMSBpb24taWNvbiwgaDEgaW1nIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICB9XHJcbn1cclxuIl19 */\";"],"sourceRoot":"webpack:///"}