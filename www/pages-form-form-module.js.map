{"version":3,"sources":["./src/addons/mod/feedback/pages/form/form.html","./src/addons/mod/feedback/pages/form/form.module.ts","./src/addons/mod/feedback/pages/form/form.scss","./src/addons/mod/feedback/pages/form/form.ts"],"names":[],"mappings":"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","file":"pages-form-form-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>\\r\\n            <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\r\\n            </core-format-text>\\r\\n        </h1>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-loading [hideUntil]=\\\"feedbackLoaded\\\">\\r\\n        <ng-container *ngIf=\\\"items && items.length\\\">\\r\\n            <ion-list class=\\\"ion-no-margin\\\">\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'addon.mod_feedback.mode' | translate }}</h2>\\r\\n                        <p *ngIf=\\\"access!.isanonymous\\\">{{ 'addon.mod_feedback.anonymous' | translate }}</p>\\r\\n                        <p *ngIf=\\\"!access!.isanonymous\\\">{{ 'addon.mod_feedback.non_anonymous' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ng-container *ngFor=\\\"let item of items\\\">\\r\\n                    <core-spacer *ngIf=\\\"item.typ == 'pagebreak'\\\"></core-spacer>\\r\\n                    <ng-container *ngIf=\\\"item.typ != 'pagebreak'\\\">\\r\\n                        <ion-item class=\\\"ion-text-wrap addon-mod_feedback-item\\\" [color]=\\\"item.dependitem > 0 ? 'light' : ''\\\"\\r\\n                            [class.core-danger-item]=\\\"item.isEmpty || item.hasError\\\">\\r\\n                            <ion-label [position]=\\\"item.hasTextInput ? 'stacked' : undefined\\\">\\r\\n                                <p *ngIf=\\\"item.name\\\" [core-mark-required]=\\\"item.required\\\">\\r\\n                                    <span *ngIf=\\\"feedback!.autonumbering && item.itemnumber\\\">{{item.itemnumber}}. </span>\\r\\n                                    <core-format-text [component]=\\\"component\\\" [componentId]=\\\"cmId\\\" [text]=\\\"item.name\\\"\\r\\n                                        contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\" [wsNotFiltered]=\\\"true\\\">\\r\\n                                    </core-format-text>\\r\\n                                    <span *ngIf=\\\"item.postfix\\\" class=\\\"addon-mod_feedback-postfix\\\">{{item.postfix}}</span>\\r\\n                                </p>\\r\\n                                <p *ngIf=\\\"item.templateName == 'label'\\\">\\r\\n                                    <core-format-text [component]=\\\"component\\\" [componentId]=\\\"cmId\\\"\\r\\n                                        [text]=\\\"item.presentation\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\"\\r\\n                                        [wsNotFiltered]=\\\"true\\\" [courseId]=\\\"courseId\\\">\\r\\n                                    </core-format-text>\\r\\n                                </p>\\r\\n                            </ion-label>\\r\\n\\r\\n                            <ion-input *ngIf=\\\"item.templateName == 'textfield'\\\" type=\\\"text\\\" [(ngModel)]=\\\"item.value\\\"\\r\\n                                autocorrect=\\\"off\\\" name=\\\"{{item.typ}}_{{item.id}}\\\" maxlength=\\\"{{item.length}}\\\"\\r\\n                                [required]=\\\"item.required\\\">\\r\\n                            </ion-input>\\r\\n\\r\\n                            <ng-container *ngIf=\\\"item.templateName == 'numeric'\\\">\\r\\n                                <ion-input type=\\\"number\\\" [(ngModel)]=\\\"item.value\\\" name=\\\"{{item.typ}}_{{item.id}}\\\"\\r\\n                                    [required]=\\\"item.required\\\">\\r\\n                                </ion-input>\\r\\n                                <ion-text *ngIf=\\\"item.hasError\\\" color=\\\"danger\\\" class=\\\"addon-mod_feedback-item-error\\\">\\r\\n                                    {{ 'addon.mod_feedback.numberoutofrange' | translate }} [{{item.rangefrom}}\\r\\n                                    <span *ngIf=\\\"item.rangefrom && item.rangeto\\\">, </span>{{item.rangeto}}]\\r\\n                                </ion-text>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ion-textarea *ngIf=\\\"item.templateName == 'textarea'\\\" [required]=\\\"item.required\\\"\\r\\n                                name=\\\"{{item.typ}}_{{item.id}}\\\" [(ngModel)]=\\\"item.value\\\">\\r\\n                            </ion-textarea>\\r\\n\\r\\n                            <ion-select *ngIf=\\\"item.templateName == 'multichoice-d'\\\" [required]=\\\"item.required\\\"\\r\\n                                name=\\\"{{item.typ}}_{{item.id}}\\\" [(ngModel)]=\\\"item.value\\\" interface=\\\"action-sheet\\\"\\r\\n                                [interfaceOptions]=\\\"{header: item.name}\\\">\\r\\n                                <ion-select-option *ngFor=\\\"let option of item.choices\\\" [value]=\\\"option.value\\\">\\r\\n                                    <core-format-text [component]=\\\"component\\\" [componentId]=\\\"cmId\\\" [text]=\\\"option.label\\\"\\r\\n                                        contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [wsNotFiltered]=\\\"true\\\"\\r\\n                                        [courseId]=\\\"courseId\\\">\\r\\n                                    </core-format-text>\\r\\n                                </ion-select-option>\\r\\n                            </ion-select>\\r\\n                        </ion-item>\\r\\n\\r\\n                        <ion-radio-group *ngIf=\\\"item.templateName == 'multichoice-r'\\\" [(ngModel)]=\\\"item.value\\\"\\r\\n                            [required]=\\\"item.required\\\" name=\\\"{{item.typ}}_{{item.id}}\\\">\\r\\n                            <ion-item *ngFor=\\\"let option of item.choices\\\">\\r\\n                                <ion-label>\\r\\n                                    <core-format-text [component]=\\\"component\\\" [componentId]=\\\"cmId\\\"\\r\\n                                        [text]=\\\"option.label\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\"\\r\\n                                        [wsNotFiltered]=\\\"true\\\" [courseId]=\\\"courseId\\\">\\r\\n                                    </core-format-text>\\r\\n                                </ion-label>\\r\\n                                <ion-radio slot=\\\"start\\\" [value]=\\\"option.value\\\"></ion-radio>\\r\\n                            </ion-item>\\r\\n                        </ion-radio-group>\\r\\n\\r\\n                        <ng-container *ngIf=\\\"item.templateName == 'multichoice-c'\\\">\\r\\n                            <ion-item *ngFor=\\\"let option of item.choices\\\">\\r\\n                                <ion-label>\\r\\n                                    <core-format-text [component]=\\\"component\\\" [componentId]=\\\"cmId\\\" [text]=\\\"option.label\\\"\\r\\n                                        contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [wsNotFiltered]=\\\"true\\\"\\r\\n                                        [courseId]=\\\"courseId\\\">\\r\\n                                    </core-format-text>\\r\\n                                </ion-label>\\r\\n                                <ion-checkbox [required]=\\\"item.required\\\" name=\\\"{{item.typ}}_{{item.id}}\\\"\\r\\n                                    [(ngModel)]=\\\"option.checked\\\" value=\\\"option.value\\\">\\r\\n                                </ion-checkbox>\\r\\n                            </ion-item>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <ng-container *ngIf=\\\"item.templateName == 'captcha'\\\">\\r\\n                            <core-recaptcha *ngIf=\\\"!preview && !offline\\\" [publicKey]=\\\"item.captcha.recaptchapublickey\\\"\\r\\n                                [model]=\\\"item\\\" modelValueName=\\\"value\\\">\\r\\n                            </core-recaptcha>\\r\\n                            <div *ngIf=\\\"!preview && (!item.captcha || offline)\\\" class=\\\"core-warning-card\\\">\\r\\n                                <ion-item>\\r\\n                                    <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                                    <ion-label>{{ 'addon.mod_feedback.captchaofflinewarning' | translate }}</ion-label>\\r\\n                                </ion-item>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </ng-container>\\r\\n                </ng-container>\\r\\n                <ion-grid *ngIf=\\\"!preview\\\">\\r\\n                    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                        <ion-col *ngIf=\\\"hasPrevPage\\\">\\r\\n                            <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"gotoPage(true)\\\" class=\\\"ion-text-wrap\\\">\\r\\n                                <ion-icon name=\\\"fas-chevron-left\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                                {{ 'addon.mod_feedback.previous_page' | translate }}\\r\\n                            </ion-button>\\r\\n                        </ion-col>\\r\\n                        <ion-col *ngIf=\\\"hasNextPage\\\">\\r\\n                            <ion-button expand=\\\"block\\\" (click)=\\\"gotoPage(false)\\\" class=\\\"ion-text-wrap\\\">\\r\\n                                {{ 'addon.mod_feedback.next_page' | translate }}\\r\\n                                <ion-icon name=\\\"fas-chevron-right\\\" slot=\\\"end\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                            </ion-button>\\r\\n                        </ion-col>\\r\\n                        <ion-col *ngIf=\\\"!hasNextPage\\\">\\r\\n                            <ion-button expand=\\\"block\\\" (click)=\\\"gotoPage(false)\\\" class=\\\"ion-text-wrap\\\">\\r\\n                                {{ 'addon.mod_feedback.save_entries' | translate }}\\r\\n                            </ion-button>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </ion-list>\\r\\n        </ng-container>\\r\\n\\r\\n        <ion-card class=\\\"core-success-card\\\" *ngIf=\\\"completed\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-check\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>\\r\\n                    <p *ngIf=\\\"!completionPageContents && !completedOffline\\\">\\r\\n                        {{ 'addon.mod_feedback.this_feedback_is_already_submitted' | translate }}\\r\\n                    </p>\\r\\n                    <p *ngIf=\\\"!completionPageContents && completedOffline\\\">\\r\\n                        {{ 'addon.mod_feedback.feedback_submitted_offline' | translate }}\\r\\n                    </p>\\r\\n                    <p *ngIf=\\\"completionPageContents\\\">\\r\\n                        <core-format-text [component]=\\\"component\\\" componentId=\\\"componentId\\\" [text]=\\\"completionPageContents\\\"\\r\\n                            contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\r\\n                        </core-format-text>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <ion-card *ngIf=\\\"completed && (access!.canviewanalysis || hasNextPage)\\\">\\r\\n            <ion-grid>\\r\\n                <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                    <ion-col *ngIf=\\\"access!.canviewanalysis\\\">\\r\\n                        <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"showAnalysis()\\\" class=\\\"ion-text-wrap\\\">\\r\\n                            <ion-icon name=\\\"fas-chart-bar\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                            {{ 'addon.mod_feedback.completed_feedbacks' | translate }}\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                    <ion-col *ngIf=\\\"hasNextPage\\\">\\r\\n                        <ion-button expand=\\\"block\\\" (click)=\\\"continue()\\\" class=\\\"ion-text-wrap\\\">\\r\\n                            {{ 'core.continue' | translate }}\\r\\n                            <ion-icon name=\\\"fas-chevron-right\\\" slot=\\\"end\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n            </ion-grid>\\r\\n        </ion-card>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CanLeaveGuard } from '@guards/can-leave';\r\nimport { AddonModFeedbackFormPage } from './form';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonModFeedbackFormPage,\r\n        canDeactivate: [CanLeaveGuard],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonModFeedbackFormPage,\r\n    ],\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonModFeedbackFormPageModule {}\r\n","export default \":host .addon-mod_feedback-item ion-label.label-stacked {\\n  margin: 11px 0px 10px;\\n  transform: none;\\n}\\n:host .addon-mod_feedback-item-error {\\n  padding-top: 5px;\\n  padding-bottom: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvbW9kL2ZlZWRiYWNrL3BhZ2VzL2Zvcm0vZm9ybS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0kscUJBQUE7RUFDQSxlQUFBO0FBQVI7QUFHSTtFQUNJLGdCQUFBO0VBQ0EsbUJBQUE7QUFEUiIsImZpbGUiOiJzcmMvYWRkb25zL21vZC9mZWVkYmFjay9wYWdlcy9mb3JtL2Zvcm0uc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIC5hZGRvbi1tb2RfZmVlZGJhY2staXRlbSBpb24tbGFiZWwubGFiZWwtc3RhY2tlZCB7XHJcbiAgICAgICAgbWFyZ2luOiAxMXB4IDBweCAxMHB4O1xyXG4gICAgICAgIHRyYW5zZm9ybTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAuYWRkb24tbW9kX2ZlZWRiYWNrLWl0ZW0tZXJyb3Ige1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDhweDtcclxuICAgIH1cclxufVxyXG4iXX0= */\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { CoreSite } from '@classes/site';\r\nimport { CoreContentLinksHelper } from '@features/contentlinks/services/contentlinks-helper';\r\nimport { CoreCourse, CoreCourseCommonModWSOptions, CoreCourseWSModule } from '@features/course/services/course';\r\nimport { CoreCourseHelper } from '@features/course/services/course-helper';\r\nimport { CanLeave } from '@guards/can-leave';\r\nimport { IonContent } from '@ionic/angular';\r\nimport { CoreApp } from '@services/app';\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { CoreSites, CoreSitesReadingStrategy } from '@services/sites';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { Network, NgZone, Translate } from '@singletons';\r\nimport { CoreEvents } from '@singletons/events';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n    AddonModFeedback,\r\n    AddonModFeedbackGetFeedbackAccessInformationWSResponse,\r\n    AddonModFeedbackPageItems,\r\n    AddonModFeedbackProvider,\r\n    AddonModFeedbackResponseValue,\r\n    AddonModFeedbackWSFeedback,\r\n} from '../../services/feedback';\r\nimport { AddonModFeedbackFormItem, AddonModFeedbackHelper } from '../../services/feedback-helper';\r\nimport { AddonModFeedbackSync } from '../../services/feedback-sync';\r\nimport { AddonModFeedbackModuleHandlerService } from '../../services/handlers/module';\r\n\r\n/**\r\n * Page that displays feedback form.\r\n */\r\n@Component({\r\n    selector: 'page-addon-mod-feedback-form',\r\n    templateUrl: 'form.html',\r\n    styleUrls: ['form.scss'],\r\n})\r\nexport class AddonModFeedbackFormPage implements OnInit, OnDestroy, CanLeave {\r\n\r\n    @ViewChild(IonContent) content?: IonContent;\r\n\r\n    protected module?: CoreCourseWSModule;\r\n    protected currentPage?: number;\r\n    protected siteAfterSubmit?: string;\r\n    protected onlineObserver: Subscription;\r\n    protected originalData?: Record<string, AddonModFeedbackResponseValue>;\r\n    protected currentSite: CoreSite;\r\n    protected forceLeave = false;\r\n\r\n    title?: string;\r\n    preview = false;\r\n    fromIndex = false;\r\n    cmId!: number;\r\n    courseId!: number;\r\n    feedback?: AddonModFeedbackWSFeedback;\r\n    completionPageContents?: string;\r\n    component = AddonModFeedbackProvider.COMPONENT;\r\n    offline = false;\r\n    feedbackLoaded = false;\r\n    access?: AddonModFeedbackGetFeedbackAccessInformationWSResponse;\r\n    items: AddonModFeedbackFormItem[] = [];\r\n    hasPrevPage = false;\r\n    hasNextPage = false;\r\n    completed = false;\r\n    completedOffline = false;\r\n\r\n    constructor() {\r\n        this.currentSite = CoreSites.getCurrentSite()!;\r\n\r\n        // Refresh online status when changes.\r\n        this.onlineObserver = Network.onChange().subscribe(() => {\r\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\r\n            NgZone.run(() => {\r\n                this.offline = !CoreApp.isOnline();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    async ngOnInit(): Promise<void> {\r\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\r\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\r\n        this.currentPage = CoreNavigator.getRouteNumberParam('page');\r\n        this.title = CoreNavigator.getRouteParam('title');\r\n        this.preview = !!CoreNavigator.getRouteBooleanParam('preview');\r\n        this.fromIndex = !!CoreNavigator.getRouteBooleanParam('fromIndex');\r\n\r\n        await this.fetchData();\r\n\r\n        if (!this.feedback) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await AddonModFeedback.logView(this.feedback.id, this.feedback.name, true);\r\n\r\n            CoreCourse.checkModuleCompletion(this.courseId, this.module!.completiondata);\r\n        } catch {\r\n            // Ignore errors.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * View entered.\r\n     */\r\n    ionViewDidEnter(): void {\r\n        this.forceLeave = false;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    async canLeave(): Promise<boolean> {\r\n        if (this.forceLeave) {\r\n            return true;\r\n        }\r\n\r\n        if (!this.preview) {\r\n            const responses = AddonModFeedbackHelper.getPageItemsResponses(this.items);\r\n\r\n            if (this.items && !this.completed && this.originalData) {\r\n                // Form submitted. Check if there is any change.\r\n                if (!CoreUtils.basicLeftCompare(responses, this.originalData, 3)) {\r\n                    await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Fetch all the data required for the view.\r\n     *\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchData(): Promise<void> {\r\n        try {\r\n            this.module = await CoreCourse.getModule(this.cmId, this.courseId, undefined, true, false, this.currentSite.getId());\r\n\r\n            this.offline = !CoreApp.isOnline();\r\n            const options = {\r\n                cmId: this.cmId,\r\n                readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\r\n                siteId: this.currentSite.getId(),\r\n            };\r\n\r\n            this.feedback = await AddonModFeedback.getFeedback(this.courseId, this.cmId);\r\n\r\n            this.title = this.feedback.name || this.title;\r\n\r\n            await this.fetchAccessData(options);\r\n\r\n            let page = 0;\r\n\r\n            if (!this.preview && this.access!.cansubmit && !this.access!.isempty) {\r\n                page = this.currentPage ?? await this.fetchResumePage(options);\r\n            } else {\r\n                this.preview = true;\r\n            }\r\n\r\n            await this.fetchFeedbackPageData(page);\r\n        } catch (message) {\r\n            CoreDomUtils.showErrorModalDefault(message, 'core.course.errorgetmodule', true);\r\n            this.forceLeave = true;\r\n            CoreNavigator.back();\r\n        } finally {\r\n            this.feedbackLoaded = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetch access information.\r\n     *\r\n     * @param options Options.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchAccessData(options: CoreCourseCommonModWSOptions): Promise<void> {\r\n        try {\r\n            this.access = await AddonModFeedback.getFeedbackAccessInformation(this.feedback!.id, options);\r\n        } catch (error) {\r\n            if (this.offline || CoreUtils.isWebServiceError(error)) {\r\n                // Already offline or shouldn't go offline, fail.\r\n                throw error;\r\n            }\r\n\r\n            // If it fails, go offline.\r\n            this.offline = true;\r\n            options.readingStrategy = CoreSitesReadingStrategy.PREFER_CACHE;\r\n\r\n            this.access = await AddonModFeedback.getFeedbackAccessInformation(this.feedback!.id, options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get resume page from WS.\r\n     *\r\n     * @param options Options.\r\n     * @return Promise resolved with the page to resume.\r\n     */\r\n    protected async fetchResumePage(options: CoreCourseCommonModWSOptions): Promise<number> {\r\n        try {\r\n            return await AddonModFeedback.getResumePage(this.feedback!.id, options);\r\n        } catch (error) {\r\n            if (this.offline || CoreUtils.isWebServiceError(error)) {\r\n                // Already offline or shouldn't go offline, fail.\r\n                throw error;\r\n            }\r\n\r\n            // Go offline.\r\n            this.offline = true;\r\n            options.readingStrategy = CoreSitesReadingStrategy.PREFER_CACHE;\r\n\r\n            return AddonModFeedback.getResumePage(this.feedback!.id, options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetch page data.\r\n     *\r\n     * @param page Page to load.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchFeedbackPageData(page: number = 0): Promise<void> {\r\n        this.items = [];\r\n        const response = await this.fetchPageItems(page);\r\n\r\n        this.items = <AddonModFeedbackFormItem[]> response.items\r\n            .map((itemData) => AddonModFeedbackHelper.getItemForm(itemData, this.preview))\r\n            .filter((itemData) => itemData); // Filter items with errors.\r\n\r\n        if (!this.preview) {\r\n            const itemsCopy = CoreUtils.clone(this.items); // Copy the array to avoid modifications.\r\n            this.originalData = AddonModFeedbackHelper.getPageItemsResponses(itemsCopy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetch page items.\r\n     *\r\n     * @param page Page to get.\r\n     * @return Promise resolved with WS response.\r\n     */\r\n    protected async fetchPageItems(page: number): Promise<AddonModFeedbackPageItems> {\r\n        const options = {\r\n            cmId: this.cmId,\r\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\r\n            siteId: this.currentSite.getId(),\r\n        };\r\n\r\n        if (this.preview) {\r\n            const response = await AddonModFeedback.getItems(this.feedback!.id, options);\r\n\r\n            return {\r\n                items: response.items,\r\n                warnings: response.warnings,\r\n                hasnextpage: false,\r\n                hasprevpage: false,\r\n            };\r\n        }\r\n\r\n        this.currentPage = page;\r\n        let response: AddonModFeedbackPageItems;\r\n\r\n        try {\r\n            response = await AddonModFeedback.getPageItemsWithValues(this.feedback!.id, page, options);\r\n        } catch (error) {\r\n            if (this.offline || CoreUtils.isWebServiceError(error)) {\r\n                // Already offline or shouldn't go offline, fail.\r\n                throw error;\r\n            }\r\n\r\n            // Go offline.\r\n            this.offline = true;\r\n            options.readingStrategy = CoreSitesReadingStrategy.PREFER_CACHE;\r\n\r\n            response = await AddonModFeedback.getPageItemsWithValues(this.feedback!.id, page, options);\r\n        }\r\n\r\n        this.hasPrevPage = !!response.hasprevpage;\r\n        this.hasNextPage = !!response.hasnextpage;\r\n\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * Function to allow page navigation through the questions form.\r\n     *\r\n     * @param goPrevious If true it will go back to the previous page, if false, it will go forward.\r\n     * @return Resolved when done.\r\n     */\r\n    async gotoPage(goPrevious: boolean): Promise<void> {\r\n        this.content?.scrollToTop();\r\n        this.feedbackLoaded = false;\r\n\r\n        const responses = AddonModFeedbackHelper.getPageItemsResponses(this.items);\r\n        const formHasErrors = this.items.some((item) => item.isEmpty || item.hasError);\r\n\r\n        try {\r\n            // Sync other pages first.\r\n            await CoreUtils.ignoreErrors(AddonModFeedbackSync.syncFeedback(this.feedback!.id));\r\n\r\n            const response = await AddonModFeedback.processPage(this.feedback!.id, this.currentPage!, responses, {\r\n                goPrevious,\r\n                formHasErrors,\r\n                courseId: this.courseId,\r\n                cmId: this.cmId,\r\n            });\r\n\r\n            if (response.completed) {\r\n                // Form is completed, show completion message and buttons.\r\n                this.items = [];\r\n                this.completed = true;\r\n                this.completedOffline = !!response.offline;\r\n                this.completionPageContents = response.completionpagecontents;\r\n                this.siteAfterSubmit = response.siteaftersubmit;\r\n\r\n                CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'feedback' });\r\n\r\n                // Invalidate access information so user will see home page updated (continue form or completion messages).\r\n                await Promise.all([\r\n                    AddonModFeedback.invalidateFeedbackAccessInformationData(this.feedback!.id),\r\n                    AddonModFeedback.invalidateResumePageData(this.feedback!.id),\r\n                ]);\r\n\r\n                // If form has been submitted, the info has been already invalidated but we should update index view.\r\n                CoreEvents.trigger(AddonModFeedbackProvider.FORM_SUBMITTED, {\r\n                    feedbackId: this.feedback!.id,\r\n                    tab: 'overview',\r\n                    offline: this.completedOffline,\r\n                });\r\n\r\n                await this.fetchAccessData({\r\n                    cmId: this.cmId,\r\n                    readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\r\n                    siteId: this.currentSite.getId(),\r\n                });\r\n            } else if (typeof response.jumpto != 'number' || response.jumpto == this.currentPage) {\r\n                // Errors on questions, stay in page.\r\n            } else {\r\n                // Invalidate access information so user will see home page updated (continue form).\r\n                await AddonModFeedback.invalidateResumePageData(this.feedback!.id);\r\n\r\n                CoreEvents.trigger(AddonModFeedbackProvider.FORM_SUBMITTED, {\r\n                    feedbackId: this.feedback!.id,\r\n                    tab: 'overview',\r\n                    offline: this.completedOffline,\r\n                });\r\n\r\n                // Fetch the new page.\r\n                await this.fetchFeedbackPageData(response.jumpto);\r\n            }\r\n        } catch (message) {\r\n            CoreDomUtils.showErrorModalDefault(message, 'core.course.errorgetmodule', true);\r\n        } finally {\r\n            this.feedbackLoaded = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to link implemented features.\r\n     */\r\n    showAnalysis(): void {\r\n        if (this.fromIndex) {\r\n            // Previous page is the index page, go back.\r\n            CoreEvents.trigger(AddonModFeedbackProvider.FORM_SUBMITTED, {\r\n                feedbackId: this.feedback!.id,\r\n                tab: 'analysis',\r\n                offline: this.completedOffline,\r\n            });\r\n\r\n            CoreNavigator.back();\r\n\r\n            return;\r\n        }\r\n\r\n        CoreNavigator.navigateToSitePath(AddonModFeedbackModuleHandlerService.PAGE_NAME + `/${this.courseId}/${this.cmId}`, {\r\n            params: {\r\n                module: this.module,\r\n                tab: 'analysis',\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to go to the page after submit.\r\n     */\r\n    async continue(): Promise<void> {\r\n        if (!this.siteAfterSubmit) {\r\n            return CoreCourseHelper.getAndOpenCourse(this.courseId, {}, this.currentSite.getId());\r\n        }\r\n\r\n        const modal = await CoreDomUtils.showModalLoading();\r\n\r\n        try {\r\n            const treated = await CoreContentLinksHelper.handleLink(this.siteAfterSubmit);\r\n\r\n            if (!treated) {\r\n                await this.currentSite.openInBrowserWithAutoLoginIfSameSite(this.siteAfterSubmit);\r\n            }\r\n        } finally {\r\n            modal.dismiss();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component being destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.onlineObserver.unsubscribe();\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}