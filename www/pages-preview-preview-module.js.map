{"version":3,"sources":["./src/core/features/course/pages/preview/preview.html","./src/core/features/course/pages/preview/preview.module.ts","./src/core/features/course/pages/preview/preview.page.ts","./src/core/features/course/pages/preview/preview.scss"],"names":[],"mappings":"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","file":"pages-preview-preview-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>\\r\\n            <core-format-text [text]=\\\"course?.fullname\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"course?.id\\\"></core-format-text>\\r\\n        </h1>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!dataLoaded\\\" (ionRefresh)=\\\"refreshData($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"dataLoaded\\\">\\r\\n        <div *ngIf=\\\"courseImageUrl\\\" class=\\\"core-course-thumb-parallax\\\">\\r\\n            <div (click)=\\\"openCourse()\\\" class=\\\"core-course-thumb\\\">\\r\\n                <img [src]=\\\"courseImageUrl\\\" core-external-content alt=\\\"\\\"/>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"core-course-thumb-parallax-content\\\" *ngIf=\\\"course\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" (click)=\\\"openCourse()\\\" [attr.aria-label]=\\\"course.fullname\\\"\\r\\n                [detail]=\\\"!avoidOpenCourse && canAccessCourse\\\" [button]=\\\"!avoidOpenCourse && canAccessCourse\\\">\\r\\n                <ion-icon name=\\\"fas-graduation-cap\\\" fixed-width slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>\\r\\n                    <h2>\\r\\n                        <core-format-text [text]=\\\"course.fullname\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"course.id\\\">\\r\\n                        </core-format-text>\\r\\n                    </h2>\\r\\n                    <p *ngIf=\\\"course.categoryname\\\"><core-format-text [text]=\\\"course.categoryname\\\"\\r\\n                        contextLevel=\\\"coursecat\\\" [contextInstanceId]=\\\"course.categoryid\\\"></core-format-text></p>\\r\\n                    <p *ngIf=\\\"course.startdate\\\">\\r\\n                        {{course.startdate * 1000 | coreFormatDate:\\\"strftimedatefullshort\\\" }}\\r\\n                        <span *ngIf=\\\"course.enddate\\\"> - {{course.enddate * 1000 | coreFormatDate:\\\"strftimedatefullshort\\\" }}</span>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"course.summary\\\" detail=\\\"false\\\">\\r\\n                <ion-label>\\r\\n                    <core-format-text [text]=\\\"course.summary\\\" maxHeight=\\\"120\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"course.id\\\">\\r\\n                    </core-format-text>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ng-container class=\\\"ion-text-wrap\\\" *ngIf=\\\"course.contacts && course.contacts.length\\\">\\r\\n                <ion-item-divider>\\r\\n                    <ion-label>\\r\\n                        <h2>{{ 'core.teachers' | translate }}</h2>\\r\\n                    </ion-label>\\r\\n                </ion-item-divider>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let contact of course.contacts\\\" core-user-link [userId]=\\\"contact.id\\\"\\r\\n                    [courseId]=\\\"isEnrolled ? course.id : null\\\" [attr.aria-label]=\\\"'core.viewprofile' | translate\\\" detail=\\\"true\\\">\\r\\n                    <core-user-avatar [user]=\\\"contact\\\" slot=\\\"start\\\" [userId]=\\\"contact.id\\\"\\r\\n                        [courseId]=\\\"isEnrolled ? course.id : null\\\">\\r\\n                    </core-user-avatar>\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{contact.fullname}}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <core-spacer></core-spacer>\\r\\n            </ng-container>\\r\\n\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"course.customfields\\\">\\r\\n                <ion-label>\\r\\n                <ng-container *ngFor=\\\"let field of course.customfields\\\">\\r\\n                    <div *ngIf=\\\"field.value\\\"\\r\\n                        class=\\\"core-customfield core-customfield_{{field.type}} core-customfield_{{field.shortname}}\\\">\\r\\n                        <span class=\\\"core-customfieldname\\\">\\r\\n                            <core-format-text [text]=\\\"field.name\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"course.id\\\">\\r\\n                            </core-format-text>\\r\\n                        </span><span class=\\\"core-customfieldseparator\\\">: </span>\\r\\n                        <span class=\\\"core-customfieldvalue\\\">\\r\\n                            <core-format-text [text]=\\\"field.value\\\" maxHeight=\\\"120\\\" contextLevel=\\\"course\\\"\\r\\n                            [contextInstanceId]=\\\"course.id\\\">\\r\\n                            </core-format-text>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <div *ngIf=\\\"!isEnrolled\\\" detail=\\\"false\\\">\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let instance of selfEnrolInstances\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ instance.name }}</p>\\r\\n                        <ion-button expand=\\\"block\\\" class=\\\"ion-margin-top\\\" (click)=\\\"selfEnrolClicked(instance.id)\\\">\\r\\n                            {{ 'core.courses.enrolme' | translate }}\\r\\n                        </ion-button>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </div>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"!isEnrolled && paypalEnabled\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.courses.paypalaccepted' | translate }}</h2>\\r\\n                    <p>{{ 'core.paymentinstant' | translate }}</p>\\r\\n                    <ion-button expand=\\\"block\\\" class=\\\"ion-margin-top\\\" (click)=\\\"paypalEnrol()\\\" *ngIf=\\\"isMobile\\\">\\r\\n                        {{ 'core.courses.sendpaymentbutton' | translate }}\\r\\n                    </ion-button>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"!isEnrolled && !selfEnrolInstances.length && !paypalEnabled\\\">\\r\\n                <ion-label><p>{{ 'core.courses.notenrollable' | translate }}</p></ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"canAccessCourse && downloadCourseEnabled\\\" (click)=\\\"prefetchCourse()\\\" detail=\\\"false\\\"\\r\\n                    [attr.aria-label]=\\\"prefetchCourseData.statusTranslatable | translate\\\" button>\\r\\n                <ion-icon *ngIf=\\\"(prefetchCourseData.status != statusDownloaded) && !prefetchCourseData.loading\\\"\\r\\n                    [name]=\\\"prefetchCourseData.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\">\\r\\n                </ion-icon>\\r\\n                <ion-icon *ngIf=\\\"(prefetchCourseData.status == statusDownloaded) && !prefetchCourseData.loading\\\"\\r\\n                    slot=\\\"start\\\" [name]=\\\"prefetchCourseData.icon\\\" color=\\\"success\\\"\\r\\n                    aria-hidden=\\\"true\\\" role=\\\"status\\\">\\r\\n                </ion-icon>\\r\\n                <ion-spinner *ngIf=\\\"prefetchCourseData.loading\\\" slot=\\\"start\\\"\\r\\n                    [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\r\\n                <ion-label>\\r\\n                    <h2 *ngIf=\\\"prefetchCourseData.status != statusDownloaded\\\">{{ 'core.course.downloadcourse' | translate }}</h2>\\r\\n                    <h2 *ngIf=\\\"prefetchCourseData.status == statusDownloaded\\\">{{ 'core.course.refreshcourse' | translate }}</h2>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item button (click)=\\\"openCourse()\\\" [attr.aria-label]=\\\"course.fullname\\\" *ngIf=\\\"!avoidOpenCourse && canAccessCourse\\\"\\r\\n                detail=\\\"true\\\">\\r\\n                <ion-icon name=\\\"fas-briefcase\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label><h2>{{ 'core.course.contents' | translate }}</h2></ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item [href]=\\\"courseUrl\\\" core-link [attr.aria-label]=\\\"course.fullname\\\" button detail=\\\"false\\\">\\r\\n                <ion-icon name=\\\"fas-external-link-alt\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label><h2>{{ 'core.openinbrowser' | translate }}</h2></ion-label>\\r\\n            </ion-item>\\r\\n        </div>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreCoursePreviewPage } from './preview.page';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CoreCoursePreviewPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n    ],\r\n    declarations: [\r\n        CoreCoursePreviewPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class CoreCoursePreviewPageModule { }\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy, NgZone, OnInit } from '@angular/core';\r\nimport { IonRefresher } from '@ionic/angular';\r\nimport { CoreApp } from '@services/app';\r\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\r\nimport { CoreSites } from '@services/sites';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreTextUtils } from '@services/utils/text';\r\nimport {\r\n    CoreCourseEnrolmentMethod,\r\n    CoreCourseGetCoursesData,\r\n    CoreCourses,\r\n    CoreCourseSearchedData,\r\n    CoreCoursesProvider,\r\n    CoreEnrolledCourseData,\r\n} from '@features/courses/services/courses';\r\nimport { CoreCourseOptionsDelegate } from '@features/course/services/course-options-delegate';\r\nimport { CoreCourse, CoreCourseProvider } from '@features/course/services/course';\r\nimport { CoreCourseHelper, CorePrefetchStatusInfo } from '@features/course/services/course-helper';\r\nimport { Translate } from '@singletons';\r\nimport { CoreConstants } from '@/core/constants';\r\nimport { CoreCoursesSelfEnrolPasswordComponent } from '../../../courses/components/self-enrol-password/self-enrol-password';\r\nimport { CoreNavigator } from '@services/navigator';\r\n\r\n/**\r\n * Page that allows \"previewing\" a course and enrolling in it if enabled and not enrolled.\r\n */\r\n@Component({\r\n    selector: 'page-core-course-preview',\r\n    templateUrl: 'preview.html',\r\n    styleUrls: ['preview.scss'],\r\n})\r\nexport class CoreCoursePreviewPage implements OnInit, OnDestroy {\r\n\r\n    course?: CoreCourseSearchedData;\r\n    isEnrolled = false;\r\n    canAccessCourse = true;\r\n    selfEnrolInstances: CoreCourseEnrolmentMethod[] = [];\r\n    paypalEnabled = false;\r\n    dataLoaded = false;\r\n    avoidOpenCourse = false;\r\n    prefetchCourseData: CorePrefetchStatusInfo = {\r\n        icon: '',\r\n        statusTranslatable: 'core.loading',\r\n        status: '',\r\n        loading: true,\r\n    };\r\n\r\n    statusDownloaded = CoreConstants.DOWNLOADED;\r\n\r\n    downloadCourseEnabled: boolean;\r\n    courseUrl = '';\r\n    courseImageUrl?: string;\r\n    isMobile: boolean;\r\n\r\n    protected isGuestEnabled = false;\r\n    protected useGuestAccess = false;\r\n    protected guestInstanceId?: number;\r\n    protected enrolmentMethods: CoreCourseEnrolmentMethod[] = [];\r\n    protected waitStart = 0;\r\n    protected enrolUrl = '';\r\n    protected paypalReturnUrl = '';\r\n    protected pageDestroyed = false;\r\n    protected courseStatusObserver?: CoreEventObserver;\r\n\r\n    constructor(\r\n        protected zone: NgZone,\r\n    ) {\r\n        this.isMobile = CoreApp.isMobile();\r\n        this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\r\n\r\n        if (this.downloadCourseEnabled) {\r\n            // Listen for status change in course.\r\n            this.courseStatusObserver = CoreEvents.on(CoreEvents.COURSE_STATUS_CHANGED, (data) => {\r\n                if (data.courseId == this.course!.id || data.courseId == CoreCourseProvider.ALL_COURSES_CLEARED) {\r\n                    this.updateCourseStatus(data.status);\r\n                }\r\n            }, CoreSites.getCurrentSiteId());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    async ngOnInit(): Promise<void> {\r\n        this.course = CoreNavigator.getRouteParam('course');\r\n        this.avoidOpenCourse = !!CoreNavigator.getRouteBooleanParam('avoidOpenCourse');\r\n\r\n        if (!this.course) {\r\n            CoreNavigator.back();\r\n\r\n            return;\r\n        }\r\n\r\n        const currentSite = CoreSites.getCurrentSite();\r\n        const currentSiteUrl = currentSite && currentSite.getURL();\r\n\r\n        this.paypalEnabled = this.course!.enrollmentmethods?.indexOf('paypal') > -1;\r\n        this.enrolUrl = CoreTextUtils.concatenatePaths(currentSiteUrl!, 'enrol/index.php?id=' + this.course!.id);\r\n        this.courseUrl = CoreTextUtils.concatenatePaths(currentSiteUrl!, 'course/view.php?id=' + this.course!.id);\r\n        this.paypalReturnUrl = CoreTextUtils.concatenatePaths(currentSiteUrl!, 'enrol/paypal/return.php');\r\n        if (this.course.overviewfiles.length > 0) {\r\n            this.courseImageUrl = this.course.overviewfiles[0].fileurl;\r\n        }\r\n\r\n        try {\r\n            await this.getCourse();\r\n        } finally {\r\n            if (this.downloadCourseEnabled) {\r\n\r\n                // Determine course prefetch icon.\r\n                this.prefetchCourseData = await CoreCourseHelper.getCourseStatusIconAndTitle(this.course!.id);\r\n\r\n                if (this.prefetchCourseData.loading) {\r\n                    // Course is being downloaded. Get the download promise.\r\n                    const promise = CoreCourseHelper.getCourseDownloadPromise(this.course!.id);\r\n                    if (promise) {\r\n                        // There is a download promise. If it fails, show an error.\r\n                        promise.catch((error) => {\r\n                            if (!this.pageDestroyed) {\r\n                                CoreDomUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        // No download, this probably means that the app was closed while downloading. Set previous status.\r\n                        CoreCourse.setCoursePreviousStatus(this.course!.id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the user can access as guest.\r\n     *\r\n     * @return Promise resolved if can access as guest, rejected otherwise. Resolve param indicates if\r\n     *         password is required for guest access.\r\n     */\r\n    protected async canAccessAsGuest(): Promise<boolean> {\r\n        if (!this.isGuestEnabled) {\r\n            throw Error('Guest access is not enabled.');\r\n        }\r\n\r\n        // Search instance ID of guest enrolment method.\r\n        const method = this.enrolmentMethods.find((method) => method.type == 'guest');\r\n        this.guestInstanceId = method?.id;\r\n\r\n        if (this.guestInstanceId) {\r\n            const info = await CoreCourses.getCourseGuestEnrolmentInfo(this.guestInstanceId);\r\n            if (!info.status) {\r\n                // Not active, reject.\r\n                throw Error('Guest access is not enabled.');\r\n            }\r\n\r\n            return info.passwordrequired;\r\n        }\r\n\r\n        throw Error('Guest enrollment method not found.');\r\n    }\r\n\r\n    /**\r\n     * Convenience function to get course. We use this to determine if a user can see the course or not.\r\n     */\r\n    protected async getCourse(): Promise<void> {\r\n        // Get course enrolment methods.\r\n        this.selfEnrolInstances = [];\r\n\r\n        try {\r\n            this.enrolmentMethods = await CoreCourses.getCourseEnrolmentMethods(this.course!.id);\r\n\r\n            this.enrolmentMethods.forEach((method) => {\r\n                if (method.type === 'self') {\r\n                    this.selfEnrolInstances.push(method);\r\n                } else if (method.type === 'guest') {\r\n                    this.isGuestEnabled = true;\r\n                }\r\n            });\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting enrolment data');\r\n        }\r\n\r\n        try {\r\n            let course: CoreEnrolledCourseData | CoreCourseGetCoursesData;\r\n\r\n            // Check if user is enrolled in the course.\r\n            try {\r\n                course = await CoreCourses.getUserCourse(this.course!.id);\r\n                this.isEnrolled = true;\r\n            } catch {\r\n                // The user is not enrolled in the course. Use getCourses to see if it's an admin/manager and can see the course.\r\n                this.isEnrolled = false;\r\n\r\n                course = await CoreCourses.getCourse(this.course!.id);\r\n            }\r\n\r\n            // Success retrieving the course, we can assume the user has permissions to view it.\r\n            this.course!.fullname = course.fullname || this.course!.fullname;\r\n            this.course!.summary = course.summary || this.course!.summary;\r\n            this.canAccessCourse = true;\r\n            this.useGuestAccess = false;\r\n        } catch {\r\n            // The user is not an admin/manager. Check if we can provide guest access to the course.\r\n            try {\r\n                this.canAccessCourse = !(await this.canAccessAsGuest());\r\n                this.useGuestAccess = this.canAccessCourse;\r\n            } catch {\r\n                this.canAccessCourse = false;\r\n            }\r\n        }\r\n\r\n        if (!CoreSites.getCurrentSite()?.isVersionGreaterEqualThan('3.7')) {\r\n            try {\r\n                const available = await CoreCourses.isGetCoursesByFieldAvailableInSite();\r\n                if (available) {\r\n                    const course = await CoreCourses.getCourseByField('id', this.course!.id);\r\n\r\n                    this.course!.customfields = course.customfields;\r\n                }\r\n            } catch {\r\n                // Ignore errors.\r\n            }\r\n        }\r\n\r\n        this.dataLoaded = true;\r\n    }\r\n\r\n    /**\r\n     * Open the course.\r\n     */\r\n    openCourse(): void {\r\n        if (!this.canAccessCourse || this.avoidOpenCourse) {\r\n            // Course cannot be opened or we are avoiding opening because we accessed from inside a course.\r\n            return;\r\n        }\r\n\r\n        CoreCourseHelper.openCourse(this.course!, { isGuest: this.useGuestAccess });\r\n    }\r\n\r\n    /**\r\n     * Enrol using PayPal.\r\n     */\r\n    async paypalEnrol(): Promise<void> {\r\n        // We cannot control browser in browser.\r\n        if (!this.isMobile || !CoreSites.getCurrentSite()) {\r\n            return;\r\n        }\r\n\r\n        let hasReturnedFromPaypal = false;\r\n\r\n        const urlLoaded = (event: InAppBrowserEvent): void => {\r\n            if (event.url.indexOf(this.paypalReturnUrl) != -1) {\r\n                hasReturnedFromPaypal = true;\r\n            } else if (event.url.indexOf(this.courseUrl) != -1 && hasReturnedFromPaypal) {\r\n                // User reached the course index page after returning from PayPal, close the InAppBrowser.\r\n                inAppClosed();\r\n                window.close();\r\n            }\r\n        };\r\n        const inAppClosed = (): void => {\r\n            // InAppBrowser closed, refresh data.\r\n            unsubscribeAll();\r\n\r\n            if (!this.dataLoaded) {\r\n                return;\r\n            }\r\n            this.dataLoaded = false;\r\n            this.refreshData();\r\n        };\r\n        const unsubscribeAll = (): void => {\r\n            inAppLoadSubscription?.unsubscribe();\r\n            inAppExitSubscription?.unsubscribe();\r\n        };\r\n\r\n        // Open the enrolment page in InAppBrowser.\r\n        const window = await CoreSites.getCurrentSite()!.openInAppWithAutoLogin(this.enrolUrl);\r\n\r\n        // Observe loaded pages in the InAppBrowser to check if the enrol process has ended.\r\n        const inAppLoadSubscription = window.on('loadstart').subscribe((event) => {\r\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\r\n            this.zone.run(() => urlLoaded(event));\r\n        });\r\n        // Observe window closed.\r\n        const inAppExitSubscription = window.on('exit').subscribe(() => {\r\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\r\n            this.zone.run(inAppClosed);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * User clicked in a self enrol button.\r\n     *\r\n     * @param instanceId The instance ID of the enrolment method.\r\n     */\r\n    async selfEnrolClicked(instanceId: number): Promise<void> {\r\n        try {\r\n            await CoreDomUtils.showConfirm(Translate.instant('core.courses.confirmselfenrol'));\r\n\r\n            this.selfEnrolInCourse('', instanceId);\r\n        } catch {\r\n            // User cancelled.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Self enrol in a course.\r\n     *\r\n     * @param password Password to use.\r\n     * @param instanceId The instance ID.\r\n     * @return Promise resolved when self enrolled.\r\n     */\r\n    async selfEnrolInCourse(password: string, instanceId: number): Promise<void> {\r\n        const modal = await CoreDomUtils.showModalLoading('core.loading', true);\r\n\r\n        try {\r\n            await CoreCourses.selfEnrol(this.course!.id, password, instanceId);\r\n\r\n            // Close modal and refresh data.\r\n            this.isEnrolled = true;\r\n            this.dataLoaded = false;\r\n\r\n            // Sometimes the list of enrolled courses takes a while to be updated. Wait for it.\r\n            await this.waitForEnrolled(true);\r\n\r\n            await this.refreshData().finally(() => {\r\n                // My courses have been updated, trigger event.\r\n                CoreEvents.trigger(CoreCoursesProvider.EVENT_MY_COURSES_UPDATED, {\r\n                    courseId: this.course!.id,\r\n                    course: this.course,\r\n                    action: CoreCoursesProvider.ACTION_ENROL,\r\n                }, CoreSites.getCurrentSiteId());\r\n            });\r\n\r\n            this.openCourse();\r\n\r\n            modal?.dismiss();\r\n        } catch (error) {\r\n            modal?.dismiss();\r\n\r\n            if (error && error.errorcode === CoreCoursesProvider.ENROL_INVALID_KEY) {\r\n                // Initialize the self enrol modal.\r\n                // Invalid password, show the modal to enter the password.\r\n                const modalData = await CoreDomUtils.openModal<string>(\r\n                    {\r\n                        component: CoreCoursesSelfEnrolPasswordComponent,\r\n                        componentProps: { password },\r\n                    },\r\n                );\r\n\r\n                if (typeof modalData != 'undefined') {\r\n                    this.selfEnrolInCourse(modalData, instanceId);\r\n\r\n                    return;\r\n                }\r\n\r\n                if (!password) {\r\n                    // No password entered, don't show error.\r\n                    return;\r\n                }\r\n            }\r\n\r\n            CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorselfenrol', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param refresher The refresher if this was triggered by a Pull To Refresh.\r\n     */\r\n    async refreshData(refresher?: IonRefresher): Promise<void> {\r\n        const promises: Promise<void>[] = [];\r\n\r\n        promises.push(CoreCourses.invalidateUserCourses());\r\n        promises.push(CoreCourses.invalidateCourse(this.course!.id));\r\n        promises.push(CoreCourses.invalidateCourseEnrolmentMethods(this.course!.id));\r\n        promises.push(CoreCourseOptionsDelegate.clearAndInvalidateCoursesOptions(this.course!.id));\r\n        if (CoreSites.getCurrentSite() && !CoreSites.getCurrentSite()!.isVersionGreaterEqualThan('3.7')) {\r\n            promises.push(CoreCourses.invalidateCoursesByField('id', this.course!.id));\r\n        }\r\n        if (this.guestInstanceId) {\r\n            promises.push(CoreCourses.invalidateCourseGuestEnrolmentInfo(this.guestInstanceId));\r\n        }\r\n\r\n        await Promise.all(promises).finally(() => this.getCourse()).finally(() => {\r\n            refresher?.complete();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update the course status icon and title.\r\n     *\r\n     * @param status Status to show.\r\n     */\r\n    protected updateCourseStatus(status: string): void {\r\n        const statusData = CoreCourseHelper.getCoursePrefetchStatusInfo(status);\r\n\r\n        this.prefetchCourseData.status = statusData.status;\r\n        this.prefetchCourseData.icon = statusData.icon;\r\n        this.prefetchCourseData.statusTranslatable = statusData.statusTranslatable;\r\n        this.prefetchCourseData.loading = statusData.loading;\r\n    }\r\n\r\n    /**\r\n     * Wait for the user to be enrolled in the course.\r\n     *\r\n     * @param first If it's the first call (true) or it's a recursive call (false).\r\n     * @return Promise resolved when enrolled or timeout.\r\n     */\r\n    protected async waitForEnrolled(first?: boolean): Promise<void> {\r\n        if (first) {\r\n            this.waitStart = Date.now();\r\n        }\r\n\r\n        // Check if user is enrolled in the course.\r\n        try {\r\n            CoreCourses.invalidateUserCourses();\r\n        } catch {\r\n            // Ignore errors.\r\n        }\r\n\r\n        try {\r\n            await CoreCourses.getUserCourse(this.course!.id);\r\n        } catch {\r\n            // Not enrolled, wait a bit and try again.\r\n            if (this.pageDestroyed || (Date.now() - this.waitStart > 60000)) {\r\n                // Max time reached or the user left the view, stop.\r\n                return;\r\n            }\r\n\r\n            return new Promise((resolve): void => {\r\n                setTimeout(async () => {\r\n                    if (!this.pageDestroyed) {\r\n                        // Wait again.\r\n                        await this.waitForEnrolled();\r\n                    }\r\n                    resolve();\r\n                }, 5000);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prefetch the course.\r\n     */\r\n    async prefetchCourse(): Promise<void> {\r\n        try {\r\n            await CoreCourseHelper.confirmAndPrefetchCourse(this.prefetchCourseData, this.course!, {\r\n                isGuest: this.useGuestAccess,\r\n            });\r\n        } catch (error) {\r\n            if (!this.pageDestroyed) {\r\n                CoreDomUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.pageDestroyed = true;\r\n\r\n        if (this.courseStatusObserver) {\r\n            this.courseStatusObserver.off();\r\n        }\r\n    }\r\n\r\n}\r\n","export default \":host {\\n  --scroll-factor: 0.5;\\n  --translate-z: calc(-2 * var(--scroll-factor))px;\\n  --scale: calc(1 + var(--scroll-factor) * 2);\\n  perspective: 1px;\\n  perspective-origin: center top;\\n  transform-style: preserve-3d;\\n}\\n:host .core-course-thumb {\\n  overflow: hidden;\\n  text-align: center;\\n  cursor: pointer;\\n  pointer-events: auto;\\n  transform-origin: center top;\\n  /**\\n   * Calculated with scroll-factor: 0.5;\\n   * translate-z: -2 * $scroll-factor px;\\n   * scale: 1 + $scroll-factor * 2;\\n   */\\n}\\n:host .core-customfieldvalue core-format-text {\\n  display: inline;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL2NvdXJzZS9wYWdlcy9wcmV2aWV3L3ByZXZpZXcuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9CQUFBO0VBQ0EsZ0RBQUE7RUFDQSwyQ0FBQTtFQUVBLGdCQUFBO0VBQ0EsOEJBQUE7RUFDQSw0QkFBQTtBQUFKO0FBa0JJO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxvQkFBQTtFQUNBLDRCQUFBO0VBRUE7Ozs7SUFBQTtBQWJSO0FBc0JJO0VBQ0ksZUFBQTtBQXBCUiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy9jb3Vyc2UvcGFnZXMvcHJldmlldy9wcmV2aWV3LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICAtLXNjcm9sbC1mYWN0b3I6IDAuNTtcclxuICAgIC0tdHJhbnNsYXRlLXo6IGNhbGMoLTIgKiB2YXIoLS1zY3JvbGwtZmFjdG9yKSlweDtcclxuICAgIC0tc2NhbGU6IGNhbGMoMSArIHZhcigtLXNjcm9sbC1mYWN0b3IpICogMik7XHJcblxyXG4gICAgcGVyc3BlY3RpdmU6IDFweDtcclxuICAgIHBlcnNwZWN0aXZlLW9yaWdpbjogY2VudGVyIHRvcDtcclxuICAgIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XHJcblxyXG4gICAgLy8gQHRvZG8gVGhpcyBwYXJhbGxheCBlZmZlY3QgY2F1c2VkIHRoZSBpbWFnZSB0byBiZSBzY2FsZWQgZHVyaW5nIHBhZ2UgdHJhbnNpdGlvbnMsXHJcbiAgICAvLyBhbmQgaW4gc29tZSBkZXZpY2VzIGl0IHNlZW1zIGxpa2UgdGhlIHByb2JsZW0gcGVyc2lzdGVkIGV2ZW4gYWZ0ZXIgdGhlIHRyYW5zaXRpb24uXHJcbiAgICAvLyBXZSBzaG91bGQgZGVjaWRlIHdoZXRoZXIgd2Ugd2FudCB0byBrZWVwIHRoaXMgcGFyYWxsYXggb3Igbm90LCBhbmQgaWYgd2UgZG8gZml4XHJcbiAgICAvLyB0aGUgcHJvYmxlbSBvciBmaW5kIGFuIGFsdGVybmF0aXZlIGltcGxlbWVudGF0aW9uLiBGb3Igbm93LCBpdCdzIGRpc2FibGVkLlxyXG5cclxuICAgIC8vIC5jb3JlLWNvdXJzZS10aHVtYi1wYXJhbGxheC1jb250ZW50IHtcclxuICAgIC8vICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XHJcbiAgICAvLyAgICAgLXdlYmtpdC1maWx0ZXI6IGRyb3Atc2hhZG93KDBweCAtM3B4IDNweCByZ2JhKHZhcigtLWRyb3Atc2hhZG93KSkpO1xyXG4gICAgLy8gICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMHB4IC0zcHggM3B4IHJnYmEodmFyKC0tZHJvcC1zaGFkb3cpKSk7XHJcbiAgICAvLyB9XHJcbiAgICAvLyAuY29yZS1jb3Vyc2UtdGh1bWItcGFyYWxsYXgge1xyXG4gICAgLy8gICAgIGhlaWdodDogNDB2dztcclxuICAgIC8vICAgICBtYXgtaGVpZ2h0OiAzNXZoO1xyXG4gICAgLy8gICAgIHotaW5kZXg6IC0xO1xyXG4gICAgLy8gICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAvLyB9XHJcbiAgICAuY29yZS1jb3Vyc2UtdGh1bWIge1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogYXV0bztcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgdG9wO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBDYWxjdWxhdGVkIHdpdGggc2Nyb2xsLWZhY3RvcjogMC41O1xyXG4gICAgICAgICAqIHRyYW5zbGF0ZS16OiAtMiAqICRzY3JvbGwtZmFjdG9yIHB4O1xyXG4gICAgICAgICAqIHNjYWxlOiAxICsgJHNjcm9sbC1mYWN0b3IgKiAyO1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIC8vIHRyYW5zZm9ybTogdHJhbnNsYXRlWigtMXB4KSBzY2FsZSgyKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLmNvcmUtY3VzdG9tZmllbGR2YWx1ZSBjb3JlLWZvcm1hdC10ZXh0IHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICB9XHJcbn1cclxuIl19 */\";"],"sourceRoot":"webpack:///"}