{"version":3,"sources":["./src/addons/mod/feedback/pages/nonrespondents/nonrespondents.html","./src/addons/mod/feedback/pages/nonrespondents/nonrespondents.module.ts","./src/addons/mod/feedback/pages/nonrespondents/nonrespondents.ts"],"names":[],"mappings":"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","file":"pages-nonrespondents-nonrespondents-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>{{ 'addon.mod_feedback.responses' |translate }}</h1>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshFeedback($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <ion-list class=\\\"ion-no-margin\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"groupInfo && (groupInfo.separateGroups || groupInfo.visibleGroups)\\\">\\r\\n                <ion-label id=\\\"addon-feedback-groupslabel\\\">\\r\\n                    <ng-container *ngIf=\\\"groupInfo.separateGroups\\\">{{'core.groupsseparate' | translate }}</ng-container>\\r\\n                    <ng-container *ngIf=\\\"groupInfo.visibleGroups\\\">{{'core.groupsvisible' | translate }}</ng-container>\\r\\n                </ion-label>\\r\\n                <ion-select [(ngModel)]=\\\"selectedGroup\\\" (ionChange)=\\\"loadAttempts(selectedGroup)\\\"\\r\\n                    aria-labelledby=\\\"addon-feedback-groupslabel\\\" interface=\\\"action-sheet\\\"\\r\\n                    [interfaceOptions]=\\\"{header: 'core.group' | translate}\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let groupOpt of groupInfo.groups\\\" [value]=\\\"groupOpt.id\\\">\\r\\n                        {{groupOpt.name}}\\r\\n                    </ion-select-option>\\r\\n                </ion-select>\\r\\n            </ion-item>\\r\\n\\r\\n            <ion-item-divider>\\r\\n                <ion-label><h2>{{ 'addon.mod_feedback.non_respondents_students' | translate : {$a: total } }}</h2></ion-label>\\r\\n            </ion-item-divider>\\r\\n            <ng-container *ngIf=\\\"total > 0\\\">\\r\\n                <ion-item *ngFor=\\\"let user of users\\\" class=\\\"ion-text-wrap\\\">\\r\\n                    <core-user-avatar [user]=\\\"user\\\" slot=\\\"start\\\"></core-user-avatar>\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ user.fullname }}</p>\\r\\n                        <p>\\r\\n                            <ion-badge color=\\\"success\\\" *ngIf=\\\"user.started\\\">\\r\\n                                {{ 'addon.mod_feedback.started' | translate}}\\r\\n                            </ion-badge>\\r\\n                            <ion-badge color=\\\"danger\\\" *ngIf=\\\"!user.started\\\">\\r\\n                                {{ 'addon.mod_feedback.not_started' | translate}}\\r\\n                            </ion-badge>\\r\\n                        </p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n\\r\\n            <core-infinite-loading [enabled]=\\\"canLoadMore\\\" (action)=\\\"loadAttempts(undefined, $event)\\\" [error]=\\\"loadMoreError\\\">\\r\\n            </core-infinite-loading>\\r\\n        </ion-list>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddonModFeedbackNonRespondentsPage } from './nonrespondents';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonModFeedbackNonRespondentsPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonModFeedbackNonRespondentsPage,\r\n    ],\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonModFeedbackNonRespondentsPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { IonRefresher } from '@ionic/angular';\r\nimport { CoreGroupInfo, CoreGroups } from '@services/groups';\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreUtils } from '@services/utils/utils';\r\nimport { AddonModFeedback, AddonModFeedbackWSFeedback } from '../../services/feedback';\r\nimport { AddonModFeedbackHelper, AddonModFeedbackNonRespondent } from '../../services/feedback-helper';\r\n\r\n/**\r\n * Page that displays feedback non respondents.\r\n */\r\n@Component({\r\n    selector: 'page-addon-mod-feedback-nonrespondents',\r\n    templateUrl: 'nonrespondents.html',\r\n})\r\nexport class AddonModFeedbackNonRespondentsPage implements OnInit {\r\n\r\n    protected cmId!: number;\r\n    protected courseId!: number;\r\n    protected feedback?: AddonModFeedbackWSFeedback;\r\n    protected page = 0;\r\n\r\n    selectedGroup!: number;\r\n    groupInfo?: CoreGroupInfo;\r\n    users: AddonModFeedbackNonRespondent[] = [];\r\n    total = 0;\r\n    canLoadMore = false;\r\n    loaded = false;\r\n    loadMoreError = false;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    ngOnInit(): void {\r\n        this.cmId = CoreNavigator.getRouteNumberParam('cmId')!;\r\n        this.courseId = CoreNavigator.getRouteNumberParam('courseId')!;\r\n        this.selectedGroup = CoreNavigator.getRouteNumberParam('group') || 0;\r\n\r\n        this.fetchData();\r\n    }\r\n\r\n    /**\r\n     * Fetch all the data required for the view.\r\n     *\r\n     * @param refresh Empty events array first.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchData(refresh: boolean = false): Promise<void> {\r\n        this.page = 0;\r\n        this.total = 0;\r\n        this.users = [];\r\n\r\n        try {\r\n            this.feedback = await AddonModFeedback.getFeedback(this.courseId, this.cmId);\r\n\r\n            this.groupInfo = await CoreGroups.getActivityGroupInfo(this.cmId);\r\n\r\n            this.selectedGroup = CoreGroups.validateGroupId(this.selectedGroup, this.groupInfo);\r\n\r\n            await this.loadGroupUsers(this.selectedGroup);\r\n        } catch (message) {\r\n            CoreDomUtils.showErrorModalDefault(message, 'core.course.errorgetmodule', true);\r\n\r\n            if (!refresh) {\r\n                // Some call failed on first fetch, go back.\r\n                CoreNavigator.back();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load Group responses.\r\n     *\r\n     * @param groupId If defined it will change group if not, it will load more users for the same group.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async loadGroupUsers(groupId?: number): Promise<void> {\r\n        this.loadMoreError = false;\r\n\r\n        if (typeof groupId == 'undefined') {\r\n            this.page++;\r\n        } else {\r\n            this.selectedGroup = groupId;\r\n            this.page = 0;\r\n            this.total = 0;\r\n            this.users = [];\r\n            this.loaded = false;\r\n        }\r\n\r\n        try {\r\n            const response = await AddonModFeedbackHelper.getNonRespondents(this.feedback!.id, {\r\n                groupId: this.selectedGroup,\r\n                page: this.page,\r\n                cmId: this.cmId,\r\n            });\r\n\r\n            this.total = response.total;\r\n            if (this.users.length < response.total) {\r\n                this.users = this.users.concat(response.users);\r\n            }\r\n\r\n            this.canLoadMore = this.users.length < response.total;\r\n        } catch (error) {\r\n            this.loadMoreError = true;\r\n\r\n            throw error;\r\n        } finally {\r\n            this.loaded = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change selected group or load more users.\r\n     *\r\n     * @param groupId Group ID selected. If not defined, it will load more users.\r\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\r\n     */\r\n    async loadAttempts(groupId?: number, infiniteComplete?: () => void): Promise<void> {\r\n        try {\r\n            await this.loadGroupUsers(groupId);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\r\n        } finally {\r\n            infiniteComplete && infiniteComplete();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the attempts.\r\n     *\r\n     * @param refresher Refresher.\r\n     */\r\n    async refreshFeedback(refresher: IonRefresher): Promise<void> {\r\n        try {\r\n            const promises: Promise<void>[] = [];\r\n\r\n            promises.push(CoreGroups.invalidateActivityGroupInfo(this.cmId));\r\n            if (this.feedback) {\r\n                promises.push(AddonModFeedback.invalidateNonRespondentsData(this.feedback.id));\r\n            }\r\n\r\n            await CoreUtils.ignoreErrors(Promise.all(promises));\r\n\r\n            await this.fetchData(true);\r\n        } finally {\r\n            refresher.complete();\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}