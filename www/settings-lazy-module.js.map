{"version":3,"sources":["./src/core/features/settings/pages/index/index.html","./src/core/features/settings/pages/index/index.ts","./src/core/features/settings/settings-lazy.module.ts"],"names":[],"mappings":"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","file":"settings-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <h1>{{ 'core.settings.appsettings' | translate }}</h1>\\r\\n        <ion-buttons slot=\\\"end\\\"></ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-split-view>\\r\\n        <ion-list>\\r\\n            <ion-item *ngFor=\\\"let section of sections.items\\\" [attr.aria-current]=\\\"sections.getItemAriaCurrent(section)\\\" button\\r\\n                detail=\\\"true\\\" (click)=\\\"sections.select(section)\\\">\\r\\n                <ion-icon [name]=\\\"section.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ section.name | translate }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-list>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Params } from '@angular/router';\r\n\r\nimport { CorePageItemsListManager } from '@classes/page-items-list-manager';\r\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\r\nimport { CoreConstants } from '@/core/constants';\r\nimport { SHAREDFILES_PAGE_NAME } from '@features/sharedfiles/sharedfiles.module';\r\nimport { CoreApp } from '@services/app';\r\n\r\n@Component({\r\n    selector: 'page-core-settings-index',\r\n    templateUrl: 'index.html',\r\n})\r\nexport class CoreSettingsIndexPage implements AfterViewInit, OnDestroy {\r\n\r\n    sections: CoreSettingsSectionsManager = new CoreSettingsSectionsManager(CoreSettingsIndexPage);\r\n\r\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    ngAfterViewInit(): void {\r\n        this.sections.setItems(this.getSections());\r\n        this.sections.start(this.splitView);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.sections.destroy();\r\n    }\r\n\r\n    /**\r\n     * Get the sections.\r\n     *\r\n     * @returns Sections.\r\n     */\r\n    protected getSections(): CoreSettingsSection[] {\r\n        const sections: CoreSettingsSection[] = [\r\n            {\r\n                name: 'core.settings.general',\r\n                path: 'general',\r\n                icon: 'fas-wrench',\r\n            },\r\n            {\r\n                name: 'core.settings.spaceusage',\r\n                path: 'spaceusage',\r\n                icon: 'fas-tasks',\r\n            },\r\n            {\r\n                name: 'core.settings.synchronization',\r\n                path: 'sync',\r\n                icon: CoreConstants.ICON_SYNC,\r\n            },\r\n        ];\r\n\r\n        if (CoreApp.isIOS()) {\r\n            sections.push({\r\n                name: 'core.sharedfiles.sharedfiles',\r\n                path: SHAREDFILES_PAGE_NAME + '/list/root',\r\n                icon: 'fas-folder',\r\n                params: { manage: true },\r\n            });\r\n        }\r\n\r\n        sections.push({\r\n            name: 'core.settings.about',\r\n            path: 'about',\r\n            icon: 'fas-id-card',\r\n        });\r\n\r\n        return sections;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Helper class to manage sections.\r\n */\r\nclass CoreSettingsSectionsManager extends CorePageItemsListManager<CoreSettingsSection> {\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    protected getItemPath(section: CoreSettingsSection): string {\r\n        return section.path;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    protected getItemQueryParams(section: CoreSettingsSection): Params {\r\n        return section.params || {};\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Settings section.\r\n */\r\nexport type CoreSettingsSection = {\r\n    name: string;\r\n    path: string;\r\n    icon: string;\r\n    params?: Params;\r\n};\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { conditionalRoutes } from '@/app/app-routing.module';\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreScreen } from '@services/screen';\r\n\r\nimport { CoreSettingsIndexPage } from './pages/index';\r\nimport { SHAREDFILES_PAGE_NAME } from '@features/sharedfiles/sharedfiles.module';\r\n\r\nconst sectionRoutes: Routes = [\r\n    {\r\n        path: 'general',\r\n        loadChildren: () => import('./pages/general/general.module').then(m => m.CoreSettingsGeneralPageModule),\r\n    },\r\n    {\r\n        path: 'spaceusage',\r\n        loadChildren: () => import('./pages/space-usage/space-usage.module').then(m => m.CoreSettingsSpaceUsagePageModule),\r\n    },\r\n    {\r\n        path: 'sync',\r\n        loadChildren: () =>\r\n            import('./pages/synchronization/synchronization.module')\r\n                .then(m => m.CoreSettingsSynchronizationPageModule),\r\n    },\r\n    {\r\n        path: SHAREDFILES_PAGE_NAME,\r\n        loadChildren: () => import('@features/sharedfiles/sharedfiles-lazy.module').then(m => m.CoreSharedFilesLazyModule),\r\n    },\r\n    {\r\n        path: 'about',\r\n        loadChildren: () => import('./pages/about/about.module').then(m => m.CoreSettingsAboutPageModule),\r\n    },\r\n];\r\n\r\nconst mobileRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CoreSettingsIndexPage,\r\n    },\r\n    ...sectionRoutes,\r\n];\r\n\r\nconst tabletRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CoreSettingsIndexPage,\r\n        children: [\r\n            {\r\n                path: '',\r\n                pathMatch: 'full',\r\n                redirectTo: 'general',\r\n            },\r\n            ...sectionRoutes,\r\n        ],\r\n    },\r\n];\r\n\r\nconst routes: Routes = [\r\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\r\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\r\n    {\r\n        path: 'about/deviceinfo',\r\n        loadChildren: () => import('./pages/deviceinfo/deviceinfo.module').then(m => m.CoreSettingsDeviceInfoPageModule),\r\n    },\r\n    {\r\n        path: 'about/licenses',\r\n        loadChildren: () => import('./pages/licenses/licenses.module').then(m => m.CoreSettingsLicensesPageModule),\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n    ],\r\n    declarations: [\r\n        CoreSettingsIndexPage,\r\n    ],\r\n})\r\nexport class CoreSettingsLazyModule {}\r\n"],"sourceRoot":"webpack:///"}